
/
/AStar(start, end, atom, dist, maxnodes, maxnodedepth = 30, mintargetdist, minnodedist, id=null, var/turf/exclude=null)
/AddBan(ckey, computerid, reason, bannedby, temp, minutes, address)
/AddBanjob(ckey, computerid, reason, bannedby, temp, minutes, rank)
/AdminCreateVirus(var/client/user)
/Advance_Mix(var/list/D_list)
/AngleToHue(angle)
/Atan2(x, y)
/AutoUpdateAI(obj/subject)
/AverageColour(var/icon/I)
/BlendHSV(hsv1, hsv2, amount)
/BlendRGB(rgb1, rgb2, amount)
/BlendRGBasHSV(rgb1, rgb2, amount)
/Broadcast_SimpleMessage(var/source, var/frequency, var/text, var/data, var/mob/M, var/compression, var/level)
/CanHug(var/mob/M)
/Ceiling(x)
/Centcomm_announce(var/text , var/mob/Sender)
/CheckBan(var/ckey, var/id, var/address)
/Clamp(val, min, max)
/ClearAllBans()
/ClearAllBansjob()
/ClearTempbans()
/ClearTempbansjob()
/ColorTone(rgb, tone)
/Cot(x)
/CreateBans()
/CreateBansjob()
/Csc(x)
/DBColumn
/DBColumn/New(name_handler,table_handler,position_handler,type_handler,flag_handler,length_handler,max_length_handler)
/DBColumn/SqlTypeName(type_handler=src.sql_type)
/DBConnection
/DBConnection/Connect(dbi_handler=src.dbi,user_handler=src.user,password_handler=src.password,cursor_handler)
/DBConnection/Disconnect() return _dm_db_close(_db_con)
/DBConnection/ErrorMsg() return _dm_db_error_msg(_db_con)
/DBConnection/IsConnected()
/DBConnection/New(dbi_handler,username,password_handler,cursor_handler)
/DBConnection/NewQuery(sql_query,cursor_handler=src.default_cursor) return new/DBQuery(sql_query,src,cursor_handler)
/DBConnection/Quote(str) return _dm_db_quote(_db_con,str)
/DBConnection/SelectDB(database_name,dbi)
/DBQuery
/DBQuery/Close()
/DBQuery/Columns()
/DBQuery/ErrorMsg() return _dm_db_error_msg(_db_query)
/DBQuery/Execute(sql_query=src.sql,cursor_handler=default_cursor)
/DBQuery/GetRowData()
/DBQuery/New(sql_query,DBConnection/connection_handler,cursor_handler)
/DBQuery/NextRow() return _dm_db_next_row(_db_query,item,conversions)
/DBQuery/Quote(str)
/DBQuery/RowCount() return _dm_db_row_count(_db_query)
/DBQuery/RowsAffected() return _dm_db_rows_affected(_db_query)
/DBQuery/SetConversion(column,conversion)
/Default(a, b)
/DirBlockedWithAccess(turf/T, dir, ID)
/DrawPixel(var/icon/I,var/colour,var/drawX,var/drawY)
/DuplicateObject(obj/original, var/perfectcopy = 0 , var/sameloc = 0)
/Ellipsis(original_msg, chance = 50, keep_words)
/Gcd(a, b)
/GetColors(hex)
/GetExp(minutes as num)
/GetExpjob(minutes as num)
/GetFromPool(var/get_type,var/second_arg)
/Get_Angle(atom/movable/start,atom/movable/end)
/Gibberish(t, p)
/GrayScale(rgb)
/HSVtoRGB(hsv)
/HueToAngle(hue)
/InitializeSwapMaps()
/Inverse(x)
/IsAboutEqual(a, b, deviation = 0.1)
/IsEven(x)
/IsGuestKey(key)
/IsInRange(val, min, max)
/IsInteger(x)
/IsMultiple(x, y)
/IsOdd(x)
/Lcm(a, b)
/Lerp(a, b, amount = 0.5)
/LoadBans()
/LoadBansjob()
/Mean(...)
/NewStutter(phrase,stunned)
/NukeNameAssign(var/lastname,var/list/syndicates)
/Nuke_request(var/text , var/mob/Sender)
/PathNode
/PathNode/New(s,p,pg,ph,pnt)
/PathNode/calc_f()
/PathWeightCompare(PathNode/a, PathNode/b)
/PlaceInPool(var/atom/movable/AM, destroy = 1)
/PoolOrNew(var/get_type,var/second_arg)
/PriorityQueue
/PriorityQueue/Dequeue()
/PriorityQueue/Enqueue(var/atom/A)
/PriorityQueue/Get(var/i)
/PriorityQueue/IsEmpty()
/PriorityQueue/List()
/PriorityQueue/New(compare)
/PriorityQueue/ReSort(var/atom/A)
/PriorityQueue/Remove(var/atom/A)
/PriorityQueue/Seek(var/atom/A)
/RGBtoHSV(rgb)
/ReadHSV(hsv)
/ReadRGB(rgb)
/RemoveBan(foldername)
/RemoveBanjob(foldername)
/Root(n, x)
/RotateHue(hsv, angle)
/RoundHealth(health)
/SDQL2_tokenize(query_text)
/SDQL_expression(datum/object, list/expression, start = 1)
/SDQL_from_objs(list/tree)
/SDQL_get_all(type, location)
/SDQL_parse(list/query_list)
/SDQL_testout(list/query_tree, indent = 0)
/SDQL_value(datum/object, list/expression, start = 1)
/SDQL_var(datum/object, list/expression, start = 1)
/ScreenText(obj/O, maptext="", screen_loc="CENTER-7,CENTER-7", maptext_height=480, maptext_width=480)
/Sec(x)
/SeekTurf(var/PriorityQueue/Queue, var/turf/T)
/SetViruses(var/datum/reagent/R, var/list/data)
/Show2Group4Delay(obj/O, list/group, delay=0)
/SimplifyDegrees(degrees)
/SkinCmdRegister(var/mob/user, var/name as text, var/O as obj)
/SolveQuadratic(a, b, c)
/SortAreas()
/Stagger(mob/M,d)
/SwapMaps_AddIconToCache(name,icon)
/SwapMaps_CreateFromTemplate(template_id)
/SwapMaps_DeleteFile(id)
/SwapMaps_Find(id)
/SwapMaps_GetSize(id)
/SwapMaps_Load(id)
/SwapMaps_LoadChunk(chunk_id,turf/locorner)
/SwapMaps_Save(id)
/SwapMaps_SaveChunk(chunk_id,turf/corner1,turf/corner2)
/SwapMaps_Save_All()
/SwapMaps_Unload(id)
/Syndicate_announce(var/text , var/mob/Sender)
/Tan(x)
/ToDegrees(radians)
/ToRadians(degrees)
/TransformUsingVariable(var/input, var/inputmaximum, var/scaling_modifier = 0)
/UpdateTime()
/Wrap(val, min, max)
/_jobban_isbanned(var/client/clientvar, var/rank)
/above_neck(zone)
/active_ais(var/check_mind=0)
/active_free_borgs()
/add_logs(mob/user, mob/target, what_done, var/admin=1, var/object=null, var/addition=null)
/add_lspace(t, u)
/add_radio(var/obj/item/radio, freq)
/add_tspace(t, u)
/add_zero(t, u)
/add_zero2(t, u)
/admin_forcemove(var/mob/mover, var/atom/newloc)
/admin_keyword_to_flag(word, previous_rights=0)
/admin_keyword_to_path(word)
/adminscrub(var/t,var/limit=1024)
/age2agedescription(age)
/alone_in_area(var/area/the_area, var/mob/must_be_alone, var/check_type = /mob/living/carbon)
/angle2dir(var/degree)
/angle2text(var/degree)
/anim(turf/location as turf,target as mob|obj,a_icon,a_icon_state as text,flick_anim as text,sleeptime = 0,direction as num)
/anyprob(value)
/appearance_client_fullban(ckey)
/appearance_fullban(mob/M, reason)
/appearance_isbanned(mob/M)
/appearance_loadbanfile()
/appearance_remove(X)
/appearance_savebanfile()
/appearance_unban(mob/M)
/appearance_updatelegacybans()
/arctan(x)
/area
/area/AIsattele
/area/Adjacent(var/atom/neighbor)
/area/Entered(A)
/area/New()
/area/SetDynamicLighting()
/area/SetLuminosity(new_luminosity)
/area/abductor_ship
/area/addSorted()
/area/addStaticPower(value, powerchannel)
/area/admin
/area/ai_monitored
/area/ai_monitored/Entered(atom/movable/O)
/area/ai_monitored/Exited(atom/movable/O)
/area/ai_monitored/New()
/area/ai_monitored/nuke_storage
/area/ai_monitored/security/armory
/area/ai_monitored/storage/emergency
/area/ai_monitored/storage/eva
/area/ai_monitored/storage/satellite
/area/ai_monitored/storage/secure
/area/aisat
/area/arrival
/area/arrival/start
/area/assembly/assembly_line
/area/assembly/chargebay
/area/assembly/robotics
/area/assembly/showroom
/area/asteroid
/area/asteroid/artifactroom
/area/asteroid/artifactroom/New()
/area/asteroid/cave
/area/atmos
/area/atmosalert(var/danger_level, var/obj/source as obj)
/area/awaycontent
/area/awaycontent/a1
/area/awaycontent/a10
/area/awaycontent/a11
/area/awaycontent/a12
/area/awaycontent/a13
/area/awaycontent/a14
/area/awaycontent/a15
/area/awaycontent/a16
/area/awaycontent/a17
/area/awaycontent/a18
/area/awaycontent/a19
/area/awaycontent/a2
/area/awaycontent/a20
/area/awaycontent/a21
/area/awaycontent/a22
/area/awaycontent/a23
/area/awaycontent/a24
/area/awaycontent/a25
/area/awaycontent/a26
/area/awaycontent/a27
/area/awaycontent/a28
/area/awaycontent/a29
/area/awaycontent/a3
/area/awaycontent/a30
/area/awaycontent/a4
/area/awaycontent/a5
/area/awaycontent/a6
/area/awaycontent/a7
/area/awaycontent/a8
/area/awaycontent/a9
/area/awaymission
/area/awaymission/BMPship
/area/awaymission/BMPship/Aft
/area/awaymission/BMPship/Fore
/area/awaymission/BMPship/Midship
/area/awaymission/academy
/area/awaymission/academy/academyaft
/area/awaymission/academy/academygate
/area/awaymission/academy/classrooms
/area/awaymission/academy/headmaster
/area/awaymission/beach
/area/awaymission/centcomAway
/area/awaymission/centcomAway/cafe
/area/awaymission/centcomAway/courtroom
/area/awaymission/centcomAway/general
/area/awaymission/centcomAway/hangar
/area/awaymission/centcomAway/maint
/area/awaymission/centcomAway/thunderdome
/area/awaymission/challenge/end
/area/awaymission/challenge/main
/area/awaymission/challenge/start
/area/awaymission/desert
/area/awaymission/example
/area/awaymission/listeningpost
/area/awaymission/spacebattle
/area/awaymission/spacebattle/cruiser
/area/awaymission/spacebattle/secret
/area/awaymission/spacebattle/syndicate1
/area/awaymission/spacebattle/syndicate2
/area/awaymission/spacebattle/syndicate3
/area/awaymission/spacebattle/syndicate4
/area/awaymission/spacebattle/syndicate5
/area/awaymission/spacebattle/syndicate6
/area/awaymission/spacebattle/syndicate7
/area/awaymission/syndishuttle
/area/awaymission/wwgov
/area/awaymission/wwmines
/area/awaymission/wwrefine
/area/awaymission/wwvault
/area/awaymission/wwvaultdoors
/area/bridge
/area/bridge/meeting_room
/area/burglaralert(var/obj/trigger)
/area/centcom
/area/centcom/control
/area/centcom/evac
/area/centcom/ferry
/area/centcom/holding
/area/centcom/prison
/area/centcom/supply
/area/chapel/main
/area/chapel/office
/area/clear_usage()
/area/comms
/area/construction
/area/construction/Storage
/area/construction/hallway
/area/construction/qmaint
/area/construction/quarters
/area/construction/solars
/area/construction/solarscontrol
/area/construction/supplyshuttle
/area/copy_contents_to(var/area/A , var/platingRequired = 0 )
/area/crew_quarters
/area/crew_quarters/bar
/area/crew_quarters/cafeteria
/area/crew_quarters/captain
/area/crew_quarters/chief
/area/crew_quarters/courtroom
/area/crew_quarters/fitness
/area/crew_quarters/heads
/area/crew_quarters/hor
/area/crew_quarters/kitchen
/area/crew_quarters/locker
/area/crew_quarters/locker/locker_toilet
/area/crew_quarters/sleep
/area/crew_quarters/sleep_female
/area/crew_quarters/sleep_female/toilet_female
/area/crew_quarters/sleep_male
/area/crew_quarters/sleep_male/toilet_male
/area/crew_quarters/theatre
/area/crew_quarters/toilet
/area/derelict
/area/derelict/arrival
/area/derelict/atmospherics
/area/derelict/bridge
/area/derelict/bridge/access
/area/derelict/bridge/ai_upload
/area/derelict/crew_quarters
/area/derelict/eva
/area/derelict/gravity_generator
/area/derelict/hallway/primary
/area/derelict/hallway/secondary
/area/derelict/medical
/area/derelict/medical/chapel
/area/derelict/medical/morgue
/area/derelict/se_solar
/area/derelict/secret
/area/derelict/ship
/area/derelict/singularity_engine
/area/derelict/solar_control
/area/derelict/storage/engine_storage
/area/derelict/storage/equipment
/area/derelict/storage/storage_access
/area/derelict/teleporter
/area/djstation
/area/djstation/solars
/area/engine
/area/engine/
/area/engine/break_room
/area/engine/chiefs_office
/area/engine/engine_smes
/area/engine/engineering
/area/engine/engineering/poweralert(var/state, var/source)
/area/engine/gravity_generator
/area/engine/secure_construction
/area/firealert(var/obj/source as obj)
/area/firereset(var/obj/source as obj)
/area/gateway
/area/generic
/area/get_apc()
/area/hallway/primary/aft
/area/hallway/primary/central
/area/hallway/primary/fore
/area/hallway/primary/port
/area/hallway/primary/starboard
/area/hallway/secondary/construction
/area/hallway/secondary/entry
/area/hallway/secondary/exit
/area/holodeck
/area/holodeck/alphadeck
/area/holodeck/source_basketball
/area/holodeck/source_beach
/area/holodeck/source_boxingcourt
/area/holodeck/source_burntest
/area/holodeck/source_emptycourt
/area/holodeck/source_plating
/area/holodeck/source_thunderdomecourt
/area/holodeck/source_wildlife
/area/hydroponics
/area/janitor/
/area/lawoffice
/area/library
/area/maintenance
/area/maintenance/aft
/area/maintenance/apmaint
/area/maintenance/asmaint
/area/maintenance/asmaint2
/area/maintenance/atmos_control
/area/maintenance/auxsolarport
/area/maintenance/auxsolarstarboard
/area/maintenance/disposal
/area/maintenance/electrical
/area/maintenance/fore
/area/maintenance/fpmaint
/area/maintenance/fpmaint2
/area/maintenance/fsmaint
/area/maintenance/fsmaint2
/area/maintenance/incinerator
/area/maintenance/maintcentral
/area/maintenance/port
/area/maintenance/portsolar
/area/maintenance/starboard
/area/maintenance/starboardsolar
/area/maintenance/storage
/area/medical/chemistry
/area/medical/cmo
/area/medical/cryo
/area/medical/exam_room
/area/medical/genetics
/area/medical/genetics_cloning
/area/medical/medbay
/area/medical/medbay2
/area/medical/medbay3
/area/medical/morgue
/area/medical/patients_rooms
/area/medical/research
/area/medical/robotics
/area/medical/sleeper
/area/medical/surgery
/area/medical/virology
/area/mine
/area/mine/abandoned
/area/mine/cafeteria
/area/mine/eva
/area/mine/explored
/area/mine/hydroponics
/area/mine/laborcamp
/area/mine/laborcamp/security
/area/mine/living_quarters
/area/mine/lobby
/area/mine/maintenance
/area/mine/north_outpost
/area/mine/production
/area/mine/sleeper
/area/mine/storage
/area/mine/unexplored
/area/mine/west_outpost
/area/mint
/area/partyalert()
/area/partyreset()
/area/planet/clown
/area/power_change()
/area/poweralert(var/state, var/obj/source as obj)
/area/powered(var/chan)
/area/prison
/area/prison/arrival_airlock
/area/prison/cell_block/A
/area/prison/cell_block/B
/area/prison/cell_block/C
/area/prison/closet
/area/prison/control
/area/prison/crew_quarters
/area/prison/hallway/aft
/area/prison/hallway/fore
/area/prison/hallway/port
/area/prison/hallway/starboard
/area/prison/medical
/area/prison/medical_research
/area/prison/morgue
/area/prison/podbay
/area/prison/rec_room
/area/prison/solar
/area/prison/solar_control
/area/prison/solitary
/area/quartermaster
/area/quartermaster/mechbay
/area/quartermaster/miningdock
/area/quartermaster/miningstorage
/area/quartermaster/office
/area/quartermaster/qm
/area/quartermaster/sorting
/area/quartermaster/storage
/area/readyalert()
/area/readyreset()
/area/security/armory
/area/security/brig
/area/security/checkpoint
/area/security/checkpoint/engineering
/area/security/checkpoint/medical
/area/security/checkpoint/science
/area/security/checkpoint/supply
/area/security/checkpoint2
/area/security/detectives_office
/area/security/hos
/area/security/main
/area/security/nuke_storage
/area/security/prison
/area/security/processing
/area/security/range
/area/security/transfer
/area/security/vacantoffice
/area/security/warden
/area/server
/area/set_fire_alarm_effect()
/area/shuttle
/area/shuttle/abandoned
/area/shuttle/arrival
/area/shuttle/escape
/area/shuttle/labor
/area/shuttle/mining
/area/shuttle/pod_1
/area/shuttle/pod_2
/area/shuttle/pod_3
/area/shuttle/pod_4
/area/shuttle/supply
/area/shuttle/syndicate
/area/shuttle/transport
/area/solar
/area/solar/aft
/area/solar/auxport
/area/solar/auxstarboard
/area/solar/derelict_aft
/area/solar/derelict_starboard
/area/solar/fore
/area/solar/port
/area/solar/starboard
/area/space
/area/space/powered(chan)
/area/space/updateicon()
/area/spacecontent
/area/spacecontent/a1
/area/spacecontent/a10
/area/spacecontent/a11
/area/spacecontent/a12
/area/spacecontent/a13
/area/spacecontent/a14
/area/spacecontent/a15
/area/spacecontent/a16
/area/spacecontent/a17
/area/spacecontent/a18
/area/spacecontent/a19
/area/spacecontent/a2
/area/spacecontent/a20
/area/spacecontent/a21
/area/spacecontent/a22
/area/spacecontent/a23
/area/spacecontent/a24
/area/spacecontent/a25
/area/spacecontent/a26
/area/spacecontent/a27
/area/spacecontent/a28
/area/spacecontent/a29
/area/spacecontent/a3
/area/spacecontent/a30
/area/spacecontent/a4
/area/spacecontent/a5
/area/spacecontent/a6
/area/spacecontent/a7
/area/spacecontent/a8
/area/spacecontent/a9
/area/start
/area/storage/art
/area/storage/autolathe
/area/storage/auxillary
/area/storage/emergency
/area/storage/emergency2
/area/storage/eva
/area/storage/primary
/area/storage/secure
/area/storage/tech
/area/storage/testroom
/area/storage/tools
/area/syndicate_mothership
/area/syndicate_mothership/control
/area/syndicate_mothership/elite_squad
/area/tcommsat
/area/tcommsat/chamber
/area/tcommsat/computer
/area/tcommsat/entrance
/area/tcommsat/lounge
/area/tcommsat/server
/area/tdome
/area/tdome/arena
/area/tdome/arena_source
/area/tdome/tdome1
/area/tdome/tdome2
/area/tdome/tdomeadmin
/area/tdome/tdomeobserve
/area/teleporter
/area/telesciareas
/area/toxins/explab
/area/toxins/lab
/area/toxins/mineral_storeroom
/area/toxins/misc_lab
/area/toxins/mixing
/area/toxins/server
/area/toxins/storage
/area/toxins/test_area
/area/toxins/xenobiology
/area/turret_protected
/area/turret_protected/
/area/turret_protected/AIsatextAP
/area/turret_protected/AIsatextAS
/area/turret_protected/AIsatextFP
/area/turret_protected/AIsatextFS
/area/turret_protected/Entered(O)
/area/turret_protected/Exited(O)
/area/turret_protected/NewAIMain
/area/turret_protected/ai
/area/turret_protected/ai_upload
/area/turret_protected/ai_upload_foyer
/area/turret_protected/aisat
/area/turret_protected/aisat_interior
/area/turret_protected/subjectDied(target)
/area/turret_protected/tcomeast
/area/turret_protected/tcomfoyer
/area/turret_protected/tcomsat
/area/turret_protected/tcomwest
/area/updateicon()
/area/usage(var/chan)
/area/use_power(var/amount, var/chan)
/area/wizard_station
/area/wreck/ai
/area/wreck/bridge
/area/wreck/engineering
/area/wreck/main
/area_contents(var/area/A)
/atom
/atom/AIAltClick(var/mob/living/silicon/ai/user)
/atom/AICtrlClick()
/atom/AICtrlShiftClick()
/atom/AIShiftClick()
/atom/AddLuminosity(delta_luminosity)
/atom/Adjacent(var/atom/neighbor)
/atom/AltClick(var/mob/user)
/atom/Beam(atom/BeamTarget,icon_state="b_beam",icon='icons/effects/beam.dmi',time=50, maxdistance=10)
/atom/BorgAltClick(var/mob/living/silicon/robot/user)
/atom/BorgCtrlClick(var/mob/living/silicon/robot/user)
/atom/BorgCtrlShiftClick(var/mob/living/silicon/robot/user)
/atom/BorgShiftClick(var/mob/living/silicon/robot/user)
/atom/Bumped(AM as mob|obj)
/atom/CanPass(atom/movable/mover, turf/target, height=1.5)
/atom/CheckExit()
/atom/CheckParts()
/atom/Click(location,control,params)
/atom/CtrlClick(var/mob/user)
/atom/CtrlShiftClick(var/mob/user)
/atom/DblClick(location,control,params)
/atom/DrawPixelOn(var/colour, var/drawX, var/drawY)
/atom/GetAllContents()
/atom/GetTypeInAllContents(typepath)
/atom/HasProximity(atom/movable/AM as mob|obj)
/atom/MouseDrop(atom/over)
/atom/MouseDrop_T(atom/dropping, mob/user)
/atom/New()
/atom/Read(savefile/S)
/atom/SetLuminosity(new_luminosity)
/atom/SetOpacity(new_opacity)
/atom/ShiftClick(var/mob/user)
/atom/SpinAnimation(speed = 10, loops = -1)
/atom/UpdateAffectingLights()
/atom/Write(savefile/S)
/atom/acid_act(var/acidpwr, var/toxpwr, var/acid_volume)
/atom/add_blood(mob/living/carbon/M)
/atom/add_blood_floor(mob/living/carbon/M as mob)
/atom/add_blood_list(mob/living/carbon/M)
/atom/add_fibers(mob/living/carbon/human/M)
/atom/add_fingerprint(mob/living/M as mob, ignoregloves = 0)
/atom/add_hiddenprint(mob/living/M as mob)
/atom/add_to_all_data_huds()
/atom/add_vomit_floor(mob/living/carbon/M as mob, var/toxvomit = 0)
/atom/allow_drop()
/atom/assume_air(datum/gas_mixture/giver)
/atom/attack_ai(mob/user as mob)
/atom/attack_alien(mob/user as mob)
/atom/attack_animal(mob/user as mob)
/atom/attack_ghost(mob/dead/observer/user as mob)
/atom/attack_hand(mob/user as mob)
/atom/attack_hulk(mob/living/carbon/human/hulk, do_attack_animation = 0)
/atom/attack_larva(mob/user as mob)
/atom/attack_paw(mob/user as mob)
/atom/attack_robot(mob/user as mob)
/atom/attack_self_tk(mob/user)
/atom/attack_slime(mob/user as mob)
/atom/attack_tk(mob/user)
/atom/attackby(obj/item/W, mob/user, params)
/atom/audible_message(var/message, var/deaf_message, var/hearing_distance)
/atom/auto_turn()
/atom/blob_act()
/atom/blood_splatter_index()
/atom/bullet_act(obj/item/projectile/P, def_zone)
/atom/check_eye(user as mob)
/atom/clean_blood()
/atom/contents_explosion(severity, target)
/atom/create_reagents(var/max_vol)
/atom/emag_act()
/atom/emp_act(var/severity)
/atom/ex_act(severity, target)
/atom/examine(mob/user)
/atom/findSmoothingNeighbors()
/atom/fire_act()
/atom/generate_female_clothing(index,t_color,icon,type)
/atom/get_global_map_pos()
/atom/get_light_range(radius)
/atom/handle_fall()
/atom/handle_slip()
/atom/hitby(atom/movable/AM as mob|obj)
/atom/in_contents_of(container)
/atom/investigate_log(var/message, var/subject)
/atom/isSmoothableNeighbor(var/atom/A)
/atom/is_open_container()
/atom/isinspace()
/atom/mech_melee_attack(obj/mecha/M)
/atom/movable
/atom/movable/Adjacent(var/atom/neighbor)
/atom/movable/BlockSuperconductivity()
/atom/movable/Bump(var/atom/A as mob|obj|turf|area, yes)
/atom/movable/CanAtmosPass()
/atom/movable/Crossed(atom/movable/AM)
/atom/movable/CtrlClick(var/mob/user)
/atom/movable/Del()
/atom/movable/Destroy()
/atom/movable/GetJob()
/atom/movable/GetRadio()
/atom/movable/GetSource()
/atom/movable/GetVoice()
/atom/movable/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/atom/movable/IsVocal()
/atom/movable/Move(atom/newloc, direct = 0)
/atom/movable/Moved(atom/OldLoc, Dir)
/atom/movable/New()
/atom/movable/Process_Spacemove(var/movement_dir = 0)
/atom/movable/ResetVars()
/atom/movable/UpdateAffectingLights()
/atom/movable/air_update_turf(var/command = 0)
/atom/movable/atmos_spawn_air(var/text, var/amount)
/atom/movable/attackby(obj/item/W, mob/living/user, params)
/atom/movable/can_speak()
/atom/movable/checkpass(passflag)
/atom/movable/compose_job(atom/movable/speaker, message_langs, raw_message, radio_freq)
/atom/movable/compose_message(atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/atom/movable/compose_track_href(atom/movable/speaker, message_langs, raw_message, radio_freq)
/atom/movable/disposalEnterTry()
/atom/movable/do_attack_animation(atom/A, end_pixel_y)
/atom/movable/experience_pressure_difference(pressure_difference, direction)
/atom/movable/forceMove(atom/destination)
/atom/movable/get_alt_name()
/atom/movable/get_light_range(radius)
/atom/movable/get_spans()
/atom/movable/hit_check()
/atom/movable/initialize()
/atom/movable/lang_treat(atom/movable/speaker, message_langs, raw_message, list/spans)
/atom/movable/light
/atom/movable/light/Destroy()
/atom/movable/light/Move()
/atom/movable/move_update_air(var/turf/T)
/atom/movable/newtonian_move(direction)
/atom/movable/overlay
/atom/movable/overlay/New()
/atom/movable/overlay/attack_hand(a, b, c)
/atom/movable/overlay/attack_paw(a, b, c)
/atom/movable/overlay/attackby(a, b, c)
/atom/movable/pipe_eject(var/direction)
/atom/movable/proc/atmos_spawn_air(var/text, var/amount)
/atom/movable/proc/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/atom/movable/say(message)
/atom/movable/say_quote(input, list/spans)
/atom/movable/send_speech(message, range = 7, obj/source = src, bubble_type, list/spans)
/atom/movable/throw_at(atom/target, range, speed)
/atom/movable/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/atom/movable/virtualspeaker
/atom/movable/virtualspeaker/GetJob()
/atom/movable/virtualspeaker/GetRadio()
/atom/movable/virtualspeaker/GetSource()
/atom/move_camera_by_click()
/atom/narsie_act()
/atom/ninjadrain_act()
/atom/onCentcom()
/atom/onSyndieBase()
/atom/on_reagent_change()
/atom/playsound_local(var/turf/turf_source, soundin, vol as num, vary, frequency, falloff, surround = 1)
/atom/proc/hitby(atom/movable/AM as mob|obj)
/atom/rejects_blood()
/atom/relativewall()
/atom/relativewall_neighbours()
/atom/relaymove()
/atom/remove_air(amount)
/atom/remove_from_all_data_huds()
/atom/return_air()
/atom/search_contents_for(path,list/filter_path=null)
/atom/singularity_act()
/atom/singularity_pull()
/atom/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/atom/telecomms_process()
/atom/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/atom/test_telecomms()
/atom/throw_impact(atom/hit_atom)
/atom/transfer_ai(var/interaction, var/mob/user, var/mob/living/silicon/ai/AI, var/obj/item/device/aicard/card)
/atom/transfer_fingerprints_to(var/atom/A)
/atom/update_pipe_vision(var/atom/new_loc = null)
/atom/var/list/suit_fibers
/atom/verb/find_references()
/atom/visible_message(var/message, var/blind_message)
/attach_spans(input, list/spans)
/attempt_initiate_surgery(obj/item/I, mob/living/M, mob/user)
/auto_toggle_ooc(var/on)
/ban_unban_log_save(var/formatted_log)
/bitfield2list(bitfield = 0, list/wordlist)
/blendMode2iconMode(blend_mode)
/blood_incompatible(donor,receiver,donor_species,receiver_species)
/blood_splatter(var/target,var/datum/reagent/blood/source,var/large)
/body_parts_covered2organ_names(var/bpc)
/build_click(var/mob/user, buildmode, params, var/obj/object)
/build_composite_icon(atom/A)
/camera_sort(list/L)
/can_embed(obj/item/W)
/can_see(var/atom/source, var/atom/target, var/length=5)
/capitalize(var/t as text)
/cardinalrange(var/center)
/change_command_name(var/name)
/cheap_hypotenuse(Ax,Ay,Bx,By)
/cheap_pythag(var/dx, var/dy)
/check_dna_integrity(mob/living/carbon/character)
/check_if_greater_rights_than(client/other)
/check_rights(rights_required, show_msg=1)
/check_rights_for(client/subject, rights_required)
/check_tank_exists(parent_tank, var/mob/living/carbon/human/M, var/obj/O)
/check_target_facings(mob/living/initator, mob/living/target)
/check_whitelist(mob/M )
/check_zone(zone)
/chemscan(var/mob/living/user, var/mob/living/M)
/church_name()
/circlerange(center=usr,radius=3)
/circlerangeturfs(center=usr,radius=3)
/circleview(center=usr,radius=3)
/circleviewturfs(center=usr,radius=3)
/clean_dna(mob/living/carbon/M)
/clean_randmut(mob/living/carbon/M, list/candidates, difficulty = 2)
/clearlist(list/list)
/client
/client/AIMove(n, direct, var/mob/living/silicon/ai/user)
/client/AllowUpload(filename, filelength)
/client/Cell()
/client/Center()
/client/DB_ban_panel()
/client/Debug2()
/client/Del()
/client/Getkey()
/client/Getmob(var/mob/M in mob_list)
/client/Move(n, direct)
/client/Move_object(direct)
/client/New(TopicData)
/client/Northeast()
/client/Northwest()
/client/Process_Grab()
/client/Process_Incorpmove(direct)
/client/SDQL2_query(query_text as message)
/client/Southeast()
/client/Southwest()
/client/Topic(href, href_list, hsrc)
/client/add_admin_verbs()
/client/add_verbs_from_config()
/client/admin_call_shuttle()
/client/admin_cancel_shuttle()
/client/admin_change_sec_level()
/client/admin_ghost()
/client/admin_memo(task in list("write","show","delete"))
/client/admin_memo_delete()
/client/admin_memo_show()
/client/admin_memo_write()
/client/air_status(turf/target as turf)
/client/atmosscan()
/client/bluespace_artillery(var/mob/M in mob_list)
/client/browse_files(root="data/logs/", max_iterations=10, list/valid_extensions=list(".txt",".log",".htm"))
/client/callproc()
/client/callproc_datum(var/atom/A as null|area|mob|obj|turf)
/client/camera_view()
/client/check_ai_laws()
/client/check_antagonists()
/client/check_bomb_impacts()
/client/check_words()
/client/cinematic(var/cinematic as anything in list("explosion",null))
/client/cmd_admin_add_freeform_ai_law()
/client/cmd_admin_add_random_ai_law()
/client/cmd_admin_alienize(var/mob/M in mob_list)
/client/cmd_admin_animalize(var/mob/M in mob_list)
/client/cmd_admin_areatest()
/client/cmd_admin_attack_log(mob/M as mob in mob_list)
/client/cmd_admin_blobize(var/mob/M in mob_list)
/client/cmd_admin_check_contents(mob/living/M as mob in mob_list)
/client/cmd_admin_create_centcom_report()
/client/cmd_admin_delete(atom/O as obj|mob|turf in world)
/client/cmd_admin_direct_narrate(var/mob/M)
/client/cmd_admin_dress(var/mob/living/carbon/human/M in mob_list)
/client/cmd_admin_drop_everything(mob/M as mob in mob_list)
/client/cmd_admin_emp(atom/O as obj|mob|turf in world)
/client/cmd_admin_explosion(atom/O as obj|mob|turf in world)
/client/cmd_admin_gib(mob/M as mob in mob_list)
/client/cmd_admin_gib_self()
/client/cmd_admin_godmode(mob/M as mob in mob_list)
/client/cmd_admin_grantfullaccess(var/mob/M in mob_list)
/client/cmd_admin_list_open_jobs()
/client/cmd_admin_ninjafy(var/mob/living/carbon/human/H in player_list)
/client/cmd_admin_pm(whom, msg)
/client/cmd_admin_pm_context(mob/M as mob in mob_list)
/client/cmd_admin_pm_panel()
/client/cmd_admin_rejuvenate(mob/living/M as mob in mob_list)
/client/cmd_admin_robotize(var/mob/M in mob_list)
/client/cmd_admin_say(msg as text)
/client/cmd_admin_slimeize(var/mob/M in mob_list)
/client/cmd_admin_subtle_message(mob/M as mob in mob_list)
/client/cmd_admin_world_narrate()
/client/cmd_assume_direct_control(var/mob/M in mob_list)
/client/cmd_debug_del_all(var/object as text)
/client/cmd_debug_make_powernets()
/client/cmd_debug_mob_lists()
/client/cmd_display_del_log()
/client/cmd_mass_modify_object_variables(atom/A, var/var_name)
/client/cmd_modify_ticker_variables()
/client/count_movable_instances()
/client/count_objects_all()
/client/count_objects_on_z_level()
/client/createStealthKey()
/client/deadchat()
/client/deadmin()
/client/deadmin_self()
/client/debugNatureMapGenerator()
/client/debug_controller(controller in list("Master","Failsafe","Ticker","Jobs","Radio","Configuration", "Cameras"))
/client/debug_variable(name, value, level, var/datum/DA = null)
/client/debug_variables(datum/D in world)
/client/disable_communication()
/client/do_not_use_these()
/client/drop_bomb()
/client/dsay(msg as text)
/client/edit_admin_permissions()
/client/enable_debug_verbs()
/client/everyone_random()
/client/file_spam_check()
/client/findStealthKey(txt)
/client/fix_next_move()
/client/forceEvent()
/client/fps()
/client/game_panel()
/client/getFiles()
/client/get_callproc_args()
/client/getruntimelog()
/client/getserverlog()
/client/give_disease(mob/T as mob in mob_list)
/client/give_spell(mob/T as mob in mob_list)
/client/giveruntimelog()
/client/handle_spam_prevention(var/message, var/mute_type)
/client/hide_most_verbs()
/client/hide_verbs()
/client/intercom_view()
/client/investigate_show( subject in list("hrefs","notes","ntsl","singulo","wires","telesci", "gravity", "records", "cargo", "supermatter", "atmos", "experimentor", "kudzu") )
/client/invisimin()
/client/is_afk(duration=3000)
/client/is_content_unlocked()
/client/jobbans()
/client/jumptoarea(area/A in sortedAreas)
/client/jumptocoord(tx as num, ty as num, tz as num)
/client/jumptokey()
/client/jumptomob(var/mob/M in mob_list)
/client/jumptoturf(var/turf/T in world)
/client/makepAI(var/turf/T in mob_list)
/client/massmodify_variables(var/atom/O, var/var_name = "", var/method = 0)
/client/mod_list(var/list/L, atom/O, original_name, objectvar)
/client/mod_list_add(var/list/L, atom/O, original_name, objectvar)
/client/mod_list_add_ass()
/client/modify_variables(var/atom/O, var/param_var_name = null, var/autodetect_class = 0)
/client/object_say(var/obj/O in world)
/client/one_click_antag()
/client/only_one()
/client/panicbunker()
/client/play_local_sound(S as sound)
/client/play_sound(S as sound)
/client/player_panel_new()
/client/playtitlemusic()
/client/powerdebug()
/client/print_jobban_old()
/client/print_jobban_old_filter()
/client/print_pointers()
/client/proc/cmd_admin_slimeize(var/mob/M in mob_list)
/client/proc/count_objects_all()
/client/radio_report()
/client/readmin()
/client/reestablish_db_connection()
/client/reload_admins()
/client/remove_admin_verbs()
/client/reset_all_tcs()
/client/reset_ooc()
/client/respawn_character()
/client/restart_controller(controller in list("Master","Failsafe"))
/client/sec_camera_report()
/client/secrets()
/client/self_notes()
/client/send_resources()
/client/send_space_ninja()
/client/sendmob(var/mob/M in sortmobs())
/client/set_client_age_from_db()
/client/set_ooc(newColor as color)
/client/set_round_end_sound(S as sound)
/client/show_verbs()
/client/startSinglo()
/client/stealth()
/client/stop_sounds()
/client/sync_client_with_db()
/client/test_movable_UI()
/client/test_snap_UI()
/client/toggle_hear_radio()
/client/toggle_log_hrefs()
/client/toggle_nuke(obj/machinery/nuclearbomb/N in nuke_list)
/client/toggle_random_events()
/client/toggle_view_range()
/client/toggleadminhelpsound()
/client/togglebuildmodeself()
/client/toggleprayers()
/client/triple_ai()
/client/unban_panel()
/client/unjobban_panel()
/client/var/running_find_references
/client/verb/Toggle_Soundscape()
/client/verb/admin_notice()
/client/verb/adminhelp(msg as text)
/client/verb/adminwho()
/client/verb/attack_self()
/client/verb/changerank(newrank in admin_ranks)
/client/verb/changerights(newrights as num)
/client/verb/changes()
/client/verb/colorooc()
/client/verb/delete_key_pressed()
/client/verb/drop_item()
/client/verb/exittcs()
/client/verb/forum()
/client/verb/github()
/client/verb/hotkeys_help()
/client/verb/listen_ooc()
/client/verb/motd()
/client/verb/nanoclose(var/uiref as text)
/client/verb/ooc(msg as text)
/client/verb/pick_form()
/client/verb/purge_all_destroyed_objects()
/client/verb/reportissue()
/client/verb/resetcolorooc()
/client/verb/rules()
/client/verb/showrevinfo()
/client/verb/swap_hand()
/client/verb/tcsclearmem()
/client/verb/tcscompile()
/client/verb/tcsrevert()
/client/verb/tcsrun()
/client/verb/tcssave()
/client/verb/togglePRs()
/client/verb/toggle_be_special(role in be_special_flags)
/client/verb/toggle_ghost_ears()
/client/verb/toggle_ghost_pda()
/client/verb/toggle_ghost_radio()
/client/verb/toggle_ghost_sight()
/client/verb/toggle_ghost_whispers()
/client/verb/toggle_instruments()
/client/verb/toggle_intent_style()
/client/verb/toggle_member_publicity()
/client/verb/toggle_ship_ambience()
/client/verb/togglemidis()
/client/verb/togglemidroundantag()
/client/verb/toggleprayersounds()
/client/verb/toggletitlemusic()
/client/verb/who()
/client/verb/wiki()
/client/verb/windowclose(var/atomref as text)
/client/view_var_Topic(href, href_list, hsrc)
/cmd_admin_mute(whom, mute_type, automute = 0)
/cmp_ckey_asc(client/a, client/b)
/cmp_ckey_dsc(client/a, client/b)
/cmp_name_asc(atom/a, atom/b)
/cmp_name_dsc(atom/a, atom/b)
/cmp_numeric_asc(a,b)
/cmp_numeric_dsc(a,b)
/cmp_records_asc(datum/data/record/a, datum/data/record/b)
/cmp_records_dsc(datum/data/record/a, datum/data/record/b)
/cmp_rped_sort(var/obj/item/weapon/stock_parts/A, var/obj/item/weapon/stock_parts/B)
/cmp_subsystem_priority(datum/subsystem/a, datum/subsystem/b)
/cmp_text_asc(a,b)
/cmp_text_dsc(a,b)
/color2hex(var/color)
/command_name()
/construct_block(value, values, blocksize=3)
/convert2energy(var/M)
/convert2mass(var/E)
/count_by_type(var/list/L, type)
/createRandomZlevel()
/create_dna(mob/living/carbon/C, datum/species/S)
/create_ninja_mind(key)
/create_space_ninja(spawn_loc)
/create_xeno(ckey)
/crewmonitor(mob/user,var/atom/source)
/crewscan()
/cultist_commune(var/mob/living/user, var/clear = 0, var/say = 0, var/message)
/datum
/datum/AI_Module
/datum/AI_Module/large/
/datum/AI_Module/large/break_air_alarms
/datum/AI_Module/large/break_fire_alarms
/datum/AI_Module/large/disable_rcd
/datum/AI_Module/large/fireproof_core
/datum/AI_Module/large/lockdown
/datum/AI_Module/large/mecha_domination
/datum/AI_Module/large/place_cyborg_transformer
/datum/AI_Module/large/place_cyborg_transformer/New()
/datum/AI_Module/large/upgrade_turrets
/datum/AI_Module/small/
/datum/AI_Module/small/blackout
/datum/AI_Module/small/overload_machine
/datum/AI_Module/small/override_machine
/datum/AI_Module/small/reactivate_camera
/datum/AI_Module/small/upgrade_camera
/datum/Destroy()
/datum/SDQL_parser
/datum/SDQL_parser/New(query_list)
/datum/SDQL_parser/assignment(i, list/node)
/datum/SDQL_parser/assignments(i, list/node)
/datum/SDQL_parser/binary_operator(i, list/node)
/datum/SDQL_parser/bool_expression(i, list/node)
/datum/SDQL_parser/bool_operator(i, list/node)
/datum/SDQL_parser/call_function(i, list/node, list/arguments)
/datum/SDQL_parser/call_query(i, list/node)
/datum/SDQL_parser/comparitor(i, list/node)
/datum/SDQL_parser/delete_query(i, list/node)
/datum/SDQL_parser/expression(i, list/node)
/datum/SDQL_parser/from_item(i, list/node)
/datum/SDQL_parser/from_list(i, list/node)
/datum/SDQL_parser/object_type(i, list/node)
/datum/SDQL_parser/parse()
/datum/SDQL_parser/parse_error(error_message)
/datum/SDQL_parser/query(i, list/node)
/datum/SDQL_parser/select_function(i, list/node)
/datum/SDQL_parser/select_item(i, list/node)
/datum/SDQL_parser/select_list(i, list/node)
/datum/SDQL_parser/select_query(i, list/node)
/datum/SDQL_parser/string(i, list/node)
/datum/SDQL_parser/token(i)
/datum/SDQL_parser/tokenl(i)
/datum/SDQL_parser/tokens(i, num)
/datum/SDQL_parser/unary_expression(i, list/node)
/datum/SDQL_parser/update_query(i, list/node)
/datum/SDQL_parser/value(i, list/node)
/datum/SDQL_parser/variable(i, list/node)
/datum/TCS_Compiler
/datum/TCS_Compiler/Compile(code as message)
/datum/TCS_Compiler/GC()
/datum/TCS_Compiler/Run(var/datum/signal/signal)
/datum/TCS_Compiler/proc/Run(var/datum/signal/signal)
/datum/action
/datum/action/Activate()
/datum/action/CheckRemoval(mob/living/user)
/datum/action/Checks()
/datum/action/Deactivate()
/datum/action/Destroy()
/datum/action/Grant(mob/living/T)
/datum/action/IsAvailable()
/datum/action/New(var/Target)
/datum/action/Process()
/datum/action/Remove(mob/living/T)
/datum/action/Trigger()
/datum/action/UpdateName()
/datum/action/camera_jump
/datum/action/camera_jump/Activate()
/datum/action/camera_off
/datum/action/camera_off/Activate()
/datum/action/camera_off/abductor/Activate()
/datum/action/item_action
/datum/action/item_action/CheckRemoval(mob/living/user)
/datum/action/item_action/hands_free
/datum/action/spell_action
/datum/action/spell_action/CheckRemoval()
/datum/action/spell_action/IsAvailable()
/datum/action/spell_action/UpdateName()
/datum/action/spell_action/alien
/datum/action/spell_action/alien/CheckRemoval()
/datum/action/spell_action/alien/IsAvailable()
/datum/action/spell_action/alien/UpdateName()
/datum/action/teleport_in
/datum/action/teleport_in/Activate()
/datum/action/teleport_out
/datum/action/teleport_out/Activate()
/datum/action/teleport_self
/datum/action/teleport_self/Activate()
/datum/action/vest_disguise_swap
/datum/action/vest_disguise_swap/Activate()
/datum/action/vest_mode_swap
/datum/action/vest_mode_swap/Activate()
/datum/admin_rank
/datum/admin_rank/New(init_name, init_rights, list/init_adds, list/init_subs)
/datum/admin_rank/process_keyword(word, previous_rights=0)
/datum/admins
/datum/admins/DB_ban_edit(var/banid = null, var/param = null)
/datum/admins/DB_ban_panel(var/playerckey = null, var/adminckey = null)
/datum/admins/DB_ban_record(var/bantype, var/mob/banned_mob, var/duration = -1, var/reason, var/job = "", var/rounds = 0, var/banckey = null, var/banip = null, var/bancid = null)
/datum/admins/DB_ban_unban(var/ckey, var/bantype, var/job = "")
/datum/admins/DB_ban_unban_by_id(var/id)
/datum/admins/Game()
/datum/admins/Jobbans()
/datum/admins/New(datum/admin_rank/R, ckey)
/datum/admins/Secrets()
/datum/admins/Secrets_topic(var/item,var/href_list)
/datum/admins/Topic(href, href_list)
/datum/admins/access_news_network()
/datum/admins/announce()
/datum/admins/associate(client/C)
/datum/admins/check_antagonists()
/datum/admins/check_if_greater_rights_than_holder(datum/admins/other)
/datum/admins/check_keyword(word)
/datum/admins/cmd_ghost_drag(var/mob/dead/observer/frommob, var/mob/living/tomob)
/datum/admins/create_mob(var/mob/user)
/datum/admins/create_object(var/mob/user)
/datum/admins/create_turf(var/mob/user)
/datum/admins/delay()
/datum/admins/disassociate()
/datum/admins/edit_admin_permissions()
/datum/admins/edit_rights_topic(list/href_list)
/datum/admins/forceEvent()
/datum/admins/getCandidates(var/Question, var/jobbanType, var/datum/game_mode/gametypeCheck)
/datum/admins/log_admin_permission_modification(var/adm_ckey, var/new_permission)
/datum/admins/log_admin_rank_modification(var/adm_ckey, var/new_rank)
/datum/admins/makeAbductorTeam()
/datum/admins/makeAliens()
/datum/admins/makeBody(var/mob/dead/observer/G_found)
/datum/admins/makeChanglings()
/datum/admins/makeCult()
/datum/admins/makeDeathsquad()
/datum/admins/makeEmergencyresponseteam()
/datum/admins/makeGangsters()
/datum/admins/makeMalfAImode()
/datum/admins/makeNukeTeam()
/datum/admins/makeOfficial()
/datum/admins/makeRevenant()
/datum/admins/makeRevs()
/datum/admins/makeShadowling()
/datum/admins/makeSpaceNinja()
/datum/admins/makeTraitors()
/datum/admins/makeWizard()
/datum/admins/manage_free_slots()
/datum/admins/notes_gethtml(var/ckey)
/datum/admins/notes_show(var/ckey)
/datum/admins/one_click_antag()
/datum/admins/output_ai_laws()
/datum/admins/player_panel_new()
/datum/admins/quick_create_object(var/mob/user)
/datum/admins/restart()
/datum/admins/set_admin_notice()
/datum/admins/show_player_panel(var/mob/M in mob_list)
/datum/admins/show_traitor_panel(var/mob/M in mob_list)
/datum/admins/spawn_atom(var/object as text)
/datum/admins/startnow()
/datum/admins/toggleAI()
/datum/admins/toggleaban()
/datum/admins/toggleenter()
/datum/admins/toggleguests()
/datum/admins/toggleooc()
/datum/admins/toggleoocdead()
/datum/admins/toggletintedweldhelmets()
/datum/admins/unbanpanel()
/datum/admins/unjobbanpanel()
/datum/admins/unprison(var/mob/M in mob_list)
/datum/admins/updateranktodb(ckey,newrank)
/datum/admins/view_atk_log()
/datum/admins/view_txt_log()
/datum/ai_laws
/datum/ai_laws/add_inherent_law(var/law)
/datum/ai_laws/add_ion_law(var/law)
/datum/ai_laws/add_supplied_law(var/number, var/law)
/datum/ai_laws/antimov
/datum/ai_laws/asimovpp
/datum/ai_laws/associate(var/mob/living/silicon/M)
/datum/ai_laws/clear_inherent_laws()
/datum/ai_laws/clear_ion_laws()
/datum/ai_laws/clear_supplied_laws()
/datum/ai_laws/clear_zeroth_law(var/force)
/datum/ai_laws/custom
/datum/ai_laws/custom/New()
/datum/ai_laws/default/asimov
/datum/ai_laws/default/corporate
/datum/ai_laws/default/paladin
/datum/ai_laws/malfunction
/datum/ai_laws/malfunction/New()
/datum/ai_laws/ninja_override
/datum/ai_laws/pai
/datum/ai_laws/robocop
/datum/ai_laws/set_zeroth_law(var/law, var/law_borg = null)
/datum/ai_laws/show_laws(var/who)
/datum/ai_laws/syndicate_override
/datum/ai_laws/tyrant
/datum/airlock_maker
/datum/airlock_maker/New(var/atom/target_loc)
/datum/airlock_maker/Topic(var/href,var/list/href_list)
/datum/airlock_maker/interact()
/datum/airlock_maker/linkpretty(href,desc,active)
/datum/atom_hud
/datum/atom_hud/add_hud_to(var/mob/M)
/datum/atom_hud/add_to_hud(var/atom/A)
/datum/atom_hud/add_to_single_hud(var/mob/M, var/atom/A)
/datum/atom_hud/antag
/datum/atom_hud/antag/join_hud(var/mob/living/M)
/datum/atom_hud/antag/leave_hud(var/mob/living/M)
/datum/atom_hud/data
/datum/atom_hud/data/medical
/datum/atom_hud/data/medical/advanced
/datum/atom_hud/data/medical/basic
/datum/atom_hud/data/medical/basic/add_to_single_hud(var/mob/M, var/mob/living/carbon/H)
/datum/atom_hud/data/medical/basic/check_sensors(var/mob/living/carbon/human/H)
/datum/atom_hud/data/medical/basic/update_suit_sensors(var/mob/living/carbon/H)
/datum/atom_hud/data/security
/datum/atom_hud/data/security/advanced
/datum/atom_hud/data/security/basic
/datum/atom_hud/remove_from_hud(var/atom/A)
/datum/atom_hud/remove_from_single_hud(var/mob/M, var/atom/A)
/datum/atom_hud/remove_hud_from(var/mob/M)
/datum/barsign
/datum/barsign/combocafe
/datum/barsign/emergencyrumparty
/datum/barsign/harmbaton
/datum/barsign/hiddensigns
/datum/barsign/hiddensigns/empbarsign
/datum/barsign/hiddensigns/signoff
/datum/barsign/hiddensigns/syndibarsign
/datum/barsign/honkednloaded
/datum/barsign/maltesefalcon
/datum/barsign/officerbeersky
/datum/barsign/oldcockinn
/datum/barsign/robustacafe
/datum/barsign/scotchservinwill
/datum/barsign/slipperyshots
/datum/barsign/theadminbus
/datum/barsign/thealenath
/datum/barsign/thealohasnackbar
/datum/barsign/thebark
/datum/barsign/thecavern
/datum/barsign/thecoderbus
/datum/barsign/thedrunkcarp
/datum/barsign/thegreytide
/datum/barsign/thenest
/datum/barsign/thenet
/datum/barsign/theouterspess
/datum/barsign/theshaken
/datum/barsign/thesingulo
/datum/barsign/thewretchedhive
/datum/barsign/vladssaladbar
/datum/borrowbook
/datum/browser
/datum/browser/New(nuser, nwindow_id, ntitle = 0, nwidth = 0, nheight = 0, var/atom/nref = null)
/datum/browser/add_content(ncontent)
/datum/browser/add_head_content(nhead_content)
/datum/browser/add_script(name, file)
/datum/browser/add_stylesheet(name, file)
/datum/browser/close()
/datum/browser/get_content()
/datum/browser/get_footer()
/datum/browser/get_header()
/datum/browser/open(var/use_onclose = 1)
/datum/browser/set_content(ncontent)
/datum/browser/set_title_image(ntitle_image)
/datum/browser/set_window_options(nwindow_options)
/datum/cachedbook
/datum/camerachunk
/datum/camerachunk/New(loc, x, y, z)
/datum/camerachunk/add(mob/camera/aiEye/eye)
/datum/camerachunk/hasChanged(var/update_now = 0)
/datum/camerachunk/remove(mob/camera/aiEye/eye)
/datum/camerachunk/update()
/datum/camerachunk/visibilityChanged(turf/loc)
/datum/cameranet
/datum/cameranet/addCamera(obj/machinery/camera/c)
/datum/cameranet/checkCameraVis(mob/living/target as mob)
/datum/cameranet/checkTurfVis(var/turf/position)
/datum/cameranet/chunkGenerated(x, y, z)
/datum/cameranet/getCameraChunk(x, y, z)
/datum/cameranet/majorChunkChange(atom/c, var/choice)
/datum/cameranet/removeCamera(obj/machinery/camera/c)
/datum/cameranet/updateChunk(x, y, z)
/datum/cameranet/updatePortableCamera(obj/machinery/camera/c)
/datum/cameranet/updateVisibility(atom/A, var/opacity_check = 1)
/datum/cameranet/visibility(mob/camera/aiEye/ai)
/datum/changeling
/datum/changeling/New(var/gender=FEMALE)
/datum/changeling/absorb_dna(mob/living/carbon/T, var/mob/user)
/datum/changeling/can_absorb_dna(var/mob/living/carbon/user, var/mob/living/carbon/target)
/datum/changeling/get_dna(var/dna_owner)
/datum/changeling/has_dna(var/datum/dna/tDNA)
/datum/changeling/has_sting(obj/effect/proc_holder/changeling/power)
/datum/changeling/lingRespec(var/mob/user)
/datum/changeling/purchasePower(var/mob/living/carbon/user, var/sting_name)
/datum/changeling/regenerate()
/datum/changeling/reset()
/datum/changeling/select_dna(var/prompt, var/title)
/datum/changeling/store_dna(var/datum/dna/new_dna, var/mob/user)
/datum/chatroom
/datum/chatroom/channel_join(client,nick,channel)
/datum/chatroom/check_server(client)
/datum/chatroom/get_auth(client,nick)
/datum/chatroom/get_log(client,nick,lines)
/datum/chatroom/parse_msg(client,nick,message)
/datum/chatroom/register_auth(client,nick)
/datum/chatroom/send_message(client,nick,message)
/datum/check_special_completion()
/datum/chemical_reaction
/datum/chemical_reaction/acetone
/datum/chemical_reaction/acidspit
/datum/chemical_reaction/alliescocktail
/datum/chemical_reaction/aloe
/datum/chemical_reaction/amasec
/datum/chemical_reaction/ammonia
/datum/chemical_reaction/andalusia
/datum/chemical_reaction/antifreeze
/datum/chemical_reaction/antihol
/datum/chemical_reaction/aranesp
/datum/chemical_reaction/ash
/datum/chemical_reaction/atomicbomb
/datum/chemical_reaction/atropine
/datum/chemical_reaction/b52
/datum/chemical_reaction/bahama_mama
/datum/chemical_reaction/bananahonk
/datum/chemical_reaction/barbers_aid
/datum/chemical_reaction/barefoot
/datum/chemical_reaction/bath_salts
/datum/chemical_reaction/beepsky_smash
/datum/chemical_reaction/bilk
/datum/chemical_reaction/black_russian
/datum/chemical_reaction/blackpowder
/datum/chemical_reaction/blackpowder_explosion
/datum/chemical_reaction/blackpowder_explosion/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/bloody_mary
/datum/chemical_reaction/bluecherryshake
/datum/chemical_reaction/booger
/datum/chemical_reaction/brave_bull
/datum/chemical_reaction/cafe_latte
/datum/chemical_reaction/cakebatter
/datum/chemical_reaction/cakebatter/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/cakebatter/vegan
/datum/chemical_reaction/calomel
/datum/chemical_reaction/capsaicincondensation
/datum/chemical_reaction/carpet
/datum/chemical_reaction/changelingsting
/datum/chemical_reaction/charcoal
/datum/chemical_reaction/cheesewheel
/datum/chemical_reaction/cheesewheel/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/chemical_mob_spawn(var/datum/reagents/holder, var/amount_to_spawn, var/reaction_name, var/mob_faction = "chemicalsummon")
/datum/chemical_reaction/cherryshake
/datum/chemical_reaction/chloralhydrate
/datum/chemical_reaction/chocolate_bar
/datum/chemical_reaction/chocolate_bar/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/chocolate_bar2
/datum/chemical_reaction/chocolate_bar2/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/chocolatepudding
/datum/chemical_reaction/clf3
/datum/chemical_reaction/clf3/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/coffee
/datum/chemical_reaction/colorful_reagent
/datum/chemical_reaction/concentrated_barbers_aid
/datum/chemical_reaction/corgium
/datum/chemical_reaction/corgium/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/corn_syrup
/datum/chemical_reaction/crank
/datum/chemical_reaction/cryostylane
/datum/chemical_reaction/cryostylane/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/cryoxadone
/datum/chemical_reaction/cryptobiolin
/datum/chemical_reaction/cuba_libre
/datum/chemical_reaction/cyanide
/datum/chemical_reaction/demonsblood
/datum/chemical_reaction/devilskiss
/datum/chemical_reaction/diethylamine
/datum/chemical_reaction/diphenhydramine
/datum/chemical_reaction/doctor_delight
/datum/chemical_reaction/dough
/datum/chemical_reaction/dough/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/driestmartini
/datum/chemical_reaction/drunkenblumpkin
/datum/chemical_reaction/emp_pulse
/datum/chemical_reaction/emp_pulse/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/ephedrine
/datum/chemical_reaction/epinephrine
/datum/chemical_reaction/erikasurprise
/datum/chemical_reaction/facid
/datum/chemical_reaction/flash_powder
/datum/chemical_reaction/flash_powder/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/flash_powder_flash
/datum/chemical_reaction/flash_powder_flash/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/foam
/datum/chemical_reaction/foam/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/foaming_agent
/datum/chemical_reaction/formaldehyde
/datum/chemical_reaction/gargle_blaster
/datum/chemical_reaction/gibbfloats
/datum/chemical_reaction/gin_fizz
/datum/chemical_reaction/gin_tonic
/datum/chemical_reaction/glycerol
/datum/chemical_reaction/goldschlager
/datum/chemical_reaction/goonchem_vortex(var/turf/simulated/T, var/setting_type, var/range, var/pull_times)
/datum/chemical_reaction/greenbeer
/datum/chemical_reaction/grog
/datum/chemical_reaction/hair_dye
/datum/chemical_reaction/hell_ramen
/datum/chemical_reaction/hippiesdelight
/datum/chemical_reaction/hooch
/datum/chemical_reaction/hot_coco
/datum/chemical_reaction/hot_ramen
/datum/chemical_reaction/icecoffee
/datum/chemical_reaction/iced_beer
/datum/chemical_reaction/icetea
/datum/chemical_reaction/imitationcarpmeat
/datum/chemical_reaction/imitationcarpmeat/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/impedrezene
/datum/chemical_reaction/inacusiate
/datum/chemical_reaction/irish_coffee
/datum/chemical_reaction/irish_cream
/datum/chemical_reaction/irishcarbomb
/datum/chemical_reaction/ironfoam
/datum/chemical_reaction/ironfoam/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/itching_powder
/datum/chemical_reaction/kahlua
/datum/chemical_reaction/krokodil
/datum/chemical_reaction/ldm_vortex
/datum/chemical_reaction/ldm_vortex/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/leporazine
/datum/chemical_reaction/lexorin
/datum/chemical_reaction/life
/datum/chemical_reaction/life/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/lipolicide
/datum/chemical_reaction/liquid_dark_matter
/datum/chemical_reaction/liquid_dark_matter/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/longislandicedtea
/datum/chemical_reaction/lube
/datum/chemical_reaction/manhattan
/datum/chemical_reaction/manhattan_proj
/datum/chemical_reaction/manly_dorf
/datum/chemical_reaction/mannitol
/datum/chemical_reaction/margarita
/datum/chemical_reaction/martini
/datum/chemical_reaction/mead
/datum/chemical_reaction/metalfoam
/datum/chemical_reaction/metalfoam/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/methamphetamine
/datum/chemical_reaction/mindbreaker
/datum/chemical_reaction/mix_virus
/datum/chemical_reaction/mix_virus/mix_virus_2
/datum/chemical_reaction/mix_virus/mix_virus_3
/datum/chemical_reaction/mix_virus/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/mix_virus/rem_virus
/datum/chemical_reaction/mix_virus/rem_virus/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/moonshine
/datum/chemical_reaction/mutadone
/datum/chemical_reaction/mutagen
/datum/chemical_reaction/mutetoxin
/datum/chemical_reaction/napalm
/datum/chemical_reaction/neurotoxin
/datum/chemical_reaction/neurotoxin2
/datum/chemical_reaction/nitroglycerin
/datum/chemical_reaction/nitroglycerin/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/nitroglycerin_explosion
/datum/chemical_reaction/nitroglycerin_explosion/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/nuka_cola
/datum/chemical_reaction/oculine
/datum/chemical_reaction/oil
/datum/chemical_reaction/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/patron
/datum/chemical_reaction/pen_acid
/datum/chemical_reaction/perfluorodecalin
/datum/chemical_reaction/pestkiller
/datum/chemical_reaction/phenol
/datum/chemical_reaction/phlogiston
/datum/chemical_reaction/phlogiston/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/plantbgone
/datum/chemical_reaction/plasmasolidification
/datum/chemical_reaction/plasmasolidification/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/potass_iodide
/datum/chemical_reaction/potassium_explosion
/datum/chemical_reaction/potassium_explosion/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/pumpkin_latte
/datum/chemical_reaction/pyrosium
/datum/chemical_reaction/pyrosium/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/red_mead
/datum/chemical_reaction/rezadone
/datum/chemical_reaction/ricebowl
/datum/chemical_reaction/ricebowl/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/sal_acid
/datum/chemical_reaction/salbutamol
/datum/chemical_reaction/salglu_solution
/datum/chemical_reaction/saltpetre
/datum/chemical_reaction/sbiten
/datum/chemical_reaction/screwdriver
/datum/chemical_reaction/silencer
/datum/chemical_reaction/silver_sulfadiazine
/datum/chemical_reaction/singulo
/datum/chemical_reaction/slimebloodlust
/datum/chemical_reaction/slimebloodlust/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimebork
/datum/chemical_reaction/slimebork/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimebork2
/datum/chemical_reaction/slimebork2/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimecamera
/datum/chemical_reaction/slimecamera/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimecasp
/datum/chemical_reaction/slimecasp/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimecell
/datum/chemical_reaction/slimecell/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/slimecrit
/datum/chemical_reaction/slimecrit/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimecritlesser
/datum/chemical_reaction/slimecritlesser/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimecrystal
/datum/chemical_reaction/slimecrystal/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/slimeexplosion
/datum/chemical_reaction/slimeexplosion/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimefilm
/datum/chemical_reaction/slimefilm/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimefire
/datum/chemical_reaction/slimefire/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimefreeze
/datum/chemical_reaction/slimefreeze/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimefrost
/datum/chemical_reaction/slimefrost/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimeglow
/datum/chemical_reaction/slimeglow/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimegolem
/datum/chemical_reaction/slimegolem/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimeinaprov
/datum/chemical_reaction/slimeinaprov/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimejam
/datum/chemical_reaction/slimejam/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimemetal
/datum/chemical_reaction/slimemetal/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimemonkey
/datum/chemical_reaction/slimemonkey/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimemutate
/datum/chemical_reaction/slimemutate/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimemutate2
/datum/chemical_reaction/slimemutate2/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimemutate_unstable
/datum/chemical_reaction/slimemutate_unstable/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimemutator
/datum/chemical_reaction/slimemutator/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimeoverload
/datum/chemical_reaction/slimeoverload/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/slimepaint
/datum/chemical_reaction/slimepaint/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimeplasma
/datum/chemical_reaction/slimeplasma/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimepotion2
/datum/chemical_reaction/slimepotion2/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimeppotion
/datum/chemical_reaction/slimeppotion/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimepsteroid
/datum/chemical_reaction/slimepsteroid/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimepsteroid2
/datum/chemical_reaction/slimepsteroid2/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimespawn
/datum/chemical_reaction/slimespawn/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimestabilizer
/datum/chemical_reaction/slimestabilizer/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimestop
/datum/chemical_reaction/slimestop/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/smoke_powder
/datum/chemical_reaction/smoke_powder/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/smoke_powder_smoke
/datum/chemical_reaction/smoke_powder_smoke/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/snowwhite
/datum/chemical_reaction/sodiumchloride
/datum/chemical_reaction/sonic_powder
/datum/chemical_reaction/sonic_powder/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/sonic_powder_deafen
/datum/chemical_reaction/sonic_powder_deafen/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/sorium
/datum/chemical_reaction/sorium/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/sorium_vortex
/datum/chemical_reaction/sorium_vortex/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/soy_latte
/datum/chemical_reaction/soysauce
/datum/chemical_reaction/space_cleaner
/datum/chemical_reaction/space_drugs
/datum/chemical_reaction/spaceacillin
/datum/chemical_reaction/spacebeer
/datum/chemical_reaction/stabilizing_agent
/datum/chemical_reaction/sterilizine
/datum/chemical_reaction/strange_reagent
/datum/chemical_reaction/styptic_powder
/datum/chemical_reaction/sulfonal
/datum/chemical_reaction/surfactant
/datum/chemical_reaction/synaptizine
/datum/chemical_reaction/syndicatebomb
/datum/chemical_reaction/synthflesh
/datum/chemical_reaction/synthmeat
/datum/chemical_reaction/synthmeat/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/tea
/datum/chemical_reaction/tequila_sunrise
/datum/chemical_reaction/thermite
/datum/chemical_reaction/thirteenloko
/datum/chemical_reaction/threemileisland
/datum/chemical_reaction/tofu
/datum/chemical_reaction/tofu/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/toxins_special
/datum/chemical_reaction/triple_citrus
/datum/chemical_reaction/vanillapudding
/datum/chemical_reaction/virus_food
/datum/chemical_reaction/vodka
/datum/chemical_reaction/vodka_tonic
/datum/chemical_reaction/vodkamartini
/datum/chemical_reaction/weedkiller
/datum/chemical_reaction/whiskey_cola
/datum/chemical_reaction/whiskeysoda
/datum/chemical_reaction/white_russian
/datum/chemical_reaction/wine
/datum/chemical_reaction/zombiepowder
/datum/comm_log_entry
/datum/computer
/datum/computer/file
/datum/computer/file/embedded_program
/datum/computer/file/embedded_program/airlock_controller
/datum/computer/file/embedded_program/airlock_controller/process()
/datum/computer/file/embedded_program/airlock_controller/receive_signal(datum/signal/signal, receive_method, receive_param)
/datum/computer/file/embedded_program/airlock_controller/receive_user_command(command)
/datum/computer/file/embedded_program/post_signal(datum/signal/signal, comm_line)
/datum/computer/file/embedded_program/process()
/datum/computer/file/embedded_program/receive_signal(datum/signal/signal, receive_method, receive_param)
/datum/computer/file/embedded_program/receive_user_command(command)
/datum/computer/file/embedded_program/simple_vent_controller
/datum/computer/file/embedded_program/simple_vent_controller/process()
/datum/computer/file/embedded_program/simple_vent_controller/receive_user_command(command)
/datum/computer/folder
/datum/configuration
/datum/configuration/New()
/datum/configuration/get_runnable_midround_modes(crew)
/datum/configuration/get_runnable_modes()
/datum/configuration/load(filename, type = "config")
/datum/configuration/loadsql(filename)
/datum/configuration/pick_mode(mode_name)
/datum/construction
/datum/construction/New(atom)
/datum/construction/action(atom/used_atom,mob/user as mob)
/datum/construction/check_all_steps(atom/used_atom,mob/user as mob)
/datum/construction/check_step(atom/used_atom,mob/user as mob)
/datum/construction/custom_action(step, used_atom, user)
/datum/construction/is_right_key(atom/used_atom)
/datum/construction/mecha/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/durand_chassis
/datum/construction/mecha/durand_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/durand_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/durand_chassis/spawn_result()
/datum/construction/mecha/firefighter_chassis
/datum/construction/mecha/firefighter_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/firefighter_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/firefighter_chassis/spawn_result()
/datum/construction/mecha/gygax_chassis
/datum/construction/mecha/gygax_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/gygax_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/gygax_chassis/spawn_result()
/datum/construction/mecha/honker
/datum/construction/mecha/honker/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/honker/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/honker/spawn_result()
/datum/construction/mecha/honker_chassis
/datum/construction/mecha/honker_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/honker_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/honker_chassis/spawn_result()
/datum/construction/mecha/odysseus_chassis
/datum/construction/mecha/odysseus_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/odysseus_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/odysseus_chassis/spawn_result()
/datum/construction/mecha/phazon_chassis
/datum/construction/mecha/phazon_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/phazon_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/phazon_chassis/spawn_result()
/datum/construction/mecha/ripley_chassis
/datum/construction/mecha/ripley_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/ripley_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/ripley_chassis/spawn_result()
/datum/construction/next_step()
/datum/construction/reversible
/datum/construction/reversible/New(atom)
/datum/construction/reversible/check_step(atom/used_atom,mob/user as mob)
/datum/construction/reversible/custom_action(index, diff, used_atom, user)
/datum/construction/reversible/is_right_key(atom/used_atom)
/datum/construction/reversible/mecha/custom_action(index as num, diff as num, atom/used_atom, mob/user as mob)
/datum/construction/reversible/mecha/durand
/datum/construction/reversible/mecha/durand/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/durand/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/durand/spawn_result()
/datum/construction/reversible/mecha/firefighter
/datum/construction/reversible/mecha/firefighter/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/firefighter/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/firefighter/spawn_result()
/datum/construction/reversible/mecha/gygax
/datum/construction/reversible/mecha/gygax/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/gygax/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/gygax/spawn_result()
/datum/construction/reversible/mecha/odysseus
/datum/construction/reversible/mecha/odysseus/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/odysseus/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/odysseus/spawn_result()
/datum/construction/reversible/mecha/phazon
/datum/construction/reversible/mecha/phazon/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/phazon/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/phazon/spawn_result()
/datum/construction/reversible/mecha/ripley
/datum/construction/reversible/mecha/ripley/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/ripley/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/ripley/spawn_result()
/datum/construction/reversible/update_index(diff as num)
/datum/construction/set_desc(index as num)
/datum/construction/spawn_result()
/datum/controller/failsafe
/datum/controller/failsafe/New()
/datum/controller/failsafe/process()
/datum/controller/game_controller
/datum/controller/game_controller/New()
/datum/controller/game_controller/Recover()
/datum/controller/game_controller/calculateGCD()
/datum/controller/game_controller/calculateSScost()
/datum/controller/game_controller/process()
/datum/controller/game_controller/roundHasStarted()
/datum/controller/game_controller/setup(zlevel)
/datum/coords
/datum/data
/datum/data/crime
/datum/data/mining_equipment/
/datum/data/mining_equipment/New(name, path, cost)
/datum/data/record
/datum/data/vending_product
/datum/data_chat_msg
/datum/data_chat_msg/New(var/param_sen = "", var/param_chan = "", var/param_msg = "")
/datum/data_pda_msg
/datum/data_pda_msg/New(var/param_rec = "",var/param_sender = "",var/param_message = "",var/param_photo=null)
/datum/data_pda_msg/Topic(href,href_list)
/datum/data_rc_msg
/datum/data_rc_msg/New(var/param_rec = "",var/param_sender = "",var/param_message = "",var/param_stamp = "",var/param_id_auth = "",var/param_priority)
/datum/datacore
/datum/datacore/addMajorCrime(id = "", var/datum/data/crime/crime)
/datum/datacore/addMinorCrime(id = "", var/datum/data/crime/crime)
/datum/datacore/createCrimeEntry(cname = "", cdetails = "", author = "", time = "")
/datum/datacore/get_id_photo(var/mob/living/carbon/human/H)
/datum/datacore/get_manifest(monochrome, OOC)
/datum/datacore/manifest(var/nosleep = 0)
/datum/datacore/manifest_inject(var/mob/living/carbon/human/H)
/datum/datacore/manifest_modify(var/name, var/assignment)
/datum/datacore/proc/get_manifest(monochrome, OOC)
/datum/datacore/removeMajorCrime(id, cDataId)
/datum/datacore/removeMinorCrime(id, cDataId)
/datum/debug
/datum/design
/datum/design/BS_RPED
/datum/design/CalcReliability(var/list/temp_techs)
/datum/design/RPED
/datum/design/a357
/datum/design/adv_capacitor
/datum/design/adv_mass_spectrometer
/datum/design/adv_matter_bin
/datum/design/adv_scanning
/datum/design/aicore
/datum/design/aifixer
/datum/design/air_horn
/datum/design/air_management
/datum/design/airalarm_electronics
/datum/design/airlock_board
/datum/design/aiupload
/datum/design/analyzer
/datum/design/apc_board
/datum/design/arcadebattle
/datum/design/asimov
/datum/design/atmosalerts
/datum/design/autolathe
/datum/design/bag_holding
/datum/design/basic_capacitor
/datum/design/basic_cell
/datum/design/basic_matter_bin
/datum/design/basic_micro_laser
/datum/design/basic_scanning
/datum/design/beacon
/datum/design/beaker
/datum/design/beanbag_slug
/datum/design/biogenerator
/datum/design/bluespace_cell
/datum/design/bluespace_crystal
/datum/design/bluespace_matter_bin
/datum/design/bluespacebeaker
/datum/design/bluespacebodybag
/datum/design/borg_chest
/datum/design/borg_head
/datum/design/borg_l_arm
/datum/design/borg_l_leg
/datum/design/borg_r_arm
/datum/design/borg_r_leg
/datum/design/borg_suit
/datum/design/borg_syndicate_module
/datum/design/borg_upgrade_diamonddrill
/datum/design/borg_upgrade_disablercooler
/datum/design/borg_upgrade_holding
/datum/design/borg_upgrade_jetpack
/datum/design/borg_upgrade_rename
/datum/design/borg_upgrade_reset
/datum/design/borg_upgrade_restart
/datum/design/borg_upgrade_vtec
/datum/design/borgupload
/datum/design/bounced_radio
/datum/design/bucket
/datum/design/buckshot_shell
/datum/design/buffer
/datum/design/c10mm
/datum/design/c38
/datum/design/c45
/datum/design/c9mm
/datum/design/camera_assembly
/datum/design/cautery
/datum/design/chem_dispenser
/datum/design/chem_heater
/datum/design/chem_master
/datum/design/circuit_imprinter
/datum/design/circular_saw
/datum/design/clonecontrol
/datum/design/clonepod
/datum/design/clonescanner
/datum/design/clusterbang_launcher
/datum/design/comconsole
/datum/design/comm_monitor
/datum/design/comm_server
/datum/design/comm_traffic
/datum/design/console_screen
/datum/design/corporate_module
/datum/design/crewconsole
/datum/design/crowbar
/datum/design/cryotube
/datum/design/custom_module
/datum/design/cyberimp_antidrop
/datum/design/cyberimp_antistun
/datum/design/cyberimp_medical_hud
/datum/design/cyberimp_security_hud
/datum/design/cyberimp_thermals
/datum/design/cyberimp_xray
/datum/design/cyborgrecharger
/datum/design/decloner
/datum/design/design_disk
/datum/design/destructive_analyzer
/datum/design/desttagger
/datum/design/drill
/datum/design/drill_diamond
/datum/design/drone_shell
/datum/design/durand_armor
/datum/design/durand_chassis
/datum/design/durand_head
/datum/design/durand_left_arm
/datum/design/durand_left_leg
/datum/design/durand_main
/datum/design/durand_peri
/datum/design/durand_right_arm
/datum/design/durand_right_leg
/datum/design/durand_targ
/datum/design/durand_torso
/datum/design/electropack
/datum/design/engine_goggles
/datum/design/experimentor
/datum/design/extinguisher
/datum/design/exwelder
/datum/design/femto_mani
/datum/design/firealarm_electronics
/datum/design/firefighter_chassis
/datum/design/flamethrower
/datum/design/flashlight
/datum/design/flora_gun
/datum/design/foam_dart
/datum/design/freeform_module
/datum/design/freeformcore_module
/datum/design/gibber
/datum/design/glass
/datum/design/gygax_armor
/datum/design/gygax_chassis
/datum/design/gygax_head
/datum/design/gygax_left_arm
/datum/design/gygax_left_leg
/datum/design/gygax_main
/datum/design/gygax_peri
/datum/design/gygax_right_arm
/datum/design/gygax_right_leg
/datum/design/gygax_targ
/datum/design/gygax_torso
/datum/design/handcuffs
/datum/design/handlabeler
/datum/design/health_hud
/datum/design/health_hud_night
/datum/design/hemostat
/datum/design/high_cell
/datum/design/high_micro_laser
/datum/design/holopad
/datum/design/holosign
/datum/design/honk_chassis
/datum/design/honk_head
/datum/design/honk_left_arm
/datum/design/honk_left_leg
/datum/design/honk_right_arm
/datum/design/honk_right_leg
/datum/design/honk_torso
/datum/design/honker_main
/datum/design/honker_peri
/datum/design/honker_targ
/datum/design/hydroponics
/datum/design/hyper_cell
/datum/design/hyperwave_filter
/datum/design/idcardconsole
/datum/design/igniter
/datum/design/incendiary_slug
/datum/design/infrared_emitter
/datum/design/intellicard
/datum/design/ioncarbine
/datum/design/jackhammer
/datum/design/kitchen_knife
/datum/design/large_beaker
/datum/design/large_grenade
/datum/design/large_welding_tool
/datum/design/largecrossbow
/datum/design/lasercannon
/datum/design/libraryconsole
/datum/design/light_bulb
/datum/design/light_replacer
/datum/design/light_tube
/datum/design/mag_smg
/datum/design/magboots
/datum/design/mass_spectrometer
/datum/design/mech_banana_mortar
/datum/design/mech_cable_layer
/datum/design/mech_carbine
/datum/design/mech_ccw_armor
/datum/design/mech_diamond_drill
/datum/design/mech_drill
/datum/design/mech_energy_relay
/datum/design/mech_extinguisher
/datum/design/mech_generator
/datum/design/mech_generator_nuclear
/datum/design/mech_gravcatapult
/datum/design/mech_grenade_launcher
/datum/design/mech_honker
/datum/design/mech_hydraulic_clamp
/datum/design/mech_ion
/datum/design/mech_laser
/datum/design/mech_laser_heavy
/datum/design/mech_lmg
/datum/design/mech_mining_scanner
/datum/design/mech_missile_rack
/datum/design/mech_mousetrap_mortar
/datum/design/mech_plasma_cutter
/datum/design/mech_proj_armor
/datum/design/mech_rcd
/datum/design/mech_recharger
/datum/design/mech_repair_droid
/datum/design/mech_scattershot
/datum/design/mech_sleeper
/datum/design/mech_syringe_gun
/datum/design/mech_taser
/datum/design/mech_teleporter
/datum/design/mech_wormhole_gen
/datum/design/mecha_tracking
/datum/design/mechacontrol
/datum/design/mechapower
/datum/design/mechfab
/datum/design/med_data
/datum/design/mesons
/datum/design/message_monitor
/datum/design/metal
/datum/design/micro_mani
/datum/design/microwave
/datum/design/mining
/datum/design/mining_equipment_vendor
/datum/design/miningsatchel_holding
/datum/design/mmi
/datum/design/mmi_radio
/datum/design/monkey_recycler
/datum/design/mrspacman
/datum/design/multitool
/datum/design/nano_mani
/datum/design/newscaster_frame
/datum/design/night_vision_goggles
/datum/design/noreactbeaker
/datum/design/nuclear_gun
/datum/design/nvgmesons
/datum/design/odysseus_chassis
/datum/design/odysseus_head
/datum/design/odysseus_left_arm
/datum/design/odysseus_left_leg
/datum/design/odysseus_main
/datum/design/odysseus_peri
/datum/design/odysseus_right_arm
/datum/design/odysseus_right_leg
/datum/design/odysseus_torso
/datum/design/onehuman_module
/datum/design/operating
/datum/design/ordercomp
/datum/design/ore_redemption
/datum/design/orion_trail
/datum/design/oxygen_module
/datum/design/pacman
/datum/design/paicard
/datum/design/paladin_module
/datum/design/pandemic
/datum/design/phasic_scanning
/datum/design/phazon_armor
/datum/design/phazon_chassis
/datum/design/phazon_head
/datum/design/phazon_left_arm
/datum/design/phazon_left_leg
/datum/design/phazon_main
/datum/design/phazon_peri
/datum/design/phazon_right_arm
/datum/design/phazon_right_leg
/datum/design/phazon_targ
/datum/design/phazon_torso
/datum/design/pico_mani
/datum/design/pin_loyalty
/datum/design/pin_testing
/datum/design/pipe_painter
/datum/design/plasmacutter
/datum/design/plasmacutter_adv
/datum/design/posibrain
/datum/design/power_compressor
/datum/design/power_turbine
/datum/design/powermonitor
/datum/design/prisonmanage
/datum/design/processor
/datum/design/protectstation_module
/datum/design/protolathe
/datum/design/prox_sensor
/datum/design/purge_module
/datum/design/quadratic_capacitor
/datum/design/quadultra_micro_laser
/datum/design/quarantine_module
/datum/design/radio_headset
/datum/design/rapidsyringe
/datum/design/rcd
/datum/design/rcd_ammo
/datum/design/rdconsole
/datum/design/rdserver
/datum/design/rdservercontrol
/datum/design/reciever
/datum/design/recorder
/datum/design/recycler
/datum/design/reset_module
/datum/design/retractor
/datum/design/rglass
/datum/design/ripley_chassis
/datum/design/ripley_left_arm
/datum/design/ripley_left_leg
/datum/design/ripley_main
/datum/design/ripley_peri
/datum/design/ripley_right_arm
/datum/design/ripley_right_leg
/datum/design/ripley_torso
/datum/design/robocontrol
/datum/design/rods
/datum/design/rpd
/datum/design/safeguard_module
/datum/design/scalpel
/datum/design/scan_console
/datum/design/screwdriver
/datum/design/seccamera
/datum/design/secdata
/datum/design/security_hud
/datum/design/security_hud_night
/datum/design/seed_extractor
/datum/design/shotgun_dart
/datum/design/shotgun_slug
/datum/design/signaler
/datum/design/sleeper
/datum/design/smartfridge
/datum/design/smes
/datum/design/smg
/datum/design/solarcontrol
/datum/design/spraycan
/datum/design/stunrevolver
/datum/design/stunshell
/datum/design/subspace_amplifier
/datum/design/subspace_analyzer
/datum/design/subspace_ansible
/datum/design/subspace_broadcaster
/datum/design/subspace_crystal
/datum/design/subspace_receiver
/datum/design/subspace_transmitter
/datum/design/subspace_treatment
/datum/design/super_capacitor
/datum/design/super_cell
/datum/design/super_matter_bin
/datum/design/superpacman
/datum/design/supplycomp
/datum/design/suppressor
/datum/design/surgicaldrill
/datum/design/synthetic_flash
/datum/design/syringe
/datum/design/tape
/datum/design/tech_disk
/datum/design/techshell
/datum/design/tele_shield
/datum/design/telecomms_bus
/datum/design/telecomms_hub
/datum/design/telecomms_processor
/datum/design/telecomms_relay
/datum/design/telecomms_server
/datum/design/teleconsole
/datum/design/telepad
/datum/design/teleport_hub
/datum/design/teleport_station
/datum/design/telesci_console
/datum/design/telesci_gps
/datum/design/temp_gun
/datum/design/thermomachine
/datum/design/timer
/datum/design/triphasic_scanning
/datum/design/tscanner
/datum/design/turbine_computer
/datum/design/tyrant_module
/datum/design/ultra_micro_laser
/datum/design/vendor
/datum/design/voice_analyser
/datum/design/welding_helmet
/datum/design/welding_mask
/datum/design/weldingtool
/datum/design/wirecutters
/datum/design/wormhole_projector
/datum/design/wrench
/datum/design/xray
/datum/disease
/datum/disease/Copy()
/datum/disease/Del()
/datum/disease/GetDiseaseID()
/datum/disease/IsSame(var/datum/disease/D)
/datum/disease/IsSpreadByTouch()
/datum/disease/New()
/datum/disease/advance
/datum/disease/advance/AddSymptom(var/datum/symptom/S)
/datum/disease/advance/AssignName(var/name = "Unknown")
/datum/disease/advance/AssignProperties(var/list/properties = list())
/datum/disease/advance/Copy(var/process = 0)
/datum/disease/advance/Del()
/datum/disease/advance/Devolve()
/datum/disease/advance/Evolve(var/min_level, var/max_level)
/datum/disease/advance/GenerateCure(var/list/properties = list())
/datum/disease/advance/GenerateProperties()
/datum/disease/advance/GenerateSymptoms(var/level_min, var/level_max, var/amount_get = 0)
/datum/disease/advance/GetDiseaseID()
/datum/disease/advance/HasSymptom(var/datum/symptom/S)
/datum/disease/advance/IsSame(var/datum/disease/advance/D)
/datum/disease/advance/Mix(var/datum/disease/advance/D)
/datum/disease/advance/New(var/process = 1, var/datum/disease/advance/D)
/datum/disease/advance/Refresh(var/new_name = 0)
/datum/disease/advance/RemoveSymptom(var/datum/symptom/S)
/datum/disease/advance/SetSeverity(var/level_sev)
/datum/disease/advance/SetSpread(var/spread_id)
/datum/disease/advance/cold/New(var/process = 1, var/datum/disease/advance/D, var/copy = 0)
/datum/disease/advance/cure(var/resistance=1)
/datum/disease/advance/flu/New(var/process = 1, var/datum/disease/advance/D, var/copy = 0)
/datum/disease/advance/heal/New(var/process = 1, var/datum/disease/advance/D, var/copy = 0)
/datum/disease/advance/hullucigen/New(var/process = 1, var/datum/disease/advance/D, var/copy = 0)
/datum/disease/advance/stage_act()
/datum/disease/advance/voice_change/New(var/process = 1, var/datum/disease/advance/D, var/copy = 0)
/datum/disease/anxiety
/datum/disease/anxiety/stage_act()
/datum/disease/appendicitis
/datum/disease/appendicitis/stage_act()
/datum/disease/beesease
/datum/disease/beesease/stage_act()
/datum/disease/brainrot
/datum/disease/brainrot/stage_act()
/datum/disease/cold
/datum/disease/cold/stage_act()
/datum/disease/cold9
/datum/disease/cold9/stage_act()
/datum/disease/cure()
/datum/disease/dna_retrovirus
/datum/disease/dna_retrovirus/New()
/datum/disease/dna_retrovirus/stage_act()
/datum/disease/dnaspread
/datum/disease/dnaspread/Del()
/datum/disease/dnaspread/stage_act()
/datum/disease/fake_gbs
/datum/disease/fake_gbs/stage_act()
/datum/disease/flu
/datum/disease/flu/stage_act()
/datum/disease/fluspanish
/datum/disease/gbs
/datum/disease/gbs/stage_act()
/datum/disease/has_cure()
/datum/disease/inquisition/stage_act()
/datum/disease/magnitis
/datum/disease/magnitis/stage_act()
/datum/disease/pierrot_throat
/datum/disease/pierrot_throat/stage_act()
/datum/disease/process()
/datum/disease/remove_virus()
/datum/disease/rhumba_beat
/datum/disease/rhumba_beat/stage_act()
/datum/disease/spread(var/atom/source, var/force_spread = 0)
/datum/disease/stage_act()
/datum/disease/transformation
/datum/disease/transformation/corgi
/datum/disease/transformation/corgi/stage_act()
/datum/disease/transformation/do_disease_transformation(var/mob/living/affected_mob)
/datum/disease/transformation/jungle_fever
/datum/disease/transformation/jungle_fever/cure()
/datum/disease/transformation/jungle_fever/do_disease_transformation(var/mob/living/carbon/affected_mob)
/datum/disease/transformation/jungle_fever/stage_act()
/datum/disease/transformation/robot
/datum/disease/transformation/robot/stage_act()
/datum/disease/transformation/slime
/datum/disease/transformation/slime/stage_act()
/datum/disease/transformation/stage_act()
/datum/disease/transformation/xeno
/datum/disease/transformation/xeno/stage_act()
/datum/disease/wizarditis
/datum/disease/wizarditis/spawn_wizard_clothes(var/chance = 0)
/datum/disease/wizarditis/stage_act()
/datum/disease/wizarditis/teleport()
/datum/dna
/datum/dna/New(mob/living/carbon/new_holder)
/datum/dna/add_mutation(mutation_name)
/datum/dna/check_mutation(mutation_name)
/datum/dna/copy_dna(var/datum/dna/new_dna)
/datum/dna/generate_struc_enzymes(mob/living/carbon/character)
/datum/dna/generate_uni_identity(mob/living/carbon/character)
/datum/dna/generate_unique_enzymes(mob/living/carbon/character)
/datum/dna/is_same_as(var/datum/dna/D)
/datum/dna/mutations_get_spans()
/datum/dna/mutations_say_mods(var/message)
/datum/dna/remove_all_mutations()
/datum/dna/remove_mutation(mutation_name)
/datum/dna/remove_mutation_group(list/group)
/datum/dna/transfer_identity(mob/living/carbon/destination)
/datum/effect/effect/fadeOut(var/atom/A, var/frames = 16)
/datum/effect/effect/system
/datum/effect/effect/system/Destroy()
/datum/effect/effect/system/attach(atom/atom)
/datum/effect/effect/system/bad_smoke_spread
/datum/effect/effect/system/bad_smoke_spread/set_up(n = 5, c = 0, loca, direct)
/datum/effect/effect/system/bad_smoke_spread/start()
/datum/effect/effect/system/chem_smoke_spread
/datum/effect/effect/system/chem_smoke_spread/Destroy()
/datum/effect/effect/system/chem_smoke_spread/New()
/datum/effect/effect/system/chem_smoke_spread/set_up(var/datum/reagents/carry = null, n = 5, c = 0, loca, direct, silent = 0)
/datum/effect/effect/system/chem_smoke_spread/start()
/datum/effect/effect/system/foam_spread
/datum/effect/effect/system/foam_spread/Destroy()
/datum/effect/effect/system/foam_spread/New()
/datum/effect/effect/system/foam_spread/metal
/datum/effect/effect/system/foam_spread/metal/set_up(amt=5, loca, var/datum/reagents/carry = null, var/metaltype)
/datum/effect/effect/system/foam_spread/set_up(amt=5, loca, var/datum/reagents/carry = null)
/datum/effect/effect/system/foam_spread/start()
/datum/effect/effect/system/freezing_smoke_spread
/datum/effect/effect/system/freezing_smoke_spread/set_up(n = 6, c = 0, loca)
/datum/effect/effect/system/freezing_smoke_spread/start()
/datum/effect/effect/system/harmless_smoke_spread
/datum/effect/effect/system/harmless_smoke_spread/set_up(n = 5, c = 0, loca, direct)
/datum/effect/effect/system/harmless_smoke_spread/start()
/datum/effect/effect/system/ion_trail_follow
/datum/effect/effect/system/ion_trail_follow/Destroy()
/datum/effect/effect/system/ion_trail_follow/set_up(atom/atom)
/datum/effect/effect/system/ion_trail_follow/start()
/datum/effect/effect/system/ion_trail_follow/stop()
/datum/effect/effect/system/lightning_spread
/datum/effect/effect/system/lightning_spread/set_up(n = 3, c = 0, loca)
/datum/effect/effect/system/lightning_spread/start()
/datum/effect/effect/system/reagents_explosion
/datum/effect/effect/system/reagents_explosion/if(istype(loc, /turf/))
/datum/effect/effect/system/reagents_explosion/start()
/datum/effect/effect/system/set_up(n = 3, c = 0, turf/loc)
/datum/effect/effect/system/sleep_smoke_spread
/datum/effect/effect/system/sleep_smoke_spread/set_up(n = 5, c = 0, loca, direct)
/datum/effect/effect/system/sleep_smoke_spread/start()
/datum/effect/effect/system/spark_spread
/datum/effect/effect/system/spark_spread/set_up(n = 3, c = 0, loca)
/datum/effect/effect/system/spark_spread/start()
/datum/effect/effect/system/start()
/datum/effect/effect/system/steam_spread
/datum/effect/effect/system/steam_spread/set_up(n = 3, c = 0, turf/loc)
/datum/effect/effect/system/steam_spread/start()
/datum/effect/effect/system/steam_trail_follow
/datum/effect/effect/system/steam_trail_follow/set_up(atom/atom)
/datum/effect/effect/system/steam_trail_follow/start()
/datum/effect/effect/system/steam_trail_follow/stop()
/datum/effect/system/expl_particles
/datum/effect/system/expl_particles/set_up(n = 10, loca)
/datum/effect/system/expl_particles/start()
/datum/effect/system/explosion
/datum/effect/system/explosion/set_up(loca)
/datum/effect/system/explosion/start()
/datum/event
/datum/event/Fire()
/datum/event/New(tlistener,tprocname)
/datum/events
/datum/events/New()
/datum/events/addEvent(event_type as text, proc_holder, proc_name as text)
/datum/events/addEventType(event_type as text)
/datum/events/clearEvent(event_type as text, datum/event/E)
/datum/events/fireEvent()
/datum/excited_group
/datum/excited_group/New()
/datum/excited_group/add_turf(var/turf/simulated/T)
/datum/excited_group/dismantle()
/datum/excited_group/garbage_collect()
/datum/excited_group/merge_groups(var/datum/excited_group/E)
/datum/excited_group/reset_cooldowns()
/datum/excited_group/self_breakdown()
/datum/faction
/datum/faction/Cult
/datum/faction/Exolitics
/datum/faction/Wizard
/datum/faction/syndicate
/datum/faction/syndicate/ARC
/datum/faction/syndicate/Cybersun_Industries
/datum/faction/syndicate/Donk
/datum/faction/syndicate/MI13
/datum/faction/syndicate/Marauders
/datum/faction/syndicate/SELF
/datum/faction/syndicate/Tiger_Cooperative
/datum/faction/syndicate/Waffle
/datum/faction/syndicate/assign_objectives(var/datum/mind/traitor)
/datum/feedback_variable
/datum/feedback_variable/New(var/param_variable,var/param_value = 0)
/datum/feedback_variable/add_details(var/text)
/datum/feedback_variable/dec(var/num = 1)
/datum/feedback_variable/get_details()
/datum/feedback_variable/get_parsed()
/datum/feedback_variable/get_value()
/datum/feedback_variable/get_variable()
/datum/feedback_variable/inc(var/num = 1)
/datum/feedback_variable/proc/get_parsed()
/datum/feedback_variable/set_details(var/text)
/datum/feedback_variable/set_value(var/num)
/datum/food_processor_process
/datum/food_processor_process/carrot
/datum/food_processor_process/corn
/datum/food_processor_process/meat
/datum/food_processor_process/mob/monkey/process_food(loc, what, processor)
/datum/food_processor_process/mob/process_food(loc, what, processor)
/datum/food_processor_process/mob/slime/process_food(loc, what, var/obj/machinery/processor/processor)
/datum/food_processor_process/parsnip
/datum/food_processor_process/potato
/datum/food_processor_process/process_food(loc, what, var/obj/machinery/processor/processor)
/datum/food_processor_process/soybeans
/datum/food_processor_process/spaghetti
/datum/food_processor_process/sweetpotato
/datum/game_mode
/datum/game_mode/abduction
/datum/game_mode/abduction/announce()
/datum/game_mode/abduction/check_finished()
/datum/game_mode/abduction/declare_completion()
/datum/game_mode/abduction/display_abductees(var/obj/machinery/abductor/console/console)
/datum/game_mode/abduction/equip_agent(var/mob/living/carbon/human/agent,var/team_number)
/datum/game_mode/abduction/equip_common(var/mob/living/carbon/human/agent,var/team_number)
/datum/game_mode/abduction/equip_scientist(var/mob/living/carbon/human/scientist,var/team_number)
/datum/game_mode/abduction/get_team_console(var/team)
/datum/game_mode/abduction/greet_agent(var/datum/mind/abductor,var/team_number)
/datum/game_mode/abduction/greet_scientist(var/datum/mind/abductor,var/team_number)
/datum/game_mode/abduction/make_abductor_team(var/team_number,var/preset_agent=null,var/preset_scientist=null)
/datum/game_mode/abduction/post_setup()
/datum/game_mode/abduction/post_setup_team(var/team_number)
/datum/game_mode/abduction/pre_setup()
/datum/game_mode/add_cultist(datum/mind/cult_mind)
/datum/game_mode/add_gangster(datum/mind/gangster_mind, var/gang, var/check = 1)
/datum/game_mode/add_law_zero(mob/living/silicon/ai/killer)
/datum/game_mode/add_monkey(datum/mind/monkey_mind)
/datum/game_mode/add_revolutionary(datum/mind/rev_mind)
/datum/game_mode/add_thrall(datum/mind/new_thrall_mind)
/datum/game_mode/age_check(client/C)
/datum/game_mode/announce()
/datum/game_mode/are_operatives_dead()
/datum/game_mode/assign_exchange_role(var/datum/mind/owner)
/datum/game_mode/auto_declare_completion_abduction()
/datum/game_mode/auto_declare_completion_blob()
/datum/game_mode/auto_declare_completion_changeling()
/datum/game_mode/auto_declare_completion_cult()
/datum/game_mode/auto_declare_completion_gang()
/datum/game_mode/auto_declare_completion_malfunction()
/datum/game_mode/auto_declare_completion_nuclear()
/datum/game_mode/auto_declare_completion_revolution()
/datum/game_mode/auto_declare_completion_shadowling()
/datum/game_mode/auto_declare_completion_traitor()
/datum/game_mode/auto_declare_completion_wizard()
/datum/game_mode/blob
/datum/game_mode/blob/announce()
/datum/game_mode/blob/blobize(var/mob/living/carbon/human/blob)
/datum/game_mode/blob/burst_blob(var/datum/mind/blob, var/warned=0)
/datum/game_mode/blob/burst_blobs()
/datum/game_mode/blob/check_finished()
/datum/game_mode/blob/declare_completion()
/datum/game_mode/blob/get_blob_candidates()
/datum/game_mode/blob/greet_blob(var/datum/mind/blob)
/datum/game_mode/blob/make_blobs(var/count)
/datum/game_mode/blob/post_setup()
/datum/game_mode/blob/pre_setup()
/datum/game_mode/blob/send_intercept(var/report = 1)
/datum/game_mode/blob/show_message(var/message)
/datum/game_mode/blob/stage(var/stage)
/datum/game_mode/can_start()
/datum/game_mode/changeling
/datum/game_mode/changeling/announce()
/datum/game_mode/changeling/make_antag_chance(var/mob/living/carbon/human/character)
/datum/game_mode/changeling/post_setup()
/datum/game_mode/changeling/pre_setup()
/datum/game_mode/check_ai_loc()
/datum/game_mode/check_finished()
/datum/game_mode/check_win()
/datum/game_mode/convert_roundtype()
/datum/game_mode/cult
/datum/game_mode/cult/add_cultist(datum/mind/cult_mind)
/datum/game_mode/cult/announce()
/datum/game_mode/cult/check_cult_victory()
/datum/game_mode/cult/check_survive()
/datum/game_mode/cult/declare_completion()
/datum/game_mode/cult/get_unconvertables()
/datum/game_mode/cult/memorize_cult_objectives(var/datum/mind/cult_mind)
/datum/game_mode/cult/post_setup()
/datum/game_mode/cult/pre_setup()
/datum/game_mode/declare_completion()
/datum/game_mode/equip_cultist(mob/living/carbon/human/mob)
/datum/game_mode/equip_gang(mob/living/carbon/human/mob)
/datum/game_mode/equip_revolutionary(mob/living/carbon/human/mob)
/datum/game_mode/equip_syndicate(mob/living/carbon/human/synd_mob)
/datum/game_mode/equip_traitor(mob/living/carbon/human/traitor_mob, var/safety = 0)
/datum/game_mode/equip_wizard(mob/living/carbon/human/wizard_mob)
/datum/game_mode/extended
/datum/game_mode/extended/post_setup()
/datum/game_mode/extended/pre_setup()
/datum/game_mode/finalize_shadowling(var/datum/mind/shadow_mind)
/datum/game_mode/finalize_traitor(var/datum/mind/traitor)
/datum/game_mode/forge_changeling_objectives(var/datum/mind/changeling)
/datum/game_mode/forge_gang_objectives(var/datum/mind/boss_mind)
/datum/game_mode/forge_revolutionary_objectives(var/datum/mind/rev_mind)
/datum/game_mode/forge_syndicate_objectives(var/datum/mind/syndicate)
/datum/game_mode/forge_traitor_objectives(var/datum/mind/traitor)
/datum/game_mode/forge_wizard_objectives(var/datum/mind/wizard)
/datum/game_mode/gang
/datum/game_mode/gang/announce()
/datum/game_mode/gang/assign_bosses()
/datum/game_mode/gang/check_finished()
/datum/game_mode/gang/check_win()
/datum/game_mode/gang/declare_completion()
/datum/game_mode/gang/domination(var/gang,var/modifier=1,var/obj/dominator)
/datum/game_mode/gang/post_setup()
/datum/game_mode/gang/pre_setup()
/datum/game_mode/gang/process(seconds)
/datum/game_mode/gang_membership_report(var/list/membership)
/datum/game_mode/gang_outfit(mob/user,var/obj/item/device/gangtool/gangtool,var/gang)
/datum/game_mode/get_all_heads()
/datum/game_mode/get_gang_bosses(var/gang)
/datum/game_mode/get_gang_hud(var/gang)
/datum/game_mode/get_living_heads()
/datum/game_mode/get_players_for_role(var/role)
/datum/game_mode/get_remaining_days(client/C)
/datum/game_mode/grant_runeword(mob/living/carbon/human/cult_mob, var/word)
/datum/game_mode/greet_changeling(var/datum/mind/changeling, var/you_are=1)
/datum/game_mode/greet_gang(var/datum/mind/boss_mind, var/you_are=1)
/datum/game_mode/greet_malf(var/datum/mind/malf)
/datum/game_mode/greet_revolutionary(var/datum/mind/rev_mind, var/you_are=1)
/datum/game_mode/greet_shadow(var/datum/mind/shadow)
/datum/game_mode/greet_syndicate(var/datum/mind/syndicate, var/you_are=1)
/datum/game_mode/greet_traitor(var/datum/mind/traitor)
/datum/game_mode/greet_wizard(var/datum/mind/wizard, var/you_are=1)
/datum/game_mode/is_malf_ai_dead()
/datum/game_mode/make_antag_chance(var/mob/living/carbon/human/character)
/datum/game_mode/malfunction
/datum/game_mode/malfunction/ai_win()
/datum/game_mode/malfunction/announce()
/datum/game_mode/malfunction/can_start()
/datum/game_mode/malfunction/capture_the_station()
/datum/game_mode/malfunction/check_finished()
/datum/game_mode/malfunction/check_win()
/datum/game_mode/malfunction/declare_completion()
/datum/game_mode/malfunction/get_players_for_role(var/role = 16)
/datum/game_mode/malfunction/post_setup()
/datum/game_mode/malfunction/pre_setup()
/datum/game_mode/malfunction/process(seconds)
/datum/game_mode/malfunction/takeover()
/datum/game_mode/message_gangtools(var/list/gangtools,var/message,var/beep=1,var/warning)
/datum/game_mode/meteor
/datum/game_mode/meteor/announce()
/datum/game_mode/meteor/declare_completion()
/datum/game_mode/meteor/post_setup()
/datum/game_mode/meteor/process()
/datum/game_mode/monkey
/datum/game_mode/monkey/announce()
/datum/game_mode/monkey/check_finished()
/datum/game_mode/monkey/check_monkey_victory()
/datum/game_mode/monkey/declare_completion()
/datum/game_mode/monkey/greet_carrier(var/datum/mind/carrier)
/datum/game_mode/monkey/post_setup()
/datum/game_mode/monkey/pre_setup()
/datum/game_mode/name_wizard(mob/living/carbon/human/wizard_mob)
/datum/game_mode/nuclear
/datum/game_mode/nuclear/announce()
/datum/game_mode/nuclear/check_finished()
/datum/game_mode/nuclear/check_win()
/datum/game_mode/nuclear/declare_completion()
/datum/game_mode/nuclear/post_setup()
/datum/game_mode/nuclear/pre_setup()
/datum/game_mode/num_players()
/datum/game_mode/post_setup(var/report=1)
/datum/game_mode/pre_setup()
/datum/game_mode/prepare_syndicate_leader(var/datum/mind/synd_mind, var/nuke_code)
/datum/game_mode/printobjectives(var/datum/mind/ply)
/datum/game_mode/printplayer(var/datum/mind/ply)
/datum/game_mode/process()
/datum/game_mode/process_shadow_objectives(var/datum/mind/shadow_mind)
/datum/game_mode/random_radio_frequency()
/datum/game_mode/remove_cultist(datum/mind/cult_mind, show_message = 1)
/datum/game_mode/remove_gangster(datum/mind/gangster_mind, var/beingborged, var/silent, var/exclude_bosses=0)
/datum/game_mode/remove_monkey(datum/mind/monkey_mind)
/datum/game_mode/remove_revolutionary(datum/mind/rev_mind , beingborged)
/datum/game_mode/revolution
/datum/game_mode/revolution/announce()
/datum/game_mode/revolution/check_finished()
/datum/game_mode/revolution/check_heads()
/datum/game_mode/revolution/check_heads_victory()
/datum/game_mode/revolution/check_rev_victory()
/datum/game_mode/revolution/check_win()
/datum/game_mode/revolution/declare_completion()
/datum/game_mode/revolution/latejoin_headrev()
/datum/game_mode/revolution/mark_for_death(var/datum/mind/rev_mind, var/datum/mind/head_mind)
/datum/game_mode/revolution/post_setup()
/datum/game_mode/revolution/pre_setup()
/datum/game_mode/revolution/process()
/datum/game_mode/sandbox
/datum/game_mode/sandbox/announce()
/datum/game_mode/sandbox/post_setup()
/datum/game_mode/sandbox/pre_setup()
/datum/game_mode/send_intercept()
/datum/game_mode/set_antag_hud(var/mob/living/M, var/new_icon_state)
/datum/game_mode/shadowling
/datum/game_mode/shadowling/announce()
/datum/game_mode/shadowling/check_shadow_victory()
/datum/game_mode/shadowling/declare_completion()
/datum/game_mode/shadowling/post_setup()
/datum/game_mode/shadowling/pre_setup()
/datum/game_mode/traitor
/datum/game_mode/traitor/add_latejoin_traitor(var/datum/mind/character)
/datum/game_mode/traitor/announce()
/datum/game_mode/traitor/changeling
/datum/game_mode/traitor/changeling/announce()
/datum/game_mode/traitor/changeling/can_start()
/datum/game_mode/traitor/changeling/make_antag_chance(var/mob/living/carbon/human/character)
/datum/game_mode/traitor/changeling/post_setup()
/datum/game_mode/traitor/changeling/pre_setup()
/datum/game_mode/traitor/declare_completion()
/datum/game_mode/traitor/double_agents
/datum/game_mode/traitor/double_agents/add_latejoin_traitor(var/datum/mind/character)
/datum/game_mode/traitor/double_agents/announce()
/datum/game_mode/traitor/double_agents/check_potential_agents()
/datum/game_mode/traitor/double_agents/forge_traitor_objectives(var/datum/mind/traitor)
/datum/game_mode/traitor/double_agents/post_setup()
/datum/game_mode/traitor/make_antag_chance(var/mob/living/carbon/human/character)
/datum/game_mode/traitor/post_setup()
/datum/game_mode/traitor/pre_setup()
/datum/game_mode/update_cult_icons_added(datum/mind/cult_mind)
/datum/game_mode/update_cult_icons_removed(datum/mind/cult_mind)
/datum/game_mode/update_gang_icons_added(datum/mind/recruit_mind, var/gang)
/datum/game_mode/update_gang_icons_removed(datum/mind/defector_mind, var/gang)
/datum/game_mode/update_rev_icons_added(datum/mind/rev_mind)
/datum/game_mode/update_rev_icons_removed(datum/mind/rev_mind)
/datum/game_mode/update_shadow_icons_added(datum/mind/shadow_mind)
/datum/game_mode/update_shadow_icons_removed(datum/mind/shadow_mind)
/datum/game_mode/update_synd_icons_added(datum/mind/synd_mind)
/datum/game_mode/update_synd_icons_removed(datum/mind/synd_mind)
/datum/game_mode/update_wiz_icons_added(datum/mind/wiz_mind)
/datum/game_mode/update_wiz_icons_removed(datum/mind/wiz_mind)
/datum/game_mode/wizard
/datum/game_mode/wizard/announce()
/datum/game_mode/wizard/check_finished()
/datum/game_mode/wizard/declare_completion()
/datum/game_mode/wizard/post_setup()
/datum/game_mode/wizard/pre_setup()
/datum/game_mode/wizard/raginmages
/datum/game_mode/wizard/raginmages/check_finished()
/datum/game_mode/wizard/raginmages/declare_completion()
/datum/game_mode/wizard/raginmages/greet_wizard(var/datum/mind/wizard, var/you_are=1)
/datum/game_mode/wizard/raginmages/makeBody(var/mob/dead/observer/G_found)
/datum/game_mode/wizard/raginmages/make_more_mages()
/datum/game_mode/wizard/raginmages/post_setup()
/datum/gang_points
/datum/gang_points/income()
/datum/gang_points/start()
/datum/gas
/datum/gas/oxygen_agent_b
/datum/gas/sleeping_agent
/datum/gas/volatile_fuel
/datum/gas_mixture
/datum/gas_mixture/archive()
/datum/gas_mixture/check_both_then_temperature_share(datum/gas_mixture/sharer, conduction_coefficient)
/datum/gas_mixture/check_gas_mixture(datum/gas_mixture/sharer)
/datum/gas_mixture/check_me_then_temperature_mimic(turf/model, conduction_coefficient)
/datum/gas_mixture/check_me_then_temperature_share(datum/gas_mixture/sharer, conduction_coefficient)
/datum/gas_mixture/check_me_then_temperature_turf_share(turf/simulated/sharer, conduction_coefficient)
/datum/gas_mixture/check_then_merge(datum/gas_mixture/giver)
/datum/gas_mixture/check_then_remove(amount)
/datum/gas_mixture/check_tile_graphic()
/datum/gas_mixture/check_turf(turf/model)
/datum/gas_mixture/check_turf(turf/model, atmos_adjacent_turfs = 4)
/datum/gas_mixture/check_turf_total(turf/model)
/datum/gas_mixture/compare(datum/gas_mixture/sample)
/datum/gas_mixture/copy_from(datum/gas_mixture/sample)
/datum/gas_mixture/fire()
/datum/gas_mixture/get_breath_partial_pressure(var/gas_pressure)
/datum/gas_mixture/get_true_breath_pressure(var/breath_pp)
/datum/gas_mixture/heat_capacity()
/datum/gas_mixture/heat_capacity_archived()
/datum/gas_mixture/merge(datum/gas_mixture/giver)
/datum/gas_mixture/mimic(turf/model)
/datum/gas_mixture/mimic(turf/model, border_multiplier, var/atmos_adjacent_turfs = 4)
/datum/gas_mixture/react(atom/dump_location)
/datum/gas_mixture/remove(amount)
/datum/gas_mixture/remove_ratio(ratio)
/datum/gas_mixture/return_pressure()
/datum/gas_mixture/return_temperature()
/datum/gas_mixture/return_volume()
/datum/gas_mixture/share(datum/gas_mixture/sharer)
/datum/gas_mixture/share(datum/gas_mixture/sharer, var/atmos_adjacent_turfs = 4)
/datum/gas_mixture/subtract(datum/gas_mixture/right_side)
/datum/gas_mixture/temperature_mimic(turf/model, conduction_coefficient)
/datum/gas_mixture/temperature_mimic(turf/model, conduction_coefficient, border_multiplier)
/datum/gas_mixture/temperature_share(datum/gas_mixture/sharer, conduction_coefficient)
/datum/gas_mixture/temperature_turf_share(turf/simulated/sharer, conduction_coefficient)
/datum/gas_mixture/thermal_energy()
/datum/gas_mixture/total_moles()
/datum/getrev
/datum/getrev/New()
/datum/global_hud
/datum/global_hud/New()
/datum/global_iterator
/datum/global_iterator/Destroy()
/datum/global_iterator/New(list/arguments=null,autostart=1)
/datum/global_iterator/active()
/datum/global_iterator/get_last_exec_time()
/datum/global_iterator/get_last_exec_time_as_text()
/datum/global_iterator/has_null_args()
/datum/global_iterator/main()
/datum/global_iterator/mech_sleeper
/datum/global_iterator/mech_sleeper/process(var/obj/item/mecha_parts/mecha_equipment/tool/sleeper/S)
/datum/global_iterator/mech_synth
/datum/global_iterator/mech_synth/process(var/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/S)
/datum/global_iterator/mecha_energy_relay
/datum/global_iterator/mecha_energy_relay/process(var/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/ER)
/datum/global_iterator/mecha_generator
/datum/global_iterator/mecha_generator/nuclear
/datum/global_iterator/mecha_generator/nuclear/process(var/obj/item/mecha_parts/mecha_equipment/generator/nuclear/EG)
/datum/global_iterator/mecha_generator/process(var/obj/item/mecha_parts/mecha_equipment/generator/EG)
/datum/global_iterator/mecha_internal_damage
/datum/global_iterator/mecha_internal_damage/process(var/obj/mecha/mecha)
/datum/global_iterator/mecha_preserve_temp
/datum/global_iterator/mecha_preserve_temp/process(var/obj/mecha/mecha)
/datum/global_iterator/mecha_repair_droid
/datum/global_iterator/mecha_repair_droid/process(var/obj/item/mecha_parts/mecha_equipment/repair_droid/RD as obj)
/datum/global_iterator/mecha_tank_give_air
/datum/global_iterator/mecha_tank_give_air/process(var/obj/mecha/mecha)
/datum/global_iterator/process()
/datum/global_iterator/set_delay(new_delay)
/datum/global_iterator/set_process_args(list/arguments)
/datum/global_iterator/start(list/arguments=null)
/datum/global_iterator/state_check()
/datum/global_iterator/stop()
/datum/global_iterator/toggle()
/datum/global_iterator/toggle_null_checks()
/datum/hSB
/datum/hSB/Topic(href, href_list)
/datum/hSB/update()
/datum/holiday
/datum/holiday/UFO
/datum/holiday/animal
/datum/holiday/april_fools
/datum/holiday/beer
/datum/holiday/birthday
/datum/holiday/birthday/greet()
/datum/holiday/boss
/datum/holiday/boxing
/datum/holiday/celebrate()
/datum/holiday/doctor
/datum/holiday/earth
/datum/holiday/easter
/datum/holiday/easter/greet()
/datum/holiday/easter/shouldCelebrate(dd, mm, yy)
/datum/holiday/firefighter
/datum/holiday/flowers
/datum/holiday/fourtwenty
/datum/holiday/friday_thirteenth
/datum/holiday/friday_thirteenth/getStationPrefix()
/datum/holiday/friday_thirteenth/shouldCelebrate(dd, mm, yy)
/datum/holiday/friendship
/datum/holiday/friendship/greet()
/datum/holiday/getStationPrefix()
/datum/holiday/greet()
/datum/holiday/groundhog
/datum/holiday/halloween
/datum/holiday/halloween/greet()
/datum/holiday/hello
/datum/holiday/hello/greet()
/datum/holiday/human_rights
/datum/holiday/kindness
/datum/holiday/labor
/datum/holiday/monkey
/datum/holiday/new_year
/datum/holiday/no_this_is_patrick
/datum/holiday/pi
/datum/holiday/pirate
/datum/holiday/pirate/greet()
/datum/holiday/questions
/datum/holiday/questions/greet()
/datum/holiday/random_kindness
/datum/holiday/random_kindness/greet()
/datum/holiday/shouldCelebrate(dd, mm, yy)
/datum/holiday/smile
/datum/holiday/valentines
/datum/holiday/vegan
/datum/holiday/writer
/datum/holiday/xmas
/datum/holiday/xmas/greet()
/datum/hud
/datum/hud/ButtonNumberToScreenCoords(var/number)
/datum/hud/New(mob/owner)
/datum/hud/SetButtonCoords(var/obj/screen/button,var/number)
/datum/hud/ai_hud()
/datum/hud/alien_hud()
/datum/hud/blob_hud(ui_style = 'icons/mob/screen_midnight.dmi')
/datum/hud/brain_hud(ui_style = 'icons/mob/screen_midnight.dmi')
/datum/hud/drone_hud(ui_style = 'icons/mob/screen_midnight.dmi')
/datum/hud/ghost_hud()
/datum/hud/hidden_inventory_update()
/datum/hud/human_hud(ui_style = 'icons/mob/screen_midnight.dmi')
/datum/hud/instantiate()
/datum/hud/larva_hud()
/datum/hud/monkey_hud(ui_style = 'icons/mob/screen_midnight.dmi')
/datum/hud/persistant_inventory_update()
/datum/hud/reorganize_alerts()
/datum/hud/robot_hud()
/datum/hud/show_hud(var/version = 0)
/datum/hud/toggle_show_robot_modules()
/datum/hud/unplayer_hud()
/datum/hud/update_robot_modules_display()
/datum/icon_snapshot
/datum/icon_snapshot/makeImg()
/datum/intercept_text
/datum/intercept_text/build(var/mode_type, datum/mind/correct_person)
/datum/intercept_text/build_changeling(datum/mind/correct_person)
/datum/intercept_text/build_cult(datum/mind/correct_person)
/datum/intercept_text/build_gang(datum/mind/correct_person)
/datum/intercept_text/build_malf(datum/mind/correct_person)
/datum/intercept_text/build_nuke(datum/mind/correct_person)
/datum/intercept_text/build_rev(datum/mind/correct_person)
/datum/intercept_text/build_traitor(datum/mind/correct_person)
/datum/intercept_text/build_wizard(datum/mind/correct_person)
/datum/job
/datum/job/ai
/datum/job/ai/config_check()
/datum/job/ai/equip(var/mob/living/carbon/human/H)
/datum/job/apply_fingerprints(var/mob/living/carbon/human/H)
/datum/job/assistant
/datum/job/assistant/config_check()
/datum/job/assistant/equip_items(var/mob/living/carbon/human/H)
/datum/job/assistant/get_access()
/datum/job/atmos
/datum/job/atmos/equip_items(var/mob/living/carbon/human/H)
/datum/job/available_in_days(client/C)
/datum/job/bartender
/datum/job/bartender/equip_backpack(var/mob/living/carbon/human/H)
/datum/job/bartender/equip_items(var/mob/living/carbon/human/H)
/datum/job/captain
/datum/job/captain/equip_items(var/mob/living/carbon/human/H)
/datum/job/captain/get_access()
/datum/job/cargo_tech
/datum/job/cargo_tech/equip_items(var/mob/living/carbon/human/H)
/datum/job/chaplain
/datum/job/chaplain/equip_items(var/mob/living/carbon/human/H)
/datum/job/check_config_for_sec_maint()
/datum/job/chemist
/datum/job/chemist/equip_items(var/mob/living/carbon/human/H)
/datum/job/chief_engineer
/datum/job/chief_engineer/equip_items(var/mob/living/carbon/human/H)
/datum/job/clown
/datum/job/clown/equip_backpack(var/mob/living/carbon/human/H)
/datum/job/clown/equip_items(var/mob/living/carbon/human/H)
/datum/job/cmo
/datum/job/cmo/equip_items(var/mob/living/carbon/human/H)
/datum/job/config_check()
/datum/job/cook
/datum/job/cook/equip_items(var/mob/living/carbon/human/H)
/datum/job/cyborg
/datum/job/cyborg/equip(var/mob/living/carbon/human/H)
/datum/job/detective
/datum/job/detective/equip_items(var/mob/living/carbon/human/H)
/datum/job/doctor
/datum/job/doctor/equip_items(var/mob/living/carbon/human/H)
/datum/job/engineer
/datum/job/engineer/equip_items(var/mob/living/carbon/human/H)
/datum/job/equip(var/mob/living/carbon/human/H)
/datum/job/equip_backpack(var/mob/living/carbon/human/H)
/datum/job/equip_items(var/mob/living/carbon/human/H)
/datum/job/geneticist
/datum/job/geneticist/equip_items(var/mob/living/carbon/human/H)
/datum/job/get_access()
/datum/job/hop
/datum/job/hop/equip_items(var/mob/living/carbon/human/H)
/datum/job/hos
/datum/job/hos/equip_items(var/mob/living/carbon/human/H)
/datum/job/hydro
/datum/job/hydro/equip_items(var/mob/living/carbon/human/H)
/datum/job/janitor
/datum/job/janitor/equip_items(var/mob/living/carbon/human/H)
/datum/job/lawyer
/datum/job/lawyer/equip_items(var/mob/living/carbon/human/H)
/datum/job/librarian
/datum/job/librarian/equip_items(var/mob/living/carbon/human/H)
/datum/job/mime
/datum/job/mime/equip_backpack(var/mob/living/carbon/human/H)
/datum/job/mime/equip_items(var/mob/living/carbon/human/H)
/datum/job/mining
/datum/job/mining/equip_items(var/mob/living/carbon/human/H)
/datum/job/officer
/datum/job/officer/assign_sec_to_department(var/mob/living/carbon/human/H)
/datum/job/officer/equip_items(var/mob/living/carbon/human/H)
/datum/job/officer/get_access()
/datum/job/player_old_enough(client/C)
/datum/job/qm
/datum/job/qm/equip_items(var/mob/living/carbon/human/H)
/datum/job/rd
/datum/job/rd/equip_items(var/mob/living/carbon/human/H)
/datum/job/roboticist
/datum/job/roboticist/equip_items(var/mob/living/carbon/human/H)
/datum/job/scientist
/datum/job/scientist/equip_items(var/mob/living/carbon/human/H)
/datum/job/virologist
/datum/job/virologist/equip_items(var/mob/living/carbon/human/H)
/datum/job/warden
/datum/job/warden/equip_items(var/mob/living/carbon/human/H)
/datum/job/warden/get_access()
/datum/light_source
/datum/light_source/Destroy()
/datum/light_source/New(atom/A)
/datum/light_source/add_effect()
/datum/light_source/changed()
/datum/light_source/changed()/for(var/turf/T in effect)
/datum/light_source/check()
/datum/mapGenerator
/datum/mapGenerator/New()
/datum/mapGenerator/checkRegion(var/turf/Start, var/turf/End)
/datum/mapGenerator/defineCircularRegion(var/turf/Start, var/turf/End, var/replace = 0)
/datum/mapGenerator/defineRegion(var/turf/Start, var/turf/End, var/replace = 0)
/datum/mapGenerator/generate()
/datum/mapGenerator/generateOneTurf(var/turf/T)
/datum/mapGenerator/initialiseModules()
/datum/mapGenerator/nature
/datum/mapGenerator/syncModules()
/datum/mapGenerator/undefineRegion()
/datum/mapGeneratorModule
/datum/mapGeneratorModule/bottomLayer
/datum/mapGeneratorModule/bottomLayer/grassTurfs
/datum/mapGeneratorModule/checkPlaceAtom(var/turf/T)
/datum/mapGeneratorModule/deadTrees
/datum/mapGeneratorModule/denseLayer
/datum/mapGeneratorModule/denseLayer/grassTufts
/datum/mapGeneratorModule/generate()
/datum/mapGeneratorModule/pineTrees
/datum/mapGeneratorModule/place(var/turf/T)
/datum/mapGeneratorModule/randBushes
/datum/mapGeneratorModule/randBushes/New()
/datum/mapGeneratorModule/randRocks
/datum/mapGeneratorModule/splatterLayer
/datum/mapGeneratorModule/sync(var/datum/mapGenerator/mum)
/datum/martial_art
/datum/martial_art/add_to_streak(var/element,var/mob/living/carbon/human/D)
/datum/martial_art/basic_hit(var/mob/living/carbon/human/A,var/mob/living/carbon/human/D)
/datum/martial_art/boxing
/datum/martial_art/boxing/disarm_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/boxing/grab_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/boxing/harm_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/disarm_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/grab_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/harm_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/plasma_fist
/datum/martial_art/plasma_fist/Plasma(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/plasma_fist/Throwback(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/plasma_fist/Tornado(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/plasma_fist/check_streak(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/plasma_fist/disarm_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/plasma_fist/grab_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/plasma_fist/harm_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/remove(var/mob/living/carbon/human/H)
/datum/martial_art/teach(var/mob/living/carbon/human/H,var/make_temporary=0)
/datum/martial_art/wrestling
/datum/martial_art/wrestling/Suplex(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/wrestling/disarm_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/wrestling/grab_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/martial_art/wrestling/harm_act(var/mob/living/carbon/human/A, var/mob/living/carbon/human/D)
/datum/match
/datum/match/New(pos, len)
/datum/mind
/datum/mind/AddSpell(var/obj/effect/proc_holder/spell/spell)
/datum/mind/New(var/key)
/datum/mind/Topic(href, href_list)
/datum/mind/edit_memory()
/datum/mind/find_syndicate_uplink()
/datum/mind/make_AI_Malf()
/datum/mind/make_Abductor()
/datum/mind/make_Changling()
/datum/mind/make_Cultist()
/datum/mind/make_Gang(var/gang)
/datum/mind/make_Nuke(var/turf/spawnloc,var/nuke_code,var/leader=0)
/datum/mind/make_Rev()
/datum/mind/make_Traitor()
/datum/mind/make_Wizard()
/datum/mind/remove_all_antag()
/datum/mind/remove_antag_equip()
/datum/mind/remove_changeling()
/datum/mind/remove_cultist()
/datum/mind/remove_gang()
/datum/mind/remove_malf()
/datum/mind/remove_nukeop()
/datum/mind/remove_objectives()
/datum/mind/remove_rev()
/datum/mind/remove_traitor()
/datum/mind/remove_wizard()
/datum/mind/show_memory(mob/recipient, window=1)
/datum/mind/store_memory(new_text)
/datum/mind/take_uplink()
/datum/mind/transfer_actions(var/mob/living/new_character)
/datum/mind/transfer_antag_huds(var/mob/living/M)
/datum/mind/transfer_mindbound_actions(var/mob/living/new_character)
/datum/mind/transfer_to(mob/living/new_character)
/datum/mind/wipe_memory()
/datum/module
/datum/module/New(var/obj/O)
/datum/module_picker
/datum/module_picker/New()
/datum/module_picker/Topic(href, href_list)
/datum/module_picker/remove_verbs(var/mob/living/silicon/ai/A)
/datum/module_picker/use(user as mob)
/datum/moduletypes
/datum/moduletypes/addmod(var/type, var/modtextlist)
/datum/moduletypes/getbitmask(var/type)
/datum/moduletypes/inmodlist(var/type)
/datum/mutation/
/datum/mutation/New()
/datum/mutation/human
/datum/mutation/human/bad_dna
/datum/mutation/human/bad_dna/on_acquiring(var/mob/living/carbon/human/owner)
/datum/mutation/human/blind
/datum/mutation/human/blind/on_acquiring(mob/living/carbon/human/owner)
/datum/mutation/human/blind/on_losing(mob/living/carbon/human/owner)
/datum/mutation/human/chameleon
/datum/mutation/human/chameleon/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/chameleon/on_losing(mob/living/carbon/human/owner)
/datum/mutation/human/chav
/datum/mutation/human/chav/say_mod(var/message)
/datum/mutation/human/check_block(mob/living/carbon/human/owner)
/datum/mutation/human/check_block_string(se_string)
/datum/mutation/human/clumsy
/datum/mutation/human/clumsy/on_acquiring(mob/living/carbon/human/owner)
/datum/mutation/human/clumsy/on_losing(mob/living/carbon/human/owner)
/datum/mutation/human/cold_resistance
/datum/mutation/human/cold_resistance/New()
/datum/mutation/human/cold_resistance/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/cough
/datum/mutation/human/cough/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/deaf
/datum/mutation/human/deaf/on_acquiring(mob/living/carbon/human/owner)
/datum/mutation/human/deaf/on_losing(mob/living/carbon/human/owner)
/datum/mutation/human/elvis
/datum/mutation/human/elvis/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/elvis/say_mod(var/message)
/datum/mutation/human/epilepsy
/datum/mutation/human/epilepsy/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/force_give(mob/living/carbon/human/owner)
/datum/mutation/human/force_lose(mob/living/carbon/human/owner)
/datum/mutation/human/gain_indication(mob/living/carbon/human/owner)
/datum/mutation/human/get_spans()
/datum/mutation/human/hulk
/datum/mutation/human/hulk/New()
/datum/mutation/human/hulk/gain_indication(mob/living/carbon/human/owner)
/datum/mutation/human/hulk/on_acquiring(mob/living/carbon/human/owner)
/datum/mutation/human/hulk/on_attack_hand(mob/living/carbon/human/owner, atom/target)
/datum/mutation/human/hulk/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/hulk/on_losing(mob/living/carbon/human/owner)
/datum/mutation/human/hulk/say_mod(var/message)
/datum/mutation/human/laser_eyes
/datum/mutation/human/laser_eyes/on_ranged_attack(mob/living/carbon/human/owner, atom/target)
/datum/mutation/human/lose_indication(mob/living/carbon/human/owner)
/datum/mutation/human/mute
/datum/mutation/human/mute/on_acquiring(mob/living/carbon/human/owner)
/datum/mutation/human/mute/on_losing(mob/living/carbon/human/owner)
/datum/mutation/human/nearsight
/datum/mutation/human/nearsight/on_acquiring(mob/living/carbon/human/owner)
/datum/mutation/human/nearsight/on_losing(mob/living/carbon/human/owner)
/datum/mutation/human/nervousness
/datum/mutation/human/nervousness/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/on_acquiring(mob/living/carbon/human/owner)
/datum/mutation/human/on_attack_hand(mob/living/carbon/human/owner, atom/target)
/datum/mutation/human/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/on_losing(mob/living/carbon/human/owner)
/datum/mutation/human/on_ranged_attack(mob/living/carbon/human/owner, atom/target)
/datum/mutation/human/race
/datum/mutation/human/race/gain_indication(mob/living/carbon/human/owner)
/datum/mutation/human/race/lose_indication(mob/living/carbon/monkey/owner)
/datum/mutation/human/race/on_acquiring(mob/living/carbon/human/owner)
/datum/mutation/human/race/on_losing(mob/living/carbon/monkey/owner)
/datum/mutation/human/say_mod(var/message)
/datum/mutation/human/set_block(mob/living/carbon/owner, on = 1)
/datum/mutation/human/set_se(se_string, on = 1)
/datum/mutation/human/smile
/datum/mutation/human/smile/say_mod(var/message)
/datum/mutation/human/stealth
/datum/mutation/human/stealth/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/stealth/on_losing(mob/living/carbon/human/owner)
/datum/mutation/human/swedish
/datum/mutation/human/swedish/say_mod(var/message)
/datum/mutation/human/telekinesis
/datum/mutation/human/telekinesis/New()
/datum/mutation/human/telekinesis/on_ranged_attack(mob/living/carbon/human/owner, atom/target)
/datum/mutation/human/tourettes
/datum/mutation/human/tourettes/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/unintelligable
/datum/mutation/human/unintelligable/say_mod(var/message)
/datum/mutation/human/wacky
/datum/mutation/human/wacky/get_spans()
/datum/mutation/human/x_ray
/datum/mutation/human/x_ray/on_acquiring(mob/living/carbon/human/owner)
/datum/mutation/human/x_ray/on_life(mob/living/carbon/human/owner)
/datum/mutation/human/x_ray/on_losing(mob/living/carbon/human/owner)
/datum/nanoui
/datum/nanoui/New(nuser, nsrc_object, nui_key, ntemplate, ntitle = 0, nwidth = 0, nheight = 0, var/atom/nref = null)
/datum/nanoui/Topic(href, href_list)
/datum/nanoui/add_common_assets()
/datum/nanoui/add_default_data(list/data)
/datum/nanoui/add_script(file)
/datum/nanoui/add_stylesheet(file)
/datum/nanoui/add_template(key, file)
/datum/nanoui/close()
/datum/nanoui/get_footer()
/datum/nanoui/get_header()
/datum/nanoui/get_html()
/datum/nanoui/on_close_winset()
/datum/nanoui/open()
/datum/nanoui/process(update = 0)
/datum/nanoui/push_data(data, force_push = 0)
/datum/nanoui/set_auto_update(state = 1)
/datum/nanoui/set_content(ncontent)
/datum/nanoui/set_initial_data(list/data)
/datum/nanoui/set_status(state, push_update)
/datum/nanoui/set_window_options(nwindow_options)
/datum/nanoui/update_status(push_update = 0)
/datum/nanoui/use_on_close_logic(state)
/datum/newscaster
/datum/newscaster/feed_channel
/datum/newscaster/feed_channel/returnAuthor(censor)
/datum/newscaster/feed_channel/toggleCensorAuthor()
/datum/newscaster/feed_channel/toggleCensorDclass()
/datum/newscaster/feed_comment
/datum/newscaster/feed_message
/datum/newscaster/feed_message/returnAuthor(censor)
/datum/newscaster/feed_message/returnBody(censor)
/datum/newscaster/feed_message/toggleCensorAuthor()
/datum/newscaster/feed_message/toggleCensorBody()
/datum/newscaster/feed_network
/datum/newscaster/feed_network/CreateFeedChannel(channel_name, author, locked, adminChannel = 0)
/datum/newscaster/feed_network/New()
/datum/newscaster/feed_network/SubmitArticle(msg, author, channel_name, obj/item/weapon/photo/photo, adminMessage = 0, allow_comments = 1)
/datum/newscaster/feed_network/deleteWanted()
/datum/newscaster/feed_network/submitWanted(criminal, body, scanned_user, obj/item/weapon/photo/photo, adminMsg = 0, newMessage = 0)
/datum/newscaster/wanted_message
/datum/numbered_display
/datum/numbered_display/New(obj/item/sample)
/datum/objective
/datum/objective/New(var/text)
/datum/objective/abductee
/datum/objective/abductee/capture
/datum/objective/abductee/capture/New()
/datum/objective/abductee/noclone
/datum/objective/abductee/shuttle
/datum/objective/abductee/steal
/datum/objective/abductee/steal/New()
/datum/objective/absorb
/datum/objective/absorb/check_completion()
/datum/objective/absorb/gen_amount_goal(var/lowbound = 4, var/highbound = 6)
/datum/objective/assassinate
/datum/objective/assassinate/check_completion()
/datum/objective/assassinate/find_target_by_role(role, role_type=0)
/datum/objective/assassinate/update_explanation_text()
/datum/objective/block
/datum/objective/block/check_completion()
/datum/objective/capture
/datum/objective/capture/check_completion()
/datum/objective/capture/gen_amount_goal()
/datum/objective/check_completion()
/datum/objective/debrain
/datum/objective/debrain/check_completion()
/datum/objective/debrain/find_target_by_role(role, role_type=0)
/datum/objective/debrain/update_explanation_text()
/datum/objective/destroy
/datum/objective/destroy/check_completion()
/datum/objective/destroy/find_target()
/datum/objective/destroy/update_explanation_text()
/datum/objective/download
/datum/objective/download/check_completion()
/datum/objective/download/gen_amount_goal()
/datum/objective/escape
/datum/objective/escape/check_completion()
/datum/objective/escape/escape_with_identity
/datum/objective/escape/escape_with_identity/check_completion()
/datum/objective/escape/escape_with_identity/find_target()
/datum/objective/escape/escape_with_identity/update_explanation_text()
/datum/objective/experiment
/datum/objective/experiment/New()
/datum/objective/experiment/check_completion()
/datum/objective/find_target()
/datum/objective/find_target_by_role(role, role_type=0)
/datum/objective/get_target()
/datum/objective/hijack
/datum/objective/hijack/check_completion()
/datum/objective/is_unique_objective(possible_target)
/datum/objective/maroon
/datum/objective/maroon/check_completion()
/datum/objective/maroon/find_target_by_role(role, role_type=0)
/datum/objective/maroon/update_explanation_text()
/datum/objective/martyr
/datum/objective/martyr/check_completion()
/datum/objective/mutiny
/datum/objective/mutiny/check_completion()
/datum/objective/mutiny/find_target_by_role(role, role_type=0)
/datum/objective/mutiny/update_explanation_text()
/datum/objective/nuclear
/datum/objective/protect
/datum/objective/protect/check_completion()
/datum/objective/protect/find_target_by_role(role, role_type=0)
/datum/objective/protect/update_explanation_text()
/datum/objective/revenant
/datum/objective/revenant/New()
/datum/objective/revenant/check_completion()
/datum/objective/revenantFluff
/datum/objective/revenantFluff/New()
/datum/objective/revenantFluff/check_completion()
/datum/objective/steal
/datum/objective/steal/New()
/datum/objective/steal/check_completion()
/datum/objective/steal/exchange
/datum/objective/steal/exchange/backstab
/datum/objective/steal/exchange/backstab/set_faction(var/faction)
/datum/objective/steal/exchange/set_faction(var/faction,var/otheragent)
/datum/objective/steal/exchange/update_explanation_text()
/datum/objective/steal/find_target()
/datum/objective/steal/get_target()
/datum/objective/steal/select_target()
/datum/objective/steal/set_target(var/datum/objective_item/item)
/datum/objective/steal/special
/datum/objective/steal/special/New()
/datum/objective/steal/special/find_target()
/datum/objective/survive
/datum/objective/survive/check_completion()
/datum/objective/update_explanation_text()
/datum/objective_item
/datum/objective_item/blueprints/check_special_completion(var/obj/item/I)
/datum/objective_item/functionalai/check_special_completion(var/obj/item/device/aicard/C)
/datum/objective_item/plasma/check_special_completion(var/obj/item/weapon/tank/T)
/datum/objective_item/slime/check_special_completion(var/obj/item/slime_extract/E)
/datum/objective_item/special/aegun
/datum/objective_item/special/boh
/datum/objective_item/special/corgimeat
/datum/objective_item/special/ddrill
/datum/objective_item/special/hypercell
/datum/objective_item/special/laserpointer
/datum/objective_item/special/pinpointer
/datum/objective_item/stack
/datum/objective_item/stack/check_special_completion(var/obj/item/stack/S)
/datum/objective_item/stack/diamond
/datum/objective_item/stack/gold
/datum/objective_item/stack/uranium
/datum/objective_item/steal/ablative
/datum/objective_item/steal/blueprints
/datum/objective_item/steal/caplaser
/datum/objective_item/steal/capmedal
/datum/objective_item/steal/documents
/datum/objective_item/steal/functionalai
/datum/objective_item/steal/handtele
/datum/objective_item/steal/hoslaser
/datum/objective_item/steal/hypo
/datum/objective_item/steal/jetpack
/datum/objective_item/steal/magboots
/datum/objective_item/steal/nukedisc
/datum/objective_item/steal/plasma
/datum/objective_item/steal/rcd
/datum/objective_item/steal/reactive
/datum/objective_item/steal/slime
/datum/objective_item/unique/docs_blue
/datum/objective_item/unique/docs_red
/datum/paiCandidate
/datum/paiCandidate/savefile_load(mob/user, var/silent = 1)
/datum/paiCandidate/savefile_path(mob/user)
/datum/paiCandidate/savefile_save(mob/user)
/datum/picture
/datum/pipe_info
/datum/pipe_info/New(var/pid,var/direction,var/dt)
/datum/pipe_info/Render(var/dispenser,var/label)
/datum/pipe_info/disposal
/datum/pipe_info/disposal/New(var/pid,var/dt)
/datum/pipe_info/disposal/Render(var/dispenser,var/label)
/datum/pipe_info/meter
/datum/pipe_info/meter/New()
/datum/pipe_info/meter/Render(var/dispenser,var/label)
/datum/pipeline
/datum/pipeline/Destroy()
/datum/pipeline/New()
/datum/pipeline/addMachineryMember(obj/machinery/atmospherics/A)
/datum/pipeline/addMember(obj/machinery/atmospherics/A, obj/machinery/atmospherics/N)
/datum/pipeline/build_pipeline(obj/machinery/atmospherics/base)
/datum/pipeline/merge(datum/pipeline/E)
/datum/pipeline/process()
/datum/pipeline/reconcile_air()
/datum/pipeline/temperature_interact(turf/target, share_volume, thermal_conductivity)
/datum/pipeline/temporarily_store_air()
/datum/polloption
/datum/powernet
/datum/powernet/Destroy()
/datum/powernet/New()
/datum/powernet/add_cable(var/obj/structure/cable/C)
/datum/powernet/add_machine(var/obj/machinery/power/M)
/datum/powernet/get_electrocute_damage()
/datum/powernet/is_empty()
/datum/powernet/remove_cable(var/obj/structure/cable/C)
/datum/powernet/remove_machine(var/obj/machinery/power/M)
/datum/powernet/reset()
/datum/preferences
/datum/preferences/GetJobDepartment(var/datum/job/job, var/level)
/datum/preferences/New(client/C)
/datum/preferences/ResetJobs()
/datum/preferences/SetChoices(mob/user, limit = 17, list/splitJobs = list("Chief Engineer"), widthPerColumn = 295, height = 620)
/datum/preferences/SetJobPreferenceLevel(var/datum/job/job, var/level)
/datum/preferences/ShowChoices(mob/user)
/datum/preferences/UpdateJobPreference(mob/user, role, desiredLvl)
/datum/preferences/copy_to(mob/living/carbon/human/character)
/datum/preferences/load_character(slot)
/datum/preferences/load_path(ckey,filename="preferences.sav")
/datum/preferences/load_preferences()
/datum/preferences/process_link(mob/user, list/href_list)
/datum/preferences/random_character(gender_override)
/datum/preferences/save_character()
/datum/preferences/save_preferences()
/datum/preferences/savefile_needs_update(savefile/S)
/datum/preferences/update_character(current_version)
/datum/preferences/update_preferences(current_version)
/datum/preferences/update_preview_icon()
/datum/process()
/datum/projectile_data
/datum/radio_frequency
/datum/radio_frequency/add_listener(obj/device as obj, var/filter as text|null)
/datum/radio_frequency/post_signal(obj/source as obj|null, datum/signal/signal, var/filter = null as text|null, var/range = null as num|null)
/datum/radio_frequency/proc/remove_listener(obj/device)
/datum/radio_frequency/remove_listener(obj/device)
/datum/reagent
/datum/reagent/Destroy()
/datum/reagent/acetone
/datum/reagent/addiction_act_stage1(var/mob/living/M as mob)
/datum/reagent/addiction_act_stage2(var/mob/living/M as mob)
/datum/reagent/addiction_act_stage3(var/mob/living/M as mob)
/datum/reagent/addiction_act_stage4(var/mob/living/M as mob)
/datum/reagent/aluminium
/datum/reagent/ammonia
/datum/reagent/ash
/datum/reagent/aslimetoxin
/datum/reagent/aslimetoxin/reaction_mob(var/mob/M, var/volume)
/datum/reagent/barbers_aid
/datum/reagent/barbers_aid/reaction_mob(var/mob/living/M, var/volume)
/datum/reagent/blackpowder
/datum/reagent/blackpowder/on_ex_act()
/datum/reagent/blob
/datum/reagent/blob/b_sorium
/datum/reagent/blob/b_sorium/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/blob/boiling_oil
/datum/reagent/blob/boiling_oil/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/blob/dark_matter
/datum/reagent/blob/dark_matter/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/blob/explosive
/datum/reagent/blob/explosive/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/blob/lung_destroying_toxin
/datum/reagent/blob/lung_destroying_toxin/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume,var/show_message = 1)
/datum/reagent/blob/morphine
/datum/reagent/blob/morphine/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/blob/omnizine
/datum/reagent/blob/omnizine/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/blob/radioactive_liquid
/datum/reagent/blob/radioactive_liquid/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume,var/show_message = 1)
/datum/reagent/blob/reagent_vortex(var/mob/living/M as mob, var/setting_type)
/datum/reagent/blob/send_message(var/mob/living/M as mob)
/datum/reagent/blob/skin_melter
/datum/reagent/blob/skin_melter/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/blob/skin_ripper
/datum/reagent/blob/skin_ripper/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/blob/spacedrugs
/datum/reagent/blob/spacedrugs/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/blob/toxic_goop
/datum/reagent/blob/toxic_goop/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/blood
/datum/reagent/blood/on_merge(var/list/data)
/datum/reagent/blood/on_new(var/list/data)
/datum/reagent/blood/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/blood/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/bromine
/datum/reagent/carbon
/datum/reagent/carbon/reaction_turf(var/turf/T, var/volume)
/datum/reagent/carpet
/datum/reagent/carpet/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/chlorine
/datum/reagent/chlorine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/clf3
/datum/reagent/clf3/on_mob_life(var/mob/living/M as mob)
/datum/reagent/clf3/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/clf3/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/colorful_reagent
/datum/reagent/colorful_reagent/on_mob_life(var/mob/living/M as mob)
/datum/reagent/colorful_reagent/reaction_mob(var/mob/living/M, var/volume)
/datum/reagent/colorful_reagent/reaction_obj(var/obj/O, var/volume)
/datum/reagent/colorful_reagent/reaction_turf(var/turf/T, var/volume)
/datum/reagent/concentrated_barbers_aid
/datum/reagent/concentrated_barbers_aid/reaction_mob(var/mob/living/M, var/volume)
/datum/reagent/consumable
/datum/reagent/consumable/atomicbomb
/datum/reagent/consumable/atomicbomb/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/banana
/datum/reagent/consumable/banana/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/berryjuice
/datum/reagent/consumable/blackpepper
/datum/reagent/consumable/bluecherryjelly
/datum/reagent/consumable/bluecherryshake
/datum/reagent/consumable/blumpkinjuice
/datum/reagent/consumable/cafe_latte
/datum/reagent/consumable/cafe_latte/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/capsaicin
/datum/reagent/consumable/capsaicin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/carrotjuice
/datum/reagent/consumable/carrotjuice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/cherryjelly
/datum/reagent/consumable/cherryshake
/datum/reagent/consumable/chocolatepudding
/datum/reagent/consumable/coco
/datum/reagent/consumable/coffee
/datum/reagent/consumable/coffee/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/coffee/overdose_process(var/mob/living/M as mob)
/datum/reagent/consumable/condensedcapsaicin
/datum/reagent/consumable/condensedcapsaicin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/condensedcapsaicin/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/consumable/corn_starch
/datum/reagent/consumable/corn_syrup
/datum/reagent/consumable/corn_syrup/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/cornoil
/datum/reagent/consumable/cornoil/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/consumable/cream
/datum/reagent/consumable/cream/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/doctor_delight
/datum/reagent/consumable/dr_gibb
/datum/reagent/consumable/dr_gibb/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/dry_ramen
/datum/reagent/consumable/eggyolk
/datum/reagent/consumable/enzyme
/datum/reagent/consumable/ethanol
/datum/reagent/consumable/ethanol/acid_spit
/datum/reagent/consumable/ethanol/ale
/datum/reagent/consumable/ethanol/alliescocktail
/datum/reagent/consumable/ethanol/aloe
/datum/reagent/consumable/ethanol/amasec
/datum/reagent/consumable/ethanol/andalusia
/datum/reagent/consumable/ethanol/antifreeze
/datum/reagent/consumable/ethanol/antifreeze/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/b52
/datum/reagent/consumable/ethanol/bahama_mama
/datum/reagent/consumable/ethanol/bananahonk
/datum/reagent/consumable/ethanol/bananahonk/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/barefoot
/datum/reagent/consumable/ethanol/beepsky_smash
/datum/reagent/consumable/ethanol/beepsky_smash/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/beer
/datum/reagent/consumable/ethanol/beer/greenbeer
/datum/reagent/consumable/ethanol/bilk
/datum/reagent/consumable/ethanol/bilk/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/black_russian
/datum/reagent/consumable/ethanol/bloody_mary
/datum/reagent/consumable/ethanol/booger
/datum/reagent/consumable/ethanol/brave_bull
/datum/reagent/consumable/ethanol/changelingsting
/datum/reagent/consumable/ethanol/cognac
/datum/reagent/consumable/ethanol/cuba_libre
/datum/reagent/consumable/ethanol/demonsblood
/datum/reagent/consumable/ethanol/devilskiss
/datum/reagent/consumable/ethanol/driestmartini
/datum/reagent/consumable/ethanol/drunkenblumpkin
/datum/reagent/consumable/ethanol/erikasurprise
/datum/reagent/consumable/ethanol/gin
/datum/reagent/consumable/ethanol/ginfizz
/datum/reagent/consumable/ethanol/gintonic
/datum/reagent/consumable/ethanol/goldschlager
/datum/reagent/consumable/ethanol/grog
/datum/reagent/consumable/ethanol/hooch
/datum/reagent/consumable/ethanol/iced_beer
/datum/reagent/consumable/ethanol/iced_beer/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/irish_cream
/datum/reagent/consumable/ethanol/irishcarbomb
/datum/reagent/consumable/ethanol/irishcoffee
/datum/reagent/consumable/ethanol/kahlua
/datum/reagent/consumable/ethanol/kahlua/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/longislandicedtea
/datum/reagent/consumable/ethanol/manhattan
/datum/reagent/consumable/ethanol/manhattan_proj
/datum/reagent/consumable/ethanol/manhattan_proj/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/manly_dorf
/datum/reagent/consumable/ethanol/margarita
/datum/reagent/consumable/ethanol/martini
/datum/reagent/consumable/ethanol/mead
/datum/reagent/consumable/ethanol/moonshine
/datum/reagent/consumable/ethanol/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/patron
/datum/reagent/consumable/ethanol/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/consumable/ethanol/reaction_obj(var/obj/O, var/volume)
/datum/reagent/consumable/ethanol/red_mead
/datum/reagent/consumable/ethanol/rum
/datum/reagent/consumable/ethanol/sbiten
/datum/reagent/consumable/ethanol/sbiten/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/screwdrivercocktail
/datum/reagent/consumable/ethanol/silencer
/datum/reagent/consumable/ethanol/silencer/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/singulo
/datum/reagent/consumable/ethanol/snowwhite
/datum/reagent/consumable/ethanol/syndicatebomb
/datum/reagent/consumable/ethanol/tequila
/datum/reagent/consumable/ethanol/tequila_sunrise
/datum/reagent/consumable/ethanol/thirteenloko
/datum/reagent/consumable/ethanol/thirteenloko/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/threemileisland
/datum/reagent/consumable/ethanol/threemileisland/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/toxins_special
/datum/reagent/consumable/ethanol/toxins_special/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/vermouth
/datum/reagent/consumable/ethanol/vodka
/datum/reagent/consumable/ethanol/vodka/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ethanol/vodkamartini
/datum/reagent/consumable/ethanol/vodkatonic
/datum/reagent/consumable/ethanol/whiskey
/datum/reagent/consumable/ethanol/whiskey_cola
/datum/reagent/consumable/ethanol/whiskeysoda
/datum/reagent/consumable/ethanol/white_russian
/datum/reagent/consumable/ethanol/wine
/datum/reagent/consumable/flour
/datum/reagent/consumable/flour/reaction_turf(var/turf/T, var/volume)
/datum/reagent/consumable/frostoil
/datum/reagent/consumable/frostoil/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/frostoil/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/consumable/gargle_blaster
/datum/reagent/consumable/gargle_blaster/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/gibbfloats
/datum/reagent/consumable/hell_ramen
/datum/reagent/consumable/hell_ramen/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/hippies_delight
/datum/reagent/consumable/hippies_delight/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/hot_coco
/datum/reagent/consumable/hot_coco/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/hot_ramen
/datum/reagent/consumable/hot_ramen/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ice
/datum/reagent/consumable/ice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/icecoffee
/datum/reagent/consumable/icecoffee/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/icetea
/datum/reagent/consumable/icetea/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/ketchup
/datum/reagent/consumable/lemon_lime
/datum/reagent/consumable/lemon_lime/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/lemonjuice
/datum/reagent/consumable/limejuice
/datum/reagent/consumable/limejuice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/milk
/datum/reagent/consumable/milk/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/neurotoxin
/datum/reagent/consumable/neurotoxin/on_mob_life(var/mob/living/carbon/M as mob)
/datum/reagent/consumable/nothing
/datum/reagent/consumable/nothing/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/nuka_cola
/datum/reagent/consumable/nuka_cola/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/nutriment
/datum/reagent/consumable/nutriment/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/orangejuice
/datum/reagent/consumable/orangejuice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/poisonberryjuice
/datum/reagent/consumable/poisonberryjuice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/potato_juice
/datum/reagent/consumable/pumpkin_latte
/datum/reagent/consumable/pumpkinjuice
/datum/reagent/consumable/rice
/datum/reagent/consumable/sodawater
/datum/reagent/consumable/sodawater/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/sodiumchloride
/datum/reagent/consumable/soy_latte
/datum/reagent/consumable/soy_latte/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/soymilk
/datum/reagent/consumable/soymilk/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/soysauce
/datum/reagent/consumable/space_cola
/datum/reagent/consumable/space_cola/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/space_up
/datum/reagent/consumable/space_up/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/spacemountainwind
/datum/reagent/consumable/spacemountainwind/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/sprinkles
/datum/reagent/consumable/sprinkles/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/sugar
/datum/reagent/consumable/sugar/overdose_process(var/mob/living/M as mob)
/datum/reagent/consumable/sugar/overdose_start(var/mob/living/M as mob)
/datum/reagent/consumable/tea
/datum/reagent/consumable/tea/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/tomatojuice
/datum/reagent/consumable/tomatojuice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/tonic
/datum/reagent/consumable/tonic/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/triple_citrus
/datum/reagent/consumable/vanilla
/datum/reagent/consumable/vanillapudding
/datum/reagent/consumable/virus_food
/datum/reagent/consumable/vitamin
/datum/reagent/consumable/vitamin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/consumable/watermelonjuice
/datum/reagent/copper
/datum/reagent/crayonpowder
/datum/reagent/crayonpowder/New()
/datum/reagent/crayonpowder/blue
/datum/reagent/crayonpowder/green
/datum/reagent/crayonpowder/invisible
/datum/reagent/crayonpowder/orange
/datum/reagent/crayonpowder/purple
/datum/reagent/crayonpowder/red
/datum/reagent/crayonpowder/yellow
/datum/reagent/cryostylane
/datum/reagent/cryostylane/on_mob_life(var/mob/living/M as mob)
/datum/reagent/cryostylane/on_tick()
/datum/reagent/cryostylane/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/cryptobiolin
/datum/reagent/cryptobiolin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/diethylamine
/datum/reagent/drug
/datum/reagent/drug/aranesp
/datum/reagent/drug/aranesp/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drug/bath_salts
/datum/reagent/drug/bath_salts/addiction_act_stage1(var/mob/living/M as mob)
/datum/reagent/drug/bath_salts/addiction_act_stage2(var/mob/living/M as mob)
/datum/reagent/drug/bath_salts/addiction_act_stage3(var/mob/living/M as mob)
/datum/reagent/drug/bath_salts/addiction_act_stage4(var/mob/living/carbon/human/M as mob)
/datum/reagent/drug/bath_salts/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drug/bath_salts/overdose_process(var/mob/living/M as mob)
/datum/reagent/drug/crank
/datum/reagent/drug/crank/addiction_act_stage1(var/mob/living/M as mob)
/datum/reagent/drug/crank/addiction_act_stage2(var/mob/living/M as mob)
/datum/reagent/drug/crank/addiction_act_stage3(var/mob/living/M as mob)
/datum/reagent/drug/crank/addiction_act_stage4(var/mob/living/M as mob)
/datum/reagent/drug/crank/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drug/crank/overdose_process(var/mob/living/M as mob)
/datum/reagent/drug/krokodil
/datum/reagent/drug/krokodil/addiction_act_stage1(var/mob/living/M as mob)
/datum/reagent/drug/krokodil/addiction_act_stage3(var/mob/living/M as mob)
/datum/reagent/drug/krokodil/addiction_act_stage4(var/mob/living/carbon/human/M as mob)
/datum/reagent/drug/krokodil/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drug/krokodil/overdose_process(var/mob/living/M as mob)
/datum/reagent/drug/methamphetamine
/datum/reagent/drug/methamphetamine/addiction_act_stage1(var/mob/living/M as mob)
/datum/reagent/drug/methamphetamine/addiction_act_stage2(var/mob/living/M as mob)
/datum/reagent/drug/methamphetamine/addiction_act_stage3(var/mob/living/M as mob)
/datum/reagent/drug/methamphetamine/addiction_act_stage4(var/mob/living/carbon/human/M as mob)
/datum/reagent/drug/methamphetamine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drug/methamphetamine/overdose_process(var/mob/living/M as mob)
/datum/reagent/drug/nicotine
/datum/reagent/drug/nicotine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drug/space_drugs
/datum/reagent/drug/space_drugs/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drug/space_drugs/overdose_process(var/mob/living/M as mob)
/datum/reagent/flash_powder
/datum/reagent/fluorine
/datum/reagent/fluorine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/fluorosurfactant
/datum/reagent/foaming_agent
/datum/reagent/fuel
/datum/reagent/fuel/on_mob_life(var/mob/living/M as mob)
/datum/reagent/fuel/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/fuel/unholywater
/datum/reagent/fuel/unholywater/on_mob_life(var/mob/living/M as mob)
/datum/reagent/glycerol
/datum/reagent/gold
/datum/reagent/hair_dye
/datum/reagent/hair_dye/reaction_mob(var/mob/living/M, var/volume)
/datum/reagent/hellwater
/datum/reagent/hellwater/on_mob_life(var/mob/living/M as mob)
/datum/reagent/hydrogen
/datum/reagent/impedrezene
/datum/reagent/impedrezene/on_mob_life(var/mob/living/M as mob)
/datum/reagent/iodine
/datum/reagent/iron
/datum/reagent/krokodil/addiction_act_stage2(var/mob/living/M as mob)
/datum/reagent/liquid_dark_matter
/datum/reagent/lithium
/datum/reagent/lithium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/lube
/datum/reagent/lube/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/medicine
/datum/reagent/medicine/adminordrazine
/datum/reagent/medicine/adminordrazine/nanites
/datum/reagent/medicine/adminordrazine/on_mob_life(var/mob/living/carbon/M as mob)
/datum/reagent/medicine/antihol
/datum/reagent/medicine/antihol/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/antitoxin
/datum/reagent/medicine/antitoxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/antitoxin/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/atropine
/datum/reagent/medicine/atropine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/atropine/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/bicaridine
/datum/reagent/medicine/bicaridine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/bicaridine/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/calomel
/datum/reagent/medicine/calomel/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/changelingAdrenaline
/datum/reagent/medicine/changelingAdrenaline/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/changelingAdrenaline/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/changelingAdrenaline2
/datum/reagent/medicine/changelingAdrenaline2/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/charcoal
/datum/reagent/medicine/charcoal/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/cryoxadone
/datum/reagent/medicine/cryoxadone/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/dexalin
/datum/reagent/medicine/dexalin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/dexalin/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/diphenhydramine
/datum/reagent/medicine/diphenhydramine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/ephedrine
/datum/reagent/medicine/ephedrine/addiction_act_stage1(var/mob/living/M as mob)
/datum/reagent/medicine/ephedrine/addiction_act_stage2(var/mob/living/M as mob)
/datum/reagent/medicine/ephedrine/addiction_act_stage3(var/mob/living/M as mob)
/datum/reagent/medicine/ephedrine/addiction_act_stage4(var/mob/living/M as mob)
/datum/reagent/medicine/ephedrine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/ephedrine/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/epinephrine
/datum/reagent/medicine/epinephrine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/epinephrine/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/inacusiate
/datum/reagent/medicine/inacusiate/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/inaprovaline
/datum/reagent/medicine/inaprovaline/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/insulin
/datum/reagent/medicine/insulin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/kelotane
/datum/reagent/medicine/kelotane/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/kelotane/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/leporazine
/datum/reagent/medicine/leporazine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/mannitol
/datum/reagent/medicine/mannitol/on_mob_life(mob/living/M as mob)
/datum/reagent/medicine/morphine
/datum/reagent/medicine/morphine/addiction_act_stage1(var/mob/living/M as mob)
/datum/reagent/medicine/morphine/addiction_act_stage2(var/mob/living/M as mob)
/datum/reagent/medicine/morphine/addiction_act_stage3(var/mob/living/M as mob)
/datum/reagent/medicine/morphine/addiction_act_stage4(var/mob/living/M as mob)
/datum/reagent/medicine/morphine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/morphine/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/mutadone
/datum/reagent/medicine/mutadone/on_mob_life(var/mob/living/carbon/human/M as mob)
/datum/reagent/medicine/oculine
/datum/reagent/medicine/oculine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/omnizine
/datum/reagent/medicine/omnizine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/omnizine/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/pen_acid
/datum/reagent/medicine/pen_acid/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/perfluorodecalin
/datum/reagent/medicine/perfluorodecalin/on_mob_life(var/mob/living/carbon/human/M as mob)
/datum/reagent/medicine/potass_iodide
/datum/reagent/medicine/potass_iodide/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/rezadone
/datum/reagent/medicine/rezadone/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/sal_acid
/datum/reagent/medicine/sal_acid/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/sal_acid/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/salbutamol
/datum/reagent/medicine/salbutamol/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/salglu_solution
/datum/reagent/medicine/salglu_solution/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/silver_sulfadiazine
/datum/reagent/medicine/silver_sulfadiazine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/silver_sulfadiazine/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/medicine/spaceacillin
/datum/reagent/medicine/stimulants
/datum/reagent/medicine/stimulants/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/stimulants/overdose_process(var/mob/living/M as mob)
/datum/reagent/medicine/strange_reagent
/datum/reagent/medicine/strange_reagent/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/strange_reagent/reaction_mob(var/mob/living/carbon/human/M as mob, var/method=TOUCH, var/volume)
/datum/reagent/medicine/styptic_powder
/datum/reagent/medicine/styptic_powder/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/styptic_powder/reaction_mob(var/mob/living/M as mob, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/medicine/synaptizine
/datum/reagent/medicine/synaptizine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/synthflesh
/datum/reagent/medicine/synthflesh/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume,var/show_message = 1)
/datum/reagent/medicine/tricordrazine
/datum/reagent/medicine/tricordrazine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/medicine/tricordrazine/overdose_process(var/mob/living/M as mob)
/datum/reagent/mercury
/datum/reagent/mercury/on_mob_life(var/mob/living/M as mob)
/datum/reagent/mushroomhallucinogen
/datum/reagent/mushroomhallucinogen/on_mob_life(var/mob/living/M as mob)
/datum/reagent/nanites
/datum/reagent/nanites/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/napalm
/datum/reagent/napalm/on_mob_life(var/mob/living/M as mob)
/datum/reagent/napalm/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/nitrogen
/datum/reagent/nitroglycerin
/datum/reagent/oil
/datum/reagent/on_ex_act(var/severity)
/datum/reagent/on_merge(var/data)
/datum/reagent/on_mob_delete(mob/M)
/datum/reagent/on_mob_life(var/mob/living/M as mob)
/datum/reagent/on_move(var/mob/M)
/datum/reagent/on_new(var/data)
/datum/reagent/on_tick(var/data)
/datum/reagent/on_update(var/atom/A)
/datum/reagent/overdose_process(var/mob/living/M as mob)
/datum/reagent/overdose_start(var/mob/living/M as mob)
/datum/reagent/oxygen
/datum/reagent/phenol
/datum/reagent/phlogiston
/datum/reagent/phlogiston/on_mob_life(var/mob/living/M as mob)
/datum/reagent/phosphorus
/datum/reagent/plantnutriment
/datum/reagent/plantnutriment/eznutriment
/datum/reagent/plantnutriment/left4zednutriment
/datum/reagent/plantnutriment/on_mob_life(var/mob/living/M as mob)
/datum/reagent/plantnutriment/robustharvestnutriment
/datum/reagent/potassium
/datum/reagent/pyrosium
/datum/reagent/pyrosium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/pyrosium/on_tick()
/datum/reagent/radium
/datum/reagent/radium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/radium/reaction_turf(var/turf/T, var/volume)
/datum/reagent/reaction_mob(var/mob/M, var/method=TOUCH, var/volume, var/show_message = 1)
/datum/reagent/reaction_obj(var/obj/O, var/volume)
/datum/reagent/reaction_turf(var/turf/T, var/volume)
/datum/reagent/saltpetre
/datum/reagent/serotrotium
/datum/reagent/serotrotium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/shadowling_blindness_smoke
/datum/reagent/shadowling_blindness_smoke/on_mob_life(var/mob/living/M as mob)
/datum/reagent/silicon
/datum/reagent/silver
/datum/reagent/slimetoxin
/datum/reagent/smoke_powder
/datum/reagent/sodium
/datum/reagent/sonic_powder
/datum/reagent/sorium
/datum/reagent/space_cleaner
/datum/reagent/space_cleaner/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/space_cleaner/reaction_obj(var/obj/O, var/volume)
/datum/reagent/space_cleaner/reaction_turf(var/turf/T, var/volume)
/datum/reagent/stabilizing_agent
/datum/reagent/stable_plasma
/datum/reagent/sterilizine
/datum/reagent/sulfur
/datum/reagent/thermite
/datum/reagent/thermite/on_mob_life(var/mob/living/M as mob)
/datum/reagent/thermite/reaction_turf(var/turf/T, var/volume)
/datum/reagent/toxin
/datum/reagent/toxin/acid
/datum/reagent/toxin/acid/fluacid
/datum/reagent/toxin/acid/reaction_mob(var/mob/living/carbon/C, var/method=TOUCH, var/volume)
/datum/reagent/toxin/acid/reaction_obj(var/obj/O, var/volume)
/datum/reagent/toxin/amanitin
/datum/reagent/toxin/amanitin/on_mob_delete(var/mob/living/M as mob)
/datum/reagent/toxin/amatoxin
/datum/reagent/toxin/beer2
/datum/reagent/toxin/beer2/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/carpotoxin
/datum/reagent/toxin/chloralhydrate
/datum/reagent/toxin/chloralhydrate/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/coffeepowder
/datum/reagent/toxin/coniine
/datum/reagent/toxin/coniine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/curare
/datum/reagent/toxin/curare/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/cyanide
/datum/reagent/toxin/cyanide/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/formaldehyde
/datum/reagent/toxin/formaldehyde/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/histamine
/datum/reagent/toxin/histamine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/histamine/overdose_process(var/mob/living/M as mob)
/datum/reagent/toxin/initropidril
/datum/reagent/toxin/initropidril/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/itching_powder
/datum/reagent/toxin/itching_powder/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/itching_powder/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/toxin/lexorin
/datum/reagent/toxin/lexorin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/lipolicide
/datum/reagent/toxin/lipolicide/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/mindbreaker
/datum/reagent/toxin/mindbreaker/on_mob_life(var/mob/living/M)
/datum/reagent/toxin/minttoxin
/datum/reagent/toxin/minttoxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/mutagen
/datum/reagent/toxin/mutagen/on_mob_life(var/mob/living/carbon/M)
/datum/reagent/toxin/mutagen/reaction_mob(var/mob/living/carbon/M, var/method=TOUCH, var/volume)
/datum/reagent/toxin/mutetoxin
/datum/reagent/toxin/mutetoxin/on_mob_life(mob/living/carbon/M)
/datum/reagent/toxin/neurotoxin2
/datum/reagent/toxin/neurotoxin2/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/pancuronium
/datum/reagent/toxin/pancuronium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/pestkiller
/datum/reagent/toxin/pestkiller/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/toxin/plantbgone
/datum/reagent/toxin/plantbgone/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/toxin/plantbgone/reaction_obj(var/obj/O, var/volume)
/datum/reagent/toxin/plantbgone/weedkiller
/datum/reagent/toxin/plasma
/datum/reagent/toxin/plasma/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/plasma/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/toxin/plasma/reaction_obj(var/obj/O, var/volume)
/datum/reagent/toxin/plasma/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/toxin/polonium
/datum/reagent/toxin/polonium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/questionmark
/datum/reagent/toxin/slimejelly
/datum/reagent/toxin/slimejelly/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/sodium_thiopental
/datum/reagent/toxin/sodium_thiopental/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/spore
/datum/reagent/toxin/spore/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/spore_burning
/datum/reagent/toxin/spore_burning/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/staminatoxin
/datum/reagent/toxin/staminatoxin/on_mob_life(mob/living/carbon/M)
/datum/reagent/toxin/sulfonal
/datum/reagent/toxin/sulfonal/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/teapowder
/datum/reagent/toxin/venom
/datum/reagent/toxin/venom/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/zombiepowder
/datum/reagent/toxin/zombiepowder/on_mob_delete(mob/M)
/datum/reagent/toxin/zombiepowder/on_mob_life(var/mob/living/carbon/M as mob)
/datum/reagent/unstableslimetoxin
/datum/reagent/unstableslimetoxin/on_mob_life(var/mob/living/carbon/human/H as mob)
/datum/reagent/uranium
/datum/reagent/uranium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/uranium/reaction_turf(var/turf/T, var/volume)
/datum/reagent/vaccine
/datum/reagent/vaccine/on_merge(var/list/data)
/datum/reagent/vaccine/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/water
/datum/reagent/water/holywater
/datum/reagent/water/holywater/on_mob_life(var/mob/living/M as mob)
/datum/reagent/water/holywater/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/water/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/water/reaction_obj(var/obj/O, var/volume)
/datum/reagent/water/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/xenomicrobes
/datum/reagent/xenomicrobes/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagents
/datum/reagents/Destroy()
/datum/reagents/New(maximum=100)
/datum/reagents/add_reagent(var/reagent, var/amount, var/list/data=null, var/reagtemp = 300)
/datum/reagents/add_reagent_list(var/list/list_reagents, var/list/data=null)
/datum/reagents/check_gofast(var/mob/M)
/datum/reagents/check_goreallyfast(var/mob/M)
/datum/reagents/check_ignoreslow(var/mob/M)
/datum/reagents/clear_reagents()
/datum/reagents/conditional_update(var/atom/A)
/datum/reagents/conditional_update_move(var/atom/A, var/Running = 0)
/datum/reagents/copy_data(var/datum/reagent/current_reagent)
/datum/reagents/copy_to(var/obj/target, var/amount=1, var/multiplier=1, var/preserve_data=1)
/datum/reagents/del_reagent(var/reagent)
/datum/reagents/get_data(var/reagent_id)
/datum/reagents/get_master_reagent_id()
/datum/reagents/get_master_reagent_name()
/datum/reagents/get_reagent_amount(var/reagent)
/datum/reagents/get_reagents()
/datum/reagents/handle_reactions()
/datum/reagents/has_reagent(var/reagent, var/amount = -1)
/datum/reagents/isolate_reagent(var/reagent)
/datum/reagents/metabolize(var/mob/M)
/datum/reagents/process()
/datum/reagents/reaction(var/atom/A, var/method=TOUCH, var/volume_modifier=1,var/show_message=1)
/datum/reagents/remove_all_type(var/reagent_type, var/amount, var/strict = 0, var/safety = 1)
/datum/reagents/remove_any(var/amount=1)
/datum/reagents/remove_reagent(var/reagent, var/amount, var/safety)
/datum/reagents/set_data(var/reagent_id, var/new_data)
/datum/reagents/trans_id_to(var/obj/target, var/reagent, var/amount=1, var/preserve_data=1)
/datum/reagents/trans_to(var/obj/target, var/amount=1, var/multiplier=1, var/preserve_data=1)
/datum/reagents/update_total()
/datum/recipe
/datum/recipe/check_items(var/obj/container as obj)
/datum/recipe/check_reagents(var/datum/reagents/avail_reagents)
/datum/recipe/make(var/obj/container as obj)
/datum/recipe/make_food(var/obj/container as obj)
/datum/regex
/datum/regex/New(str, exp, results)
/datum/regex/end(i)
/datum/regex/len(i)
/datum/regex/pos(i)
/datum/regex/report()
/datum/regex/str(i)
/datum/research
/datum/research/AddDesign2Known(var/datum/design/D)
/datum/research/AddTech2Known(var/datum/tech/T)
/datum/research/DesignHasReqs(var/datum/design/D)
/datum/research/FindDesignByID(var/id)
/datum/research/New()
/datum/research/RefreshResearch()
/datum/research/TechHasReqs(var/datum/tech/T)
/datum/research/UpdateDesigns(var/obj/item/I, var/list/temp_tech)
/datum/research/UpdateTech(var/ID, var/level)
/datum/research/autolathe/AddDesign2Known(var/datum/design/D)
/datum/research/autolathe/New()
/datum/robot_energy_storage
/datum/robot_energy_storage/New()
/datum/robot_energy_storage/add_charge(var/amount)
/datum/robot_energy_storage/gauze
/datum/robot_energy_storage/glass
/datum/robot_energy_storage/metal
/datum/robot_energy_storage/use_charge(var/amount)
/datum/robot_energy_storage/wire
/datum/round_event
/datum/round_event/New()
/datum/round_event/alien_infestation
/datum/round_event/alien_infestation/announce()
/datum/round_event/alien_infestation/kill()
/datum/round_event/alien_infestation/setup()
/datum/round_event/alien_infestation/start()
/datum/round_event/announce()
/datum/round_event/anomaly
/datum/round_event/anomaly/announce()
/datum/round_event/anomaly/anomaly_bluespace
/datum/round_event/anomaly/anomaly_bluespace/announce()
/datum/round_event/anomaly/anomaly_bluespace/end()
/datum/round_event/anomaly/anomaly_bluespace/start()
/datum/round_event/anomaly/anomaly_flux
/datum/round_event/anomaly/anomaly_flux/announce()
/datum/round_event/anomaly/anomaly_flux/end()
/datum/round_event/anomaly/anomaly_flux/start()
/datum/round_event/anomaly/anomaly_grav
/datum/round_event/anomaly/anomaly_grav/announce()
/datum/round_event/anomaly/anomaly_grav/start()
/datum/round_event/anomaly/anomaly_pyro
/datum/round_event/anomaly/anomaly_pyro/announce()
/datum/round_event/anomaly/anomaly_pyro/end()
/datum/round_event/anomaly/anomaly_pyro/start()
/datum/round_event/anomaly/anomaly_pyro/tick()
/datum/round_event/anomaly/anomaly_vortex
/datum/round_event/anomaly/anomaly_vortex/announce()
/datum/round_event/anomaly/anomaly_vortex/start()
/datum/round_event/anomaly/end()
/datum/round_event/anomaly/setup(loop=0)
/datum/round_event/anomaly/start()
/datum/round_event/anomaly/tick()
/datum/round_event/blob
/datum/round_event/blob/New(var/strength)
/datum/round_event/blob/announce()
/datum/round_event/blob/start()
/datum/round_event/blob/tick()
/datum/round_event/brand_intelligence
/datum/round_event/brand_intelligence/announce()
/datum/round_event/brand_intelligence/start()
/datum/round_event/brand_intelligence/tick()
/datum/round_event/camera_failure
/datum/round_event/camera_failure/tick()
/datum/round_event/carp_migration
/datum/round_event/carp_migration/announce()
/datum/round_event/carp_migration/eyeballs/start()
/datum/round_event/carp_migration/setup()
/datum/round_event/carp_migration/start()
/datum/round_event/communications_blackout
/datum/round_event/communications_blackout/announce()
/datum/round_event/communications_blackout/start()
/datum/round_event/disease_outbreak
/datum/round_event/disease_outbreak/announce()
/datum/round_event/disease_outbreak/setup()
/datum/round_event/disease_outbreak/start()
/datum/round_event/easter/announce()
/datum/round_event/electrical_storm
/datum/round_event/electrical_storm/announce()
/datum/round_event/electrical_storm/start()
/datum/round_event/end()
/datum/round_event/falsealarm
/datum/round_event/falsealarm/announce()
/datum/round_event/findEventArea()
/datum/round_event/immovable_rod
/datum/round_event/immovable_rod/announce()
/datum/round_event/immovable_rod/start()
/datum/round_event/ion_storm
/datum/round_event/ion_storm/New(var/botEmagChance = 10, var/announceEvent = 0, var/ionMessage = null, var/ionAnnounceChance = 33)
/datum/round_event/ion_storm/announce()
/datum/round_event/ion_storm/start()
/datum/round_event/kill()
/datum/round_event/mass_hallucination/start()
/datum/round_event/meteor_wave
/datum/round_event/meteor_wave/New()
/datum/round_event/meteor_wave/announce()
/datum/round_event/meteor_wave/dust
/datum/round_event/meteor_wave/dust/announce()
/datum/round_event/meteor_wave/dust/start()
/datum/round_event/meteor_wave/dust/tick()
/datum/round_event/meteor_wave/meaty/announce()
/datum/round_event/meteor_wave/meaty/tick()
/datum/round_event/meteor_wave/random_wave_type()
/datum/round_event/meteor_wave/spooky
/datum/round_event/meteor_wave/spooky/tick()
/datum/round_event/meteor_wave/tick()
/datum/round_event/ninja
/datum/round_event/ninja/kill()
/datum/round_event/ninja/setup()
/datum/round_event/ninja/start()
/datum/round_event/presents/announce()
/datum/round_event/presents/start()
/datum/round_event/prison_break
/datum/round_event/prison_break/announce()
/datum/round_event/prison_break/end()
/datum/round_event/prison_break/setup()
/datum/round_event/prison_break/start()
/datum/round_event/process()
/datum/round_event/rabbitrelease/announce()
/datum/round_event/rabbitrelease/start()
/datum/round_event/radiation_storm
/datum/round_event/radiation_storm/announce()
/datum/round_event/radiation_storm/end()
/datum/round_event/radiation_storm/setup()
/datum/round_event/radiation_storm/start()
/datum/round_event/revenant
/datum/round_event/revenant/find_revenant()
/datum/round_event/revenant/get_revenant(var/end_if_fail = 0)
/datum/round_event/revenant/start()
/datum/round_event/santa
/datum/round_event/santa/announce()
/datum/round_event/santa/start()
/datum/round_event/setup()
/datum/round_event/shuttle_loan
/datum/round_event/shuttle_loan/announce()
/datum/round_event/shuttle_loan/end()
/datum/round_event/shuttle_loan/loan_shuttle()
/datum/round_event/shuttle_loan/start()
/datum/round_event/shuttle_loan/tick()
/datum/round_event/slaughter
/datum/round_event/slaughter/find_slaughter()
/datum/round_event/slaughter/get_slaughter(var/end_if_fail = 0)
/datum/round_event/slaughter/start()
/datum/round_event/spacevine/start()
/datum/round_event/spider_infestation
/datum/round_event/spider_infestation/announce()
/datum/round_event/spider_infestation/setup()
/datum/round_event/spider_infestation/start()
/datum/round_event/spontaneous_appendicitis/start()
/datum/round_event/spooky/announce()
/datum/round_event/spooky/start()
/datum/round_event/start()
/datum/round_event/tick()
/datum/round_event/treevenge/start()
/datum/round_event/vent_clog
/datum/round_event/vent_clog/announce()
/datum/round_event/vent_clog/setup()
/datum/round_event/vent_clog/tick()
/datum/round_event/wizard/blobies/start()
/datum/round_event/wizard/cursed_items/start()
/datum/round_event/wizard/deprevolt/start()
/datum/round_event/wizard/fake_explosion/start()
/datum/round_event/wizard/ghost/start()
/datum/round_event/wizard/greentext/start()
/datum/round_event/wizard/imposter/start()
/datum/round_event/wizard/improvedcasting/start()
/datum/round_event/wizard/invincible/start()
/datum/round_event/wizard/lava/
/datum/round_event/wizard/lava/end()
/datum/round_event/wizard/lava/start()
/datum/round_event/wizard/lava/tick()
/datum/round_event/wizard/magicarp/
/datum/round_event/wizard/magicarp/announce()
/datum/round_event/wizard/magicarp/setup()
/datum/round_event/wizard/magicarp/start()
/datum/round_event/wizard/petsplosion/
/datum/round_event/wizard/petsplosion/tick()
/datum/round_event/wizard/possession/start()
/datum/round_event/wizard/race/start()
/datum/round_event/wizard/robelesscasting/start()
/datum/round_event/wizard/rpgloot/start()
/datum/round_event/wizard/shuffle/start()
/datum/round_event/wizard/shuffleloc/start()
/datum/round_event/wizard/shuffleminds/start()
/datum/round_event/wizard/shufflenames/start()
/datum/round_event/wizard/summonguns/start()
/datum/round_event/wizard/summonmagic/start()
/datum/round_event/wormholes
/datum/round_event/wormholes/announce()
/datum/round_event/wormholes/end()
/datum/round_event/wormholes/setup()
/datum/round_event/wormholes/start()
/datum/round_event/wormholes/tick()
/datum/round_event_control
/datum/round_event_control/alien_infestation
/datum/round_event_control/anomaly
/datum/round_event_control/anomaly/anomaly_bluespace
/datum/round_event_control/anomaly/anomaly_flux
/datum/round_event_control/anomaly/anomaly_grav
/datum/round_event_control/anomaly/anomaly_pyro
/datum/round_event_control/anomaly/anomaly_vortex
/datum/round_event_control/blob
/datum/round_event_control/brand_intelligence
/datum/round_event_control/camera_failure
/datum/round_event_control/carp_migration
/datum/round_event_control/carp_migration/eyeballs
/datum/round_event_control/communications_blackout
/datum/round_event_control/disease_outbreak
/datum/round_event_control/easter
/datum/round_event_control/electrical_storm
/datum/round_event_control/falsealarm
/datum/round_event_control/immovable_rod
/datum/round_event_control/ion_storm
/datum/round_event_control/mass_hallucination
/datum/round_event_control/meteor_wave
/datum/round_event_control/meteor_wave/dust
/datum/round_event_control/meteor_wave/meaty
/datum/round_event_control/meteor_wave/spooky
/datum/round_event_control/ninja
/datum/round_event_control/presents
/datum/round_event_control/prison_break
/datum/round_event_control/rabbitrelease
/datum/round_event_control/radiation_storm
/datum/round_event_control/revenant
/datum/round_event_control/runEvent()
/datum/round_event_control/santa
/datum/round_event_control/shuttle_loan
/datum/round_event_control/slaughter
/datum/round_event_control/spacevine
/datum/round_event_control/spider_infestation
/datum/round_event_control/spontaneous_appendicitis
/datum/round_event_control/spooky
/datum/round_event_control/treevenge
/datum/round_event_control/vent_clog
/datum/round_event_control/wizard
/datum/round_event_control/wizard/blobies
/datum/round_event_control/wizard/cursed_items
/datum/round_event_control/wizard/deprevolt
/datum/round_event_control/wizard/fake_explosion
/datum/round_event_control/wizard/ghost
/datum/round_event_control/wizard/greentext
/datum/round_event_control/wizard/imposter
/datum/round_event_control/wizard/improvedcasting
/datum/round_event_control/wizard/invincible
/datum/round_event_control/wizard/lava
/datum/round_event_control/wizard/magicarp
/datum/round_event_control/wizard/petsplosion
/datum/round_event_control/wizard/possession
/datum/round_event_control/wizard/race
/datum/round_event_control/wizard/robelesscasting
/datum/round_event_control/wizard/rpgloot
/datum/round_event_control/wizard/shuffleloc
/datum/round_event_control/wizard/shuffleminds
/datum/round_event_control/wizard/shufflenames
/datum/round_event_control/wizard/summonguns
/datum/round_event_control/wizard/summonguns/New()
/datum/round_event_control/wizard/summonmagic
/datum/round_event_control/wizard/summonmagic/New()
/datum/round_event_control/wormholes
/datum/seed_pile
/datum/seed_pile/New(var/name, var/life, var/endur, var/matur, var/prod, var/yie, var/poten, var/am = 1)
/datum/signal
/datum/signal/Del()
/datum/signal/New()
/datum/signal/copy_from(datum/signal/model)
/datum/signal/debug_print()
/datum/signal/mem(var/address, var/value)
/datum/signal/sanitize_data()
/datum/signal/signaler(var/freq = 1459, var/code = 30)
/datum/signal/tcombroadcast(var/message, var/freq, var/source, var/job, var/spans, var/say = "says", var/ask = "asks", var/yell = "yells", var/exclaim = "exclaims")
/datum/song
/datum/song/Destroy()
/datum/song/New(dir, obj)
/datum/song/Topic(href, href_list)
/datum/song/handheld
/datum/song/handheld/shouldStopPlaying()
/datum/song/handheld/updateDialog(mob/user as mob)
/datum/song/interact(mob/user as mob)
/datum/song/playnote(var/note, var/acc as text, var/oct)
/datum/song/playsong(mob/user as mob)
/datum/song/sanitize_tempo(new_tempo)
/datum/song/shouldStopPlaying(mob/user)
/datum/song/updateDialog(mob/user as mob)
/datum/sortInstance
/datum/sortInstance/binarySort(lo, hi, start)
/datum/sortInstance/countRunAndMakeAscending(lo, hi)
/datum/sortInstance/gallopLeft(key, base, len, hint)
/datum/sortInstance/gallopRight(key, base, len, hint)
/datum/sortInstance/mergeAt(i)
/datum/sortInstance/mergeAt2(i)
/datum/sortInstance/mergeCollapse()
/datum/sortInstance/mergeForceCollapse()
/datum/sortInstance/mergeHi(base1, len1, base2, len2)
/datum/sortInstance/mergeLo(base1, len1, base2, len2)
/datum/sortInstance/mergeSort(start, end)
/datum/sortInstance/minRunLength(n)
/datum/sortInstance/timSort(start, end)
/datum/spacevine_mutation
/datum/spacevine_mutation/aggressive_spread
/datum/spacevine_mutation/aggressive_spread/on_buckle(obj/effect/spacevine/holder, mob/living/buckled)
/datum/spacevine_mutation/aggressive_spread/on_spread(obj/effect/spacevine/holder, turf/target)
/datum/spacevine_mutation/bluespace
/datum/spacevine_mutation/bluespace/on_spread(obj/effect/spacevine/holder, turf/target)
/datum/spacevine_mutation/carbondioxide_eater
/datum/spacevine_mutation/carbondioxide_eater/process_mutation(obj/effect/spacevine/holder)
/datum/spacevine_mutation/explosive
/datum/spacevine_mutation/explosive/on_death(obj/effect/spacevine/holder, mob/hitter, obj/item/I)
/datum/spacevine_mutation/fire_proof
/datum/spacevine_mutation/fire_proof/process_temperature(obj/effect/spacevine/holder, temp, volume)
/datum/spacevine_mutation/light
/datum/spacevine_mutation/light/on_grow(obj/effect/spacevine/holder)
/datum/spacevine_mutation/nitro_eater
/datum/spacevine_mutation/nitro_eater/process_mutation(obj/effect/spacevine/holder)
/datum/spacevine_mutation/on_birth(obj/effect/spacevine/holder)
/datum/spacevine_mutation/on_buckle(obj/effect/spacevine/holder, mob/living/buckled)
/datum/spacevine_mutation/on_chem(obj/effect/spacevine/holder, datum/reagent/R)
/datum/spacevine_mutation/on_cross(obj/effect/spacevine/holder, mob/crosser)
/datum/spacevine_mutation/on_death(obj/effect/spacevine/holder)
/datum/spacevine_mutation/on_eat(obj/effect/spacevine/holder, mob/living/eater)
/datum/spacevine_mutation/on_grow(obj/effect/spacevine/holder)
/datum/spacevine_mutation/on_hit(obj/effect/spacevine/holder, mob/hitter, obj/item/I)
/datum/spacevine_mutation/on_spread(obj/effect/spacevine/holder, turf/target)
/datum/spacevine_mutation/oxy_eater
/datum/spacevine_mutation/oxy_eater/process_mutation(obj/effect/spacevine/holder)
/datum/spacevine_mutation/plasma_eater
/datum/spacevine_mutation/plasma_eater/process_mutation(obj/effect/spacevine/holder)
/datum/spacevine_mutation/process_mutation(obj/effect/spacevine/holder)
/datum/spacevine_mutation/process_temperature(obj/effect/spacevine/holder, temp, volume)
/datum/spacevine_mutation/space_covering
/datum/spacevine_mutation/space_covering/on_death(obj/effect/spacevine/holder)
/datum/spacevine_mutation/space_covering/on_grow(obj/effect/spacevine/holder)
/datum/spacevine_mutation/space_covering/process_mutation(obj/effect/spacevine/holder)
/datum/spacevine_mutation/thorns
/datum/spacevine_mutation/thorns/on_cross(obj/effect/spacevine/holder, mob/living/crosser)
/datum/spacevine_mutation/thorns/on_hit(obj/effect/spacevine/holder, mob/living/hitter)
/datum/spacevine_mutation/toxicity
/datum/spacevine_mutation/toxicity/on_cross(obj/effect/spacevine/holder, mob/living/crosser)
/datum/spacevine_mutation/toxicity/on_eat(obj/effect/spacevine/holder, mob/living/eater)
/datum/spacevine_mutation/transparency
/datum/spacevine_mutation/transparency/on_grow(obj/effect/spacevine/holder)
/datum/spacevine_mutation/vine_eating
/datum/spacevine_mutation/vine_eating/on_spread(obj/effect/spacevine/holder, turf/target)
/datum/spacevine_mutation/woodening
/datum/spacevine_mutation/woodening/on_grow(obj/effect/spacevine/holder)
/datum/spacevine_mutation/woodening/on_hit(obj/effect/spacevine/holder, mob/hitter, obj/item/I)
/datum/species
/datum/species/ExtinguishMob(var/mob/living/carbon/human/H)
/datum/species/IgniteMob(var/mob/living/carbon/human/H)
/datum/species/abductor
/datum/species/abductor/handle_speech(message)
/datum/species/after_equip_job(var/datum/job/J, var/mob/living/carbon/human/H)
/datum/species/apply_damage(var/damage, var/damagetype = "brute", var/def_zone = null, var/blocked, var/mob/living/carbon/human/H)
/datum/species/attacked_by(var/obj/item/I, var/mob/living/user, var/def_zone, var/mob/living/carbon/human/H)
/datum/species/auto_equip(var/mob/living/carbon/human/H)
/datum/species/before_equip_job(var/datum/job/J, var/mob/living/carbon/human/H)
/datum/species/breathe(var/mob/living/carbon/human/H)
/datum/species/can_equip(var/obj/item/I, var/slot, var/disable_warning, var/mob/living/carbon/human/H)
/datum/species/check_breath(datum/gas_mixture/breath, var/mob/living/carbon/human/H)
/datum/species/cosmetic_zombie
/datum/species/fly
/datum/species/fly/handle_chemicals(datum/reagent/chem, mob/living/carbon/human/H)
/datum/species/fly/handle_speech(message)
/datum/species/golem
/datum/species/golem/adamantine
/datum/species/handle_body(var/mob/living/carbon/human/H)
/datum/species/handle_breath_temperature(datum/gas_mixture/breath, var/mob/living/carbon/human/H)
/datum/species/handle_chemicals(var/datum/reagent/chem, var/mob/living/carbon/human/H)
/datum/species/handle_chemicals_in_body(var/mob/living/carbon/human/H)
/datum/species/handle_environment(datum/gas_mixture/environment, var/mob/living/carbon/human/H)
/datum/species/handle_fire(var/mob/living/carbon/human/H)
/datum/species/handle_hair(var/mob/living/carbon/human/H)
/datum/species/handle_hud_icons(var/mob/living/carbon/human/H)
/datum/species/handle_mutant_bodyparts(var/mob/living/carbon/human/H)
/datum/species/handle_mutations_and_radiation(var/mob/living/carbon/human/H)
/datum/species/handle_speech(var/message, var/mob/living/carbon/human/H)
/datum/species/handle_too_little_breath(var/mob/living/carbon/human/H = null,var/breath_pp = 0, var/safe_breath_min = 0, var/true_pp = 0)
/datum/species/handle_vision(var/mob/living/carbon/human/H)
/datum/species/human
/datum/species/human/handle_chemicals(datum/reagent/chem, mob/living/carbon/human/H)
/datum/species/jelly
/datum/species/jelly/handle_chemicals(datum/reagent/chem, mob/living/carbon/human/H)
/datum/species/jelly/spec_life(mob/living/carbon/human/H)
/datum/species/lizard
/datum/species/lizard/handle_speech(message)
/datum/species/lizard/spec_death(var/gibbed, var/mob/living/carbon/human/H)
/datum/species/movement_delay(var/mob/living/carbon/human/H)
/datum/species/on_hit(var/obj/item/projectile/proj_type, var/mob/living/carbon/human/H)
/datum/species/plant
/datum/species/plant/handle_chemicals(datum/reagent/chem, mob/living/carbon/human/H)
/datum/species/plant/on_hit(proj_type, mob/living/carbon/human/H)
/datum/species/plant/pod
/datum/species/plant/pod/spec_life(mob/living/carbon/human/H)
/datum/species/plasmaman
/datum/species/plasmaman/handle_chemicals(datum/reagent/chem, mob/living/carbon/human/H)
/datum/species/plasmaman/skin
/datum/species/plasmaman/spec_life(var/mob/living/carbon/human/H)
/datum/species/plasmaman/update_base_icon_state(var/mob/living/carbon/human/H)
/datum/species/shadow
/datum/species/shadow/ling
/datum/species/shadow/ling/spec_life(mob/living/carbon/human/H)
/datum/species/shadow/spec_life(mob/living/carbon/human/H)
/datum/species/skeleton
/datum/species/slime
/datum/species/slime/handle_chemicals(datum/reagent/chem, mob/living/carbon/human/H)
/datum/species/slime/spec_life(mob/living/carbon/human/H)
/datum/species/spec_attack_hand(var/mob/living/carbon/human/M, var/mob/living/carbon/human/H)
/datum/species/spec_attacked_by(var/obj/item/I, var/mob/living/user, var/def_zone, var/obj/item/organ/limb/affecting, var/hit_area, var/intent, var/obj/item/organ/limb/target_limb, target_area, var/mob/living/carbon/human/H)
/datum/species/spec_death(var/gibbed, var/mob/living/carbon/human/H)
/datum/species/spec_life(var/mob/living/carbon/human/H)
/datum/species/update_base_icon_state(var/mob/living/carbon/human/H)
/datum/species/update_color(var/mob/living/carbon/human/H)
/datum/species/zombie
/datum/species/zombie/handle_speech(message)
/datum/spellbook_entry
/datum/spellbook_entry/Buy(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/CanBuy(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/CanRefund(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/GetInfo()
/datum/spellbook_entry/IsAvailible()
/datum/spellbook_entry/Refund(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/barnyard
/datum/spellbook_entry/blind
/datum/spellbook_entry/blink
/datum/spellbook_entry/disabletech
/datum/spellbook_entry/disintegrate
/datum/spellbook_entry/fireball
/datum/spellbook_entry/fleshtostone
/datum/spellbook_entry/forcewall
/datum/spellbook_entry/item
/datum/spellbook_entry/item/Buy(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/item/GetInfo()
/datum/spellbook_entry/item/armor
/datum/spellbook_entry/item/armor/Buy(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/item/bloodbottle
/datum/spellbook_entry/item/contract
/datum/spellbook_entry/item/necrostone
/datum/spellbook_entry/item/scryingorb
/datum/spellbook_entry/item/scryingorb/Buy(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/item/soulstones
/datum/spellbook_entry/item/soulstones/Buy(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/item/staffanimation
/datum/spellbook_entry/item/staffchange
/datum/spellbook_entry/item/staffchaos
/datum/spellbook_entry/item/staffdoor
/datum/spellbook_entry/item/wands
/datum/spellbook_entry/jaunt
/datum/spellbook_entry/knock
/datum/spellbook_entry/lichdom
/datum/spellbook_entry/lightningbolt
/datum/spellbook_entry/magicm
/datum/spellbook_entry/mindswap
/datum/spellbook_entry/mutate
/datum/spellbook_entry/repulse
/datum/spellbook_entry/smoke
/datum/spellbook_entry/summon
/datum/spellbook_entry/summon/CanBuy(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/summon/GetInfo()
/datum/spellbook_entry/summon/events
/datum/spellbook_entry/summon/events/Buy(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/summon/events/GetInfo()
/datum/spellbook_entry/summon/events/IsAvailible()
/datum/spellbook_entry/summon/guns
/datum/spellbook_entry/summon/guns/Buy(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/summon/guns/IsAvailible()
/datum/spellbook_entry/summon/magic
/datum/spellbook_entry/summon/magic/Buy(var/mob/living/carbon/human/user,var/obj/item/weapon/spellbook/book)
/datum/spellbook_entry/summon/magic/IsAvailible()
/datum/spellbook_entry/summonitem
/datum/spellbook_entry/teleport
/datum/sprite_accessory
/datum/sprite_accessory/body_markings
/datum/sprite_accessory/body_markings/dstripe
/datum/sprite_accessory/body_markings/dtiger
/datum/sprite_accessory/body_markings/dtigerhead
/datum/sprite_accessory/body_markings/lbelly
/datum/sprite_accessory/body_markings/lstripe
/datum/sprite_accessory/body_markings/ltiger
/datum/sprite_accessory/body_markings/ltigerhead
/datum/sprite_accessory/body_markings/none
/datum/sprite_accessory/facial_hair
/datum/sprite_accessory/facial_hair/abe
/datum/sprite_accessory/facial_hair/chaplin
/datum/sprite_accessory/facial_hair/chinstrap
/datum/sprite_accessory/facial_hair/dwarf
/datum/sprite_accessory/facial_hair/elvis
/datum/sprite_accessory/facial_hair/fiveoclock
/datum/sprite_accessory/facial_hair/fu
/datum/sprite_accessory/facial_hair/fullbeard
/datum/sprite_accessory/facial_hair/gt
/datum/sprite_accessory/facial_hair/hip
/datum/sprite_accessory/facial_hair/hogan
/datum/sprite_accessory/facial_hair/jensen
/datum/sprite_accessory/facial_hair/longbeard
/datum/sprite_accessory/facial_hair/neckbeard
/datum/sprite_accessory/facial_hair/selleck
/datum/sprite_accessory/facial_hair/shaved
/datum/sprite_accessory/facial_hair/vandyke
/datum/sprite_accessory/facial_hair/vlongbeard
/datum/sprite_accessory/facial_hair/watson
/datum/sprite_accessory/frills
/datum/sprite_accessory/frills/aquatic
/datum/sprite_accessory/frills/none
/datum/sprite_accessory/frills/short
/datum/sprite_accessory/frills/simple
/datum/sprite_accessory/hair
/datum/sprite_accessory/hair/afro
/datum/sprite_accessory/hair/afro2
/datum/sprite_accessory/hair/afro_large
/datum/sprite_accessory/hair/antenna
/datum/sprite_accessory/hair/bald
/datum/sprite_accessory/hair/balding
/datum/sprite_accessory/hair/bedhead
/datum/sprite_accessory/hair/bedhead2
/datum/sprite_accessory/hair/bedhead3
/datum/sprite_accessory/hair/beehive
/datum/sprite_accessory/hair/beehive2
/datum/sprite_accessory/hair/bigflattop
/datum/sprite_accessory/hair/bigpompadour
/datum/sprite_accessory/hair/bob
/datum/sprite_accessory/hair/bob2
/datum/sprite_accessory/hair/bobcurl
/datum/sprite_accessory/hair/bowl
/datum/sprite_accessory/hair/braid
/datum/sprite_accessory/hair/braided
/datum/sprite_accessory/hair/braidtail
/datum/sprite_accessory/hair/bun
/datum/sprite_accessory/hair/bun2
/datum/sprite_accessory/hair/business
/datum/sprite_accessory/hair/business2
/datum/sprite_accessory/hair/business3
/datum/sprite_accessory/hair/business4
/datum/sprite_accessory/hair/buzz
/datum/sprite_accessory/hair/combover
/datum/sprite_accessory/hair/crew
/datum/sprite_accessory/hair/curls
/datum/sprite_accessory/hair/cut
/datum/sprite_accessory/hair/devillock
/datum/sprite_accessory/hair/dreadlocks
/datum/sprite_accessory/hair/drillhair
/datum/sprite_accessory/hair/emo
/datum/sprite_accessory/hair/fag
/datum/sprite_accessory/hair/feather
/datum/sprite_accessory/hair/front_braid
/datum/sprite_accessory/hair/gelled
/datum/sprite_accessory/hair/gentle
/datum/sprite_accessory/hair/halfbang
/datum/sprite_accessory/hair/halfbang2
/datum/sprite_accessory/hair/hedgehog
/datum/sprite_accessory/hair/highponytail
/datum/sprite_accessory/hair/himecut
/datum/sprite_accessory/hair/himecut2
/datum/sprite_accessory/hair/himeup
/datum/sprite_accessory/hair/hitop
/datum/sprite_accessory/hair/jensen
/datum/sprite_accessory/hair/kagami
/datum/sprite_accessory/hair/keanu
/datum/sprite_accessory/hair/kusangi
/datum/sprite_accessory/hair/long
/datum/sprite_accessory/hair/long2
/datum/sprite_accessory/hair/long_over_eye
/datum/sprite_accessory/hair/longbangs
/datum/sprite_accessory/hair/longemo
/datum/sprite_accessory/hair/longer
/datum/sprite_accessory/hair/longest
/datum/sprite_accessory/hair/longest2
/datum/sprite_accessory/hair/longestalt
/datum/sprite_accessory/hair/longfringe
/datum/sprite_accessory/hair/longponytail
/datum/sprite_accessory/hair/lowbraid
/datum/sprite_accessory/hair/megaeyebrows
/datum/sprite_accessory/hair/messy
/datum/sprite_accessory/hair/mohawk
/datum/sprite_accessory/hair/not_floorlength_braid
/datum/sprite_accessory/hair/odango
/datum/sprite_accessory/hair/ombre
/datum/sprite_accessory/hair/oneshoulder
/datum/sprite_accessory/hair/over_eye
/datum/sprite_accessory/hair/parted
/datum/sprite_accessory/hair/pigtail
/datum/sprite_accessory/hair/pixie
/datum/sprite_accessory/hair/pompadour
/datum/sprite_accessory/hair/ponytail1
/datum/sprite_accessory/hair/ponytail2
/datum/sprite_accessory/hair/ponytail3
/datum/sprite_accessory/hair/ponytail4
/datum/sprite_accessory/hair/ponytail5
/datum/sprite_accessory/hair/protagonist
/datum/sprite_accessory/hair/quiff
/datum/sprite_accessory/hair/reversemohawk
/datum/sprite_accessory/hair/sargeant
/datum/sprite_accessory/hair/short
/datum/sprite_accessory/hair/shortbraid
/datum/sprite_accessory/hair/shorthair2
/datum/sprite_accessory/hair/shorthair3
/datum/sprite_accessory/hair/sidepartlongalt
/datum/sprite_accessory/hair/sidetail
/datum/sprite_accessory/hair/sidetail2
/datum/sprite_accessory/hair/sidetail3
/datum/sprite_accessory/hair/sidetail4
/datum/sprite_accessory/hair/skinhead
/datum/sprite_accessory/hair/spiky
/datum/sprite_accessory/hair/spiky2
/datum/sprite_accessory/hair/spiky3
/datum/sprite_accessory/hair/swept
/datum/sprite_accessory/hair/swept2
/datum/sprite_accessory/hair/tressshoulder
/datum/sprite_accessory/hair/updo
/datum/sprite_accessory/horns
/datum/sprite_accessory/horns/angler
/datum/sprite_accessory/horns/curled
/datum/sprite_accessory/horns/none
/datum/sprite_accessory/horns/ram
/datum/sprite_accessory/horns/short
/datum/sprite_accessory/horns/simple
/datum/sprite_accessory/snouts
/datum/sprite_accessory/snouts/round
/datum/sprite_accessory/snouts/roundlight
/datum/sprite_accessory/snouts/sharp
/datum/sprite_accessory/snouts/sharplight
/datum/sprite_accessory/socks
/datum/sprite_accessory/socks/black_knee
/datum/sprite_accessory/socks/black_norm
/datum/sprite_accessory/socks/black_short
/datum/sprite_accessory/socks/black_thigh
/datum/sprite_accessory/socks/nude
/datum/sprite_accessory/socks/pantyhose
/datum/sprite_accessory/socks/rainbow_knee
/datum/sprite_accessory/socks/rainbow_thigh
/datum/sprite_accessory/socks/striped_knee
/datum/sprite_accessory/socks/striped_thigh
/datum/sprite_accessory/socks/thin_knee
/datum/sprite_accessory/socks/thin_thigh
/datum/sprite_accessory/socks/white_knee
/datum/sprite_accessory/socks/white_norm
/datum/sprite_accessory/socks/white_short
/datum/sprite_accessory/socks/white_thigh
/datum/sprite_accessory/spines
/datum/sprite_accessory/spines/aqautic
/datum/sprite_accessory/spines/long
/datum/sprite_accessory/spines/longmeme
/datum/sprite_accessory/spines/none
/datum/sprite_accessory/spines/short
/datum/sprite_accessory/spines/shortmeme
/datum/sprite_accessory/spines_animated
/datum/sprite_accessory/spines_animated/aqautic
/datum/sprite_accessory/spines_animated/long
/datum/sprite_accessory/spines_animated/longmeme
/datum/sprite_accessory/spines_animated/none
/datum/sprite_accessory/spines_animated/short
/datum/sprite_accessory/spines_animated/shortmeme
/datum/sprite_accessory/tails
/datum/sprite_accessory/tails/aqua
/datum/sprite_accessory/tails/club
/datum/sprite_accessory/tails/dstripe
/datum/sprite_accessory/tails/dtiger
/datum/sprite_accessory/tails/light
/datum/sprite_accessory/tails/lstripe
/datum/sprite_accessory/tails/ltiger
/datum/sprite_accessory/tails/smooth
/datum/sprite_accessory/tails_animated
/datum/sprite_accessory/tails_animated/aqua
/datum/sprite_accessory/tails_animated/club
/datum/sprite_accessory/tails_animated/dstripe
/datum/sprite_accessory/tails_animated/dtiger
/datum/sprite_accessory/tails_animated/light
/datum/sprite_accessory/tails_animated/lstripe
/datum/sprite_accessory/tails_animated/ltiger
/datum/sprite_accessory/tails_animated/smooth
/datum/sprite_accessory/undershirt
/datum/sprite_accessory/undershirt/alienshirt
/datum/sprite_accessory/undershirt/blackshortsleeve
/datum/sprite_accessory/undershirt/bluejersey
/datum/sprite_accessory/undershirt/bluepolo
/datum/sprite_accessory/undershirt/blueshirt
/datum/sprite_accessory/undershirt/blueshirtsport
/datum/sprite_accessory/undershirt/blueshortsleeve
/datum/sprite_accessory/undershirt/clownshirt
/datum/sprite_accessory/undershirt/commie
/datum/sprite_accessory/undershirt/female_midriff
/datum/sprite_accessory/undershirt/grayyellowpolo
/datum/sprite_accessory/undershirt/greenshirt
/datum/sprite_accessory/undershirt/greenshirtsport
/datum/sprite_accessory/undershirt/greenshortsleeve
/datum/sprite_accessory/undershirt/ian
/datum/sprite_accessory/undershirt/ilovent
/datum/sprite_accessory/undershirt/lover
/datum/sprite_accessory/undershirt/matroska
/datum/sprite_accessory/undershirt/meat
/datum/sprite_accessory/undershirt/mondmondjaja
/datum/sprite_accessory/undershirt/nano
/datum/sprite_accessory/undershirt/nude
/datum/sprite_accessory/undershirt/pacman
/datum/sprite_accessory/undershirt/peace
/datum/sprite_accessory/undershirt/purpleshortsleeve
/datum/sprite_accessory/undershirt/question
/datum/sprite_accessory/undershirt/redjersey
/datum/sprite_accessory/undershirt/redpolo
/datum/sprite_accessory/undershirt/redshirt
/datum/sprite_accessory/undershirt/redshirtsport
/datum/sprite_accessory/undershirt/redtop
/datum/sprite_accessory/undershirt/shirt_black
/datum/sprite_accessory/undershirt/shirt_grey
/datum/sprite_accessory/undershirt/shirt_white
/datum/sprite_accessory/undershirt/skull
/datum/sprite_accessory/undershirt/ss13
/datum/sprite_accessory/undershirt/stripe
/datum/sprite_accessory/undershirt/tank_black
/datum/sprite_accessory/undershirt/tank_grey
/datum/sprite_accessory/undershirt/tank_red
/datum/sprite_accessory/undershirt/tank_white
/datum/sprite_accessory/undershirt/tankfire
/datum/sprite_accessory/undershirt/tankstripe
/datum/sprite_accessory/undershirt/tiedye
/datum/sprite_accessory/undershirt/uk
/datum/sprite_accessory/undershirt/whitepolo
/datum/sprite_accessory/undershirt/whiteshortsleeve
/datum/sprite_accessory/undershirt/whitetop
/datum/sprite_accessory/undershirt/yellowshirt
/datum/sprite_accessory/underwear
/datum/sprite_accessory/underwear/female_babyblue
/datum/sprite_accessory/underwear/female_babydoll
/datum/sprite_accessory/underwear/female_black
/datum/sprite_accessory/underwear/female_blackalt
/datum/sprite_accessory/underwear/female_blue
/datum/sprite_accessory/underwear/female_green
/datum/sprite_accessory/underwear/female_kinky
/datum/sprite_accessory/underwear/female_pink
/datum/sprite_accessory/underwear/female_red
/datum/sprite_accessory/underwear/female_thong
/datum/sprite_accessory/underwear/female_white
/datum/sprite_accessory/underwear/female_whitealt
/datum/sprite_accessory/underwear/female_yellow
/datum/sprite_accessory/underwear/male_black
/datum/sprite_accessory/underwear/male_blackalt
/datum/sprite_accessory/underwear/male_blue
/datum/sprite_accessory/underwear/male_green
/datum/sprite_accessory/underwear/male_grey
/datum/sprite_accessory/underwear/male_greyalt
/datum/sprite_accessory/underwear/male_hearts
/datum/sprite_accessory/underwear/male_kinky
/datum/sprite_accessory/underwear/male_mankini
/datum/sprite_accessory/underwear/male_red
/datum/sprite_accessory/underwear/male_stripe
/datum/sprite_accessory/underwear/male_white
/datum/sprite_accessory/underwear/nude
/datum/stack_recipe
/datum/stack_recipe/New(title, result_type, req_amount = 1, res_amount = 1, max_res_amount = 1, time = 0, one_per_turf = 0, on_floor = 0)
/datum/station_state
/datum/station_state/count(var/count_territories)
/datum/station_state/score(var/datum/station_state/result)
/datum/subsystem
/datum/subsystem/AfterInitialize()
/datum/subsystem/Initialize(start_timeofday, zlevel)
/datum/subsystem/New()
/datum/subsystem/Recover()
/datum/subsystem/air
/datum/subsystem/air/AfterInitialize(zlevel)
/datum/subsystem/air/Initialize(timeofday, zlevel)
/datum/subsystem/air/New()
/datum/subsystem/air/add_to_active(var/turf/simulated/T, var/blockchanges = 1)
/datum/subsystem/air/fire()
/datum/subsystem/air/process_active_turfs()
/datum/subsystem/air/process_atmos_machinery()
/datum/subsystem/air/process_excited_groups()
/datum/subsystem/air/process_high_pressure_delta()
/datum/subsystem/air/process_hotspots()
/datum/subsystem/air/process_pipenets()
/datum/subsystem/air/process_super_conductivity()
/datum/subsystem/air/remove_from_active(var/turf/simulated/T)
/datum/subsystem/air/setup_allturfs(z_level)
/datum/subsystem/air/setup_atmos_machinery(z_level)
/datum/subsystem/air/stat_entry(msg)
/datum/subsystem/bots
/datum/subsystem/bots/New()
/datum/subsystem/bots/fire()
/datum/subsystem/bots/stat_entry(msg)
/datum/subsystem/diseases
/datum/subsystem/diseases/New()
/datum/subsystem/diseases/fire()
/datum/subsystem/diseases/stat_entry(msg)
/datum/subsystem/events
/datum/subsystem/events/Initialize(time, zlevel)
/datum/subsystem/events/New()
/datum/subsystem/events/checkEvent()
/datum/subsystem/events/fire()
/datum/subsystem/events/getHoliday()
/datum/subsystem/events/reschedule()
/datum/subsystem/events/resetFrequency()
/datum/subsystem/events/spawnEvent()
/datum/subsystem/events/toggleWizardmode()
/datum/subsystem/fire()
/datum/subsystem/garbage_collector
/datum/subsystem/garbage_collector/HardQueue(datum/A, harddel = 0)
/datum/subsystem/garbage_collector/New()
/datum/subsystem/garbage_collector/Queue(datum/A, harddel = 0)
/datum/subsystem/garbage_collector/fire()
/datum/subsystem/garbage_collector/stat_entry(msg)
/datum/subsystem/job
/datum/subsystem/job/AssignRole(mob/new_player/player, rank, latejoin=0)
/datum/subsystem/job/CheckHeadPositions(level)
/datum/subsystem/job/Debug(text)
/datum/subsystem/job/DivideOccupations()
/datum/subsystem/job/EquipRank(mob/living/H, rank, joined_late=0)
/datum/subsystem/job/FillAIPosition()
/datum/subsystem/job/FillHeadPosition()
/datum/subsystem/job/FindOccupationCandidates(datum/job/job, level, flag)
/datum/subsystem/job/GetJob(rank)
/datum/subsystem/job/GiveRandomJob(mob/new_player/player)
/datum/subsystem/job/HandleFeedbackGathering()
/datum/subsystem/job/Initialize(timeofday, zlevel)
/datum/subsystem/job/LoadJobs(jobsfile)
/datum/subsystem/job/New()
/datum/subsystem/job/PopcapReached()
/datum/subsystem/job/RejectPlayer(var/mob/new_player/player)
/datum/subsystem/job/ResetOccupations()
/datum/subsystem/job/SetupOccupations(faction = "Station")
/datum/subsystem/job/setup_officer_positions()
/datum/subsystem/lighting
/datum/subsystem/lighting/Initialize(timeofday, z_level)
/datum/subsystem/lighting/New()
/datum/subsystem/lighting/Recover()
/datum/subsystem/lighting/fire()
/datum/subsystem/lighting/stat_entry()
/datum/subsystem/machines
/datum/subsystem/machines/Initialize()
/datum/subsystem/machines/New()
/datum/subsystem/machines/fire()
/datum/subsystem/machines/makepowernets(zlevel)
/datum/subsystem/machines/stat_entry()
/datum/subsystem/mobs
/datum/subsystem/mobs/New()
/datum/subsystem/mobs/fire()
/datum/subsystem/mobs/stat_entry()
/datum/subsystem/nano
/datum/subsystem/nano/New()
/datum/subsystem/nano/close_user_uis(var/mob/user, src_object = null, ui_key = null)
/datum/subsystem/nano/fire()
/datum/subsystem/nano/get_open_ui(var/mob/user, src_object, ui_key)
/datum/subsystem/nano/send_resources(client)
/datum/subsystem/nano/stat_entry()
/datum/subsystem/nano/try_update_ui(var/mob/user, src_object, ui_key, var/datum/nanoui/ui, data)
/datum/subsystem/nano/ui_closed(var/datum/nanoui/ui)
/datum/subsystem/nano/ui_opened(var/datum/nanoui/ui)
/datum/subsystem/nano/update_uis(src_object)
/datum/subsystem/nano/update_user_uis(var/mob/user, src_object = null, ui_key = null)
/datum/subsystem/nano/user_logout(var/mob/user)
/datum/subsystem/nano/user_transferred(var/mob/oldMob, var/mob/newMob)
/datum/subsystem/npcpool
/datum/subsystem/npcpool/New()
/datum/subsystem/npcpool/fire()
/datum/subsystem/npcpool/insertBot(var/toInsert)
/datum/subsystem/npcpool/stat_entry()
/datum/subsystem/objects
/datum/subsystem/objects/Initialize(timeofday, zlevel)
/datum/subsystem/objects/New()
/datum/subsystem/objects/fire()
/datum/subsystem/objects/stat_entry()
/datum/subsystem/pai
/datum/subsystem/pai/New()
/datum/subsystem/pai/Topic(href, href_list[])
/datum/subsystem/pai/findPAI(var/obj/item/device/paicard/p, var/mob/user)
/datum/subsystem/pai/question(var/client/C)
/datum/subsystem/pai/recruitWindow(var/mob/M as mob)
/datum/subsystem/pai/requestRecruits()
/datum/subsystem/postpone(var/cycles = 1)
/datum/subsystem/radio
/datum/subsystem/radio/New()
/datum/subsystem/radio/add_object(obj/device as obj, var/new_frequency as num, var/filter = null as text|null)
/datum/subsystem/radio/remove_object(obj/device, old_frequency)
/datum/subsystem/radio/return_frequency(var/new_frequency as num)
/datum/subsystem/server_maint
/datum/subsystem/server_maint/fire()
/datum/subsystem/shuttle
/datum/subsystem/shuttle/Initialize(timeofday, zlevel)
/datum/subsystem/shuttle/New()
/datum/subsystem/shuttle/autoEvac()
/datum/subsystem/shuttle/cancelEvac(mob/user)
/datum/subsystem/shuttle/fire()
/datum/subsystem/shuttle/generateSupplyOrder(packId, _orderedby, _orderedbyRank, _comment)
/datum/subsystem/shuttle/getDock(id)
/datum/subsystem/shuttle/getShuttle(id)
/datum/subsystem/shuttle/moveShuttle(shuttleId, dockId, timed)
/datum/subsystem/shuttle/requestEvac(mob/user, call_reason)
/datum/subsystem/shuttle/toggleShuttle(shuttleId, dockHome, dockAway, timed)
/datum/subsystem/stat_entry(msg)
/datum/subsystem/sun
/datum/subsystem/sun/New()
/datum/subsystem/sun/fire()
/datum/subsystem/sun/stat_entry(msg)
/datum/subsystem/ticker
/datum/subsystem/ticker/Initialize(timeofday, zlevel)
/datum/subsystem/ticker/New()
/datum/subsystem/ticker/collect_minds()
/datum/subsystem/ticker/create_characters()
/datum/subsystem/ticker/declare_completion()
/datum/subsystem/ticker/equip_characters()
/datum/subsystem/ticker/fire()
/datum/subsystem/ticker/send_random_tip()
/datum/subsystem/ticker/setup()
/datum/subsystem/ticker/setupFactions()
/datum/subsystem/ticker/setupGenetics()
/datum/subsystem/ticker/station_explosion_cinematic(var/station_missed=0, var/override = null)
/datum/subsystem/vote
/datum/subsystem/vote/New()
/datum/subsystem/vote/Topic(href,href_list[],hsrc)
/datum/subsystem/vote/announce_result()
/datum/subsystem/vote/fire()
/datum/subsystem/vote/get_result()
/datum/subsystem/vote/initiate_vote(var/vote_type, var/initiator_key)
/datum/subsystem/vote/interface(var/client/C)
/datum/subsystem/vote/reset()
/datum/subsystem/vote/result()
/datum/subsystem/vote/submit_vote(var/vote)
/datum/supply_order
/datum/supply_order/createObject(atom/_loc, errors=0)
/datum/supply_order/generateRequisition(atom/_loc)
/datum/supply_packs
/datum/supply_packs/New()
/datum/supply_packs/emergency
/datum/supply_packs/emergency/atmostank
/datum/supply_packs/emergency/evac
/datum/supply_packs/emergency/firefighting
/datum/supply_packs/emergency/internals
/datum/supply_packs/emergency/specialops
/datum/supply_packs/emergency/syndicate
/datum/supply_packs/emergency/weedcontrol
/datum/supply_packs/engineering
/datum/supply_packs/engineering/engiequipment
/datum/supply_packs/engineering/engine
/datum/supply_packs/engineering/engine/PA
/datum/supply_packs/engineering/engine/collector
/datum/supply_packs/engineering/engine/field_gen
/datum/supply_packs/engineering/engine/sing_gen
/datum/supply_packs/engineering/engine/spacesuit
/datum/supply_packs/engineering/engine/supermatter_shard
/datum/supply_packs/engineering/fueltank
/datum/supply_packs/engineering/power
/datum/supply_packs/engineering/powergamermitts
/datum/supply_packs/engineering/solar
/datum/supply_packs/engineering/tools
/datum/supply_packs/materials
/datum/supply_packs/materials/cardboard50
/datum/supply_packs/materials/glass50
/datum/supply_packs/materials/metal50
/datum/supply_packs/materials/plasteel20
/datum/supply_packs/materials/plasteel50
/datum/supply_packs/materials/sandstone30
/datum/supply_packs/medical
/datum/supply_packs/medical/bloodpacks
/datum/supply_packs/medical/firstaid
/datum/supply_packs/medical/firstaidbruises
/datum/supply_packs/medical/firstaidburns
/datum/supply_packs/medical/firstaidoxygen
/datum/supply_packs/medical/firstaidtoxins
/datum/supply_packs/medical/iv_drip
/datum/supply_packs/medical/supplies
/datum/supply_packs/medical/virus
/datum/supply_packs/misc
/datum/supply_packs/misc/autodrobe
/datum/supply_packs/misc/conveyor
/datum/supply_packs/misc/costume
/datum/supply_packs/misc/foamforce
/datum/supply_packs/misc/foamforce/bonus
/datum/supply_packs/misc/formalwear
/datum/supply_packs/misc/hydroponics/hydrotank
/datum/supply_packs/misc/janitor
/datum/supply_packs/misc/janitor/janicart
/datum/supply_packs/misc/janitor/janitank
/datum/supply_packs/misc/janitor/lightbulbs
/datum/supply_packs/misc/lasertag
/datum/supply_packs/misc/mule
/datum/supply_packs/misc/noslipfloor
/datum/supply_packs/misc/paper
/datum/supply_packs/misc/posters
/datum/supply_packs/misc/randomised
/datum/supply_packs/misc/randomised/New()
/datum/supply_packs/misc/randomised/contraband
/datum/supply_packs/misc/religious_supplies
/datum/supply_packs/misc/toner
/datum/supply_packs/misc/watertank
/datum/supply_packs/misc/wizard
/datum/supply_packs/organic
/datum/supply_packs/organic/butterfly
/datum/supply_packs/organic/cat
/datum/supply_packs/organic/chicken
/datum/supply_packs/organic/corgi
/datum/supply_packs/organic/cow
/datum/supply_packs/organic/food
/datum/supply_packs/organic/fox
/datum/supply_packs/organic/goat
/datum/supply_packs/organic/hydroponics
/datum/supply_packs/organic/hydroponics/exoticseeds
/datum/supply_packs/organic/hydroponics/seeds
/datum/supply_packs/organic/monkey
/datum/supply_packs/organic/party
/datum/supply_packs/organic/pizza
/datum/supply_packs/organic/pug
/datum/supply_packs/organic/vending
/datum/supply_packs/organic/vending/cigarette
/datum/supply_packs/organic/vending/cola
/datum/supply_packs/organic/vending/snack
/datum/supply_packs/science
/datum/supply_packs/science/plasma
/datum/supply_packs/science/robotics
/datum/supply_packs/science/robotics/mecha_odysseus
/datum/supply_packs/science/robotics/mecha_ripley
/datum/supply_packs/science/shieldwalls
/datum/supply_packs/science/transfer_valves
/datum/supply_packs/security
/datum/supply_packs/security/armor
/datum/supply_packs/security/armory
/datum/supply_packs/security/armory/ballistic
/datum/supply_packs/security/armory/bulletarmor
/datum/supply_packs/security/armory/chemimp
/datum/supply_packs/security/armory/eweapons
/datum/supply_packs/security/armory/exileimp
/datum/supply_packs/security/armory/expenergy
/datum/supply_packs/security/armory/laserarmor
/datum/supply_packs/security/armory/loyalty
/datum/supply_packs/security/armory/riotarmor
/datum/supply_packs/security/armory/riothelmets
/datum/supply_packs/security/armory/riotshields
/datum/supply_packs/security/armory/trackingimp
/datum/supply_packs/security/baton
/datum/supply_packs/security/disabler
/datum/supply_packs/security/firingpins
/datum/supply_packs/security/helmets
/datum/supply_packs/security/laser
/datum/supply_packs/security/securitybarriers
/datum/supply_packs/security/securityclothes
/datum/supply_packs/security/supplies
/datum/supply_packs/security/taser
/datum/surgery
/datum/surgery/appendectomy
/datum/surgery/augmentation
/datum/surgery/brain_removal
/datum/surgery/brain_removal/alien
/datum/surgery/cavity_implant
/datum/surgery/complete(mob/living/carbon/human/target)
/datum/surgery/core_removal
/datum/surgery/embedded_removal
/datum/surgery/eye_cybernetic_implant/brain
/datum/surgery/eye_cybernetic_implant/chest
/datum/surgery/eye_cybernetic_implant/eyes
/datum/surgery/eye_surgery
/datum/surgery/gender_reassignment
/datum/surgery/get_surgery_step()
/datum/surgery/implant_removal
/datum/surgery/lipoplasty
/datum/surgery/next_step(mob/user, mob/living/carbon/target)
/datum/surgery/organ_extraction
/datum/surgery/plastic_surgery
/datum/surgery/xenomorph_removal
/datum/surgery_step
/datum/surgery_step/Handle_Multi_Loc(mob/user, mob/living/carbon/target)
/datum/surgery_step/add_limb
/datum/surgery_step/add_limb/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/add_limb/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/clamp_bleeders
/datum/surgery_step/clamp_bleeders/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/close
/datum/surgery_step/close/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/close/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/close/tool_check(mob/user, obj/item/tool)
/datum/surgery_step/cut_fat
/datum/surgery_step/cut_fat/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/cut_fat/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/cybernetic_implant/brain
/datum/surgery_step/cybernetic_implant/brain/success(mob/user, mob/living/carbon/target, target_zone, obj/item/cybernetic_implant/brain/implant, datum/surgery/surgery)
/datum/surgery_step/cybernetic_implant/chest
/datum/surgery_step/cybernetic_implant/chest/success(mob/user, mob/living/carbon/target, target_zone, obj/item/cybernetic_implant/chest/implant, datum/surgery/surgery)
/datum/surgery_step/cybernetic_implant/eyes
/datum/surgery_step/cybernetic_implant/eyes/success(mob/user, mob/living/carbon/target, target_zone, obj/item/cybernetic_implant/eyes/implant, datum/surgery/surgery)
/datum/surgery_step/cybernetic_implant/insert(mob/user, mob/living/carbon/target, obj/item/cybernetic_implant/implant,target_zone,full)
/datum/surgery_step/cybernetic_implant/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/cybernetic_implant/implant, datum/surgery/surgery)
/datum/surgery_step/extract_appendix
/datum/surgery_step/extract_appendix/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/extract_appendix/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/extract_brain
/datum/surgery_step/extract_brain/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/extract_brain/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/extract_core
/datum/surgery_step/extract_core/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/extract_core/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/extract_implant
/datum/surgery_step/extract_implant/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/extract_implant/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/extract_organ
/datum/surgery_step/extract_organ/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/extract_organ/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/failure(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/fix_eyes
/datum/surgery_step/fix_eyes/failure(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/fix_eyes/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/fix_eyes/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/gland_insert
/datum/surgery_step/gland_insert/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/gland_insert/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/handle_cavity
/datum/surgery_step/handle_cavity/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/handle_cavity/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/incise
/datum/surgery_step/incise/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/initiate(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/remove_fat
/datum/surgery_step/remove_fat/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/remove_fat/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/remove_object
/datum/surgery_step/remove_object/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/remove_object/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/replace
/datum/surgery_step/replace/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/reshape_face
/datum/surgery_step/reshape_face/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/reshape_face/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/reshape_genitals
/datum/surgery_step/reshape_genitals/failure(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/reshape_genitals/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/reshape_genitals/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/retract_skin
/datum/surgery_step/retract_skin/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/saw
/datum/surgery_step/saw/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/saw/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/tool_check(mob/user, obj/item/tool)
/datum/surgery_step/try_op(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/xenomorph_removal
/datum/surgery_step/xenomorph_removal/failure(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/xenomorph_removal/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/surgery_step/xenomorph_removal/remove_xeno(mob/user, mob/living/carbon/target)
/datum/surgery_step/xenomorph_removal/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
/datum/symptom
/datum/symptom/Activate(var/datum/disease/advance/A)
/datum/symptom/End(var/datum/disease/advance/A)
/datum/symptom/New()
/datum/symptom/Start(var/datum/disease/advance/A)
/datum/symptom/beard
/datum/symptom/beard/Activate(var/datum/disease/advance/A)
/datum/symptom/choking
/datum/symptom/choking/Activate(var/datum/disease/advance/A)
/datum/symptom/confusion
/datum/symptom/confusion/Activate(var/datum/disease/advance/A)
/datum/symptom/cough
/datum/symptom/cough/Activate(var/datum/disease/advance/A)
/datum/symptom/damage_converter
/datum/symptom/damage_converter/Activate(var/datum/disease/advance/A)
/datum/symptom/damage_converter/Convert(var/mob/living/M)
/datum/symptom/deafness
/datum/symptom/deafness/Activate(var/datum/disease/advance/A)
/datum/symptom/dizzy
/datum/symptom/dizzy/Activate(var/datum/disease/advance/A)
/datum/symptom/fever
/datum/symptom/fever/Activate(var/datum/disease/advance/A)
/datum/symptom/fire
/datum/symptom/fire/Activate(var/datum/disease/advance/A)
/datum/symptom/flesh_eating
/datum/symptom/flesh_eating/Activate(var/datum/disease/advance/A)
/datum/symptom/genetic_mutation
/datum/symptom/genetic_mutation/Activate(var/datum/disease/advance/A)
/datum/symptom/genetic_mutation/End(var/datum/disease/advance/A)
/datum/symptom/genetic_mutation/Start(var/datum/disease/advance/A)
/datum/symptom/genetic_mutation/powers
/datum/symptom/genetic_mutation/powers/Start(var/datum/disease/advance/A)
/datum/symptom/hallucigen
/datum/symptom/hallucigen/Activate(var/datum/disease/advance/A)
/datum/symptom/headache
/datum/symptom/headache/Activate(var/datum/disease/advance/A)
/datum/symptom/heal
/datum/symptom/heal/Activate(var/datum/disease/advance/A)
/datum/symptom/heal/Heal(var/mob/living/M, var/datum/disease/advance/A)
/datum/symptom/heal/longevity
/datum/symptom/heal/longevity/Heal(var/mob/living/M, var/datum/disease/advance/A)
/datum/symptom/heal/longevity/Start(var/datum/disease/advance/A)
/datum/symptom/heal/metabolism
/datum/symptom/heal/metabolism/End(var/datum/disease/advance/A)
/datum/symptom/heal/metabolism/Heal(var/mob/living/M, var/datum/disease/advance/A)
/datum/symptom/itching
/datum/symptom/itching/Activate(var/datum/disease/advance/A)
/datum/symptom/oxygen
/datum/symptom/oxygen/Activate(var/datum/disease/advance/A)
/datum/symptom/revitiligo
/datum/symptom/revitiligo/Activate(var/datum/disease/advance/A)
/datum/symptom/shedding
/datum/symptom/shedding/Activate(var/datum/disease/advance/A)
/datum/symptom/shivering
/datum/symptom/shivering/Activate(var/datum/disease/advance/A)
/datum/symptom/sneeze
/datum/symptom/sneeze/Activate(var/datum/disease/advance/A)
/datum/symptom/stimulant
/datum/symptom/stimulant/Activate(var/datum/disease/advance/A)
/datum/symptom/visionaid
/datum/symptom/visionaid/Activate(var/datum/disease/advance/A)
/datum/symptom/visionloss
/datum/symptom/visionloss/Activate(var/datum/disease/advance/A)
/datum/symptom/vitiligo
/datum/symptom/vitiligo/Activate(var/datum/disease/advance/A)
/datum/symptom/voice_change
/datum/symptom/voice_change/Activate(var/datum/disease/advance/A)
/datum/symptom/voice_change/End(var/datum/disease/advance/A)
/datum/symptom/vomit
/datum/symptom/vomit/Activate(var/datum/disease/advance/A)
/datum/symptom/vomit/Vomit(var/mob/living/M)
/datum/symptom/vomit/blood
/datum/symptom/vomit/blood/Vomit(var/mob/living/M)
/datum/symptom/weight_even
/datum/symptom/weight_even/Activate(var/datum/disease/advance/A)
/datum/symptom/weight_gain
/datum/symptom/weight_gain/Activate(var/datum/disease/advance/A)
/datum/symptom/weight_loss
/datum/symptom/weight_loss/Activate(var/datum/disease/advance/A)
/datum/symptom/youth
/datum/symptom/youth/Activate(var/datum/disease/advance/A)
/datum/table_recipe
/datum/table_recipe/IED
/datum/table_recipe/aesirsalad
/datum/table_recipe/amanitajelly
/datum/table_recipe/amanitapie
/datum/table_recipe/appendixburger
/datum/table_recipe/applecake
/datum/table_recipe/applepie
/datum/table_recipe/baguette
/datum/table_recipe/bananacreampie
/datum/table_recipe/banananutbread
/datum/table_recipe/beans
/datum/table_recipe/bearger
/datum/table_recipe/bearsteak
/datum/table_recipe/bearypie
/datum/table_recipe/beefnoodle
/datum/table_recipe/beetsoup
/datum/table_recipe/berryclafoutis
/datum/table_recipe/berrymuffin
/datum/table_recipe/bigbiteburger
/datum/table_recipe/birthdaycake
/datum/table_recipe/bloodsoup
/datum/table_recipe/blueburger
/datum/table_recipe/bluecherrycupcake
/datum/table_recipe/blumpkinpie
/datum/table_recipe/booberrymuffin
/datum/table_recipe/brainburger
/datum/table_recipe/braincake
/datum/table_recipe/briochecake
/datum/table_recipe/burger
/datum/table_recipe/burrito
/datum/table_recipe/candiedapple
/datum/table_recipe/carneburrito
/datum/table_recipe/carrotcake
/datum/table_recipe/chaosdonut
/datum/table_recipe/chawanmushi
/datum/table_recipe/cheesecake
/datum/table_recipe/cheesyburrito
/datum/table_recipe/cheesyfries
/datum/table_recipe/cheesynachos
/datum/table_recipe/cherrycupcake
/datum/table_recipe/cherryjellydonut
/datum/table_recipe/cherrypie
/datum/table_recipe/cherrysandwich
/datum/table_recipe/chococoin
/datum/table_recipe/chococornet
/datum/table_recipe/chocolatebunny
/datum/table_recipe/chocolatecake
/datum/table_recipe/chocolateegg
/datum/table_recipe/chocoorange
/datum/table_recipe/chowmein
/datum/table_recipe/citrusdelight
/datum/table_recipe/cleanbot
/datum/table_recipe/clownburger
/datum/table_recipe/clownstears
/datum/table_recipe/coldchili
/datum/table_recipe/copypasta
/datum/table_recipe/cornedbeef
/datum/table_recipe/cracker
/datum/table_recipe/creamcheesebread
/datum/table_recipe/cubancarp
/datum/table_recipe/cubannachos
/datum/table_recipe/dankpizza
/datum/table_recipe/donkpocket
/datum/table_recipe/donpocketpizza
/datum/table_recipe/donut
/datum/table_recipe/dragonsbreath
/datum/table_recipe/dulcedebatata
/datum/table_recipe/ed209
/datum/table_recipe/eggbowl
/datum/table_recipe/eggplantparm
/datum/table_recipe/eggsbenedict
/datum/table_recipe/enchiladas
/datum/table_recipe/fishandchips
/datum/table_recipe/fishburger
/datum/table_recipe/fishfingers
/datum/table_recipe/fivealarmburger
/datum/table_recipe/flamethrower
/datum/table_recipe/floorbot
/datum/table_recipe/fortunecookie
/datum/table_recipe/frag12
/datum/table_recipe/friedegg
/datum/table_recipe/frostypie
/datum/table_recipe/fruitsalad
/datum/table_recipe/fuegoburrito
/datum/table_recipe/ghostburger
/datum/table_recipe/goldenappletart
/datum/table_recipe/greenburger
/datum/table_recipe/grilledcheesesandwich
/datum/table_recipe/herbsalad
/datum/table_recipe/honkdae
/datum/table_recipe/hotchili
/datum/table_recipe/hotcrossbun
/datum/table_recipe/hotdog
/datum/table_recipe/humanburger
/datum/table_recipe/humankebab
/datum/table_recipe/icecreamsandwich
/datum/table_recipe/improvised_pneumatic_cannon
/datum/table_recipe/improvisedslug
/datum/table_recipe/improvisedslugoverload
/datum/table_recipe/ionslug
/datum/table_recipe/ishotgun
/datum/table_recipe/jelliedyoast
/datum/table_recipe/jellyburger
/datum/table_recipe/jellydonut
/datum/table_recipe/junglesalad
/datum/table_recipe/kebab
/datum/table_recipe/laserslug
/datum/table_recipe/lemoncake
/datum/table_recipe/limecake
/datum/table_recipe/loadedbakedpotato
/datum/table_recipe/mammi
/datum/table_recipe/margheritapizza
/datum/table_recipe/meatballsoup
/datum/table_recipe/meatbread
/datum/table_recipe/meatbun
/datum/table_recipe/meatpie
/datum/table_recipe/meatpizza
/datum/table_recipe/medbot
/datum/table_recipe/melonfruitbowl
/datum/table_recipe/melonkeg
/datum/table_recipe/meteorshot
/datum/table_recipe/milosoup
/datum/table_recipe/mimanabread
/datum/table_recipe/mimeburger
/datum/table_recipe/monkeysdelight
/datum/table_recipe/muffin
/datum/table_recipe/mushroompizza
/datum/table_recipe/mushroomsoup
/datum/table_recipe/mysterysoup
/datum/table_recipe/nachos
/datum/table_recipe/nettlesoup
/datum/table_recipe/notasandwich
/datum/table_recipe/oatmeal
/datum/table_recipe/oatmealcookie
/datum/table_recipe/omelette
/datum/table_recipe/orangeburger
/datum/table_recipe/orangecake
/datum/table_recipe/picket_sign
/datum/table_recipe/plumphelmetbiscuit
/datum/table_recipe/plumppie
/datum/table_recipe/poppypretzel
/datum/table_recipe/pulseslug
/datum/table_recipe/pumpkinpie
/datum/table_recipe/pumpkinspicecake
/datum/table_recipe/purpleburger
/datum/table_recipe/raisincookie
/datum/table_recipe/ratburger
/datum/table_recipe/redbeetsoup
/datum/table_recipe/redburger
/datum/table_recipe/ricepork
/datum/table_recipe/ricepudding
/datum/table_recipe/rofflewaffles
/datum/table_recipe/sandwich
/datum/table_recipe/sashimi
/datum/table_recipe/sassysagepizza
/datum/table_recipe/sausage
/datum/table_recipe/scotchegg
/datum/table_recipe/secbot
/datum/table_recipe/slimeburger
/datum/table_recipe/slimecake
/datum/table_recipe/slimejellydonut
/datum/table_recipe/slimesandwich
/datum/table_recipe/slimesoup
/datum/table_recipe/slimetoast
/datum/table_recipe/soylentgreen
/datum/table_recipe/soylenviridians
/datum/table_recipe/spacefreezy
/datum/table_recipe/spacylibertyduff
/datum/table_recipe/spaghettimeatball
/datum/table_recipe/spellburger
/datum/table_recipe/spellburger2
/datum/table_recipe/spesslaw
/datum/table_recipe/spidereggsham
/datum/table_recipe/spidermeatbread
/datum/table_recipe/stew
/datum/table_recipe/stewedsoymeat
/datum/table_recipe/stunprod
/datum/table_recipe/sugarcookie
/datum/table_recipe/sundae
/datum/table_recipe/superbiteburger
/datum/table_recipe/sweetpotatosoup
/datum/table_recipe/tofubread
/datum/table_recipe/tofuburger
/datum/table_recipe/tofukebab
/datum/table_recipe/tofupie
/datum/table_recipe/tomatopasta
/datum/table_recipe/tomatosoup
/datum/table_recipe/twobread
/datum/table_recipe/validsalad
/datum/table_recipe/vegetablepizza
/datum/table_recipe/vegetablesoup
/datum/table_recipe/waffles
/datum/table_recipe/wingfangchu
/datum/table_recipe/wishsoup
/datum/table_recipe/wrap
/datum/table_recipe/xenoburger
/datum/table_recipe/xenomeatbread
/datum/table_recipe/xenopie
/datum/table_recipe/yellowburger
/datum/tech
/datum/tech/biotech
/datum/tech/bluespace
/datum/tech/combat
/datum/tech/engineering
/datum/tech/magnets
/datum/tech/materials
/datum/tech/plasmatech
/datum/tech/powerstorage
/datum/tech/programming
/datum/tech/syndicate
/datum/teleport
/datum/teleport/doTeleport()
/datum/teleport/initTeleport(ateleatom,adestination,aprecision,afteleport,aeffectin,aeffectout,asoundin,asoundout)
/datum/teleport/instant
/datum/teleport/instant/science
/datum/teleport/instant/science/setEffects(datum/effect/effect/system/aeffectin,datum/effect/effect/system/aeffectout)
/datum/teleport/instant/science/setPrecision(aprecision)
/datum/teleport/instant/start(ateleatom, adestination, aprecision=0, afteleport=1, aeffectin=null, aeffectout=null, asoundin=null, asoundout=null)
/datum/teleport/playSpecials(atom/location,datum/effect/effect/system/effect,sound)
/datum/teleport/setDestination(atom/adestination)
/datum/teleport/setEffects(datum/effect/effect/system/aeffectin=null,datum/effect/effect/system/aeffectout=null)
/datum/teleport/setForceTeleport(afteleport)
/datum/teleport/setPrecision(aprecision)
/datum/teleport/setSounds(asoundin=null,asoundout=null)
/datum/teleport/setTeleatom(atom/movable/ateleatom)
/datum/teleport/start(ateleatom, adestination, aprecision=0, afteleport=1, aeffectin=null, aeffectout=null, asoundin=null, asoundout=null)
/datum/teleport/teleport()
/datum/teleport/teleportChecks()
/datum/tlv
/datum/tlv/CopyFrom(datum/tlv/other)
/datum/tlv/New(_min2 as num, _min1 as num, _max1 as num, _max2 as num)
/datum/tlv/get_danger_level(curval as num)
/datum/topic_input
/datum/topic_input/New(thref,list/thref_list)
/datum/topic_input/get(i)
/datum/topic_input/getAndLocate(i)
/datum/topic_input/getArea(i)
/datum/topic_input/getAtom(i)
/datum/topic_input/getList(i)
/datum/topic_input/getMob(i)
/datum/topic_input/getNum(i)
/datum/topic_input/getObj(i)
/datum/topic_input/getPath(i)
/datum/topic_input/getStr(i)
/datum/topic_input/getTurf(i)
/datum/topic_input/getType(i,type)
/datum/trackable
/datum/uplink_item
/datum/uplink_item/ammo
/datum/uplink_item/ammo/a40mm
/datum/uplink_item/ammo/ammobag
/datum/uplink_item/ammo/bullbuck
/datum/uplink_item/ammo/bulldragon
/datum/uplink_item/ammo/bullslug
/datum/uplink_item/ammo/bullstun
/datum/uplink_item/ammo/bulltoxin
/datum/uplink_item/ammo/carbine
/datum/uplink_item/ammo/machinegun
/datum/uplink_item/ammo/pistol
/datum/uplink_item/ammo/revolver
/datum/uplink_item/ammo/smg
/datum/uplink_item/ammo/toydarts
/datum/uplink_item/badass
/datum/uplink_item/badass/balloon
/datum/uplink_item/badass/bundle
/datum/uplink_item/badass/random
/datum/uplink_item/badass/random/spawn_item(var/turf/loc, var/obj/item/device/uplink/U)
/datum/uplink_item/badass/surplus_crate
/datum/uplink_item/badass/surplus_crate/spawn_item(turf/loc, obj/item/device/uplink/U)
/datum/uplink_item/badass/syndiecards
/datum/uplink_item/badass/syndiecash
/datum/uplink_item/badass/syndiecigs
/datum/uplink_item/buy(var/obj/item/device/uplink/U, var/mob/user)
/datum/uplink_item/dangerous
/datum/uplink_item/dangerous/bioterror
/datum/uplink_item/dangerous/carbine
/datum/uplink_item/dangerous/carbine/unrestricted
/datum/uplink_item/dangerous/crossbow
/datum/uplink_item/dangerous/emp
/datum/uplink_item/dangerous/flamethrower
/datum/uplink_item/dangerous/foammachinegun
/datum/uplink_item/dangerous/foamsmg
/datum/uplink_item/dangerous/gygax
/datum/uplink_item/dangerous/machinegun
/datum/uplink_item/dangerous/mauler
/datum/uplink_item/dangerous/pistol
/datum/uplink_item/dangerous/revolver
/datum/uplink_item/dangerous/smg
/datum/uplink_item/dangerous/smg/unrestricted
/datum/uplink_item/dangerous/sword
/datum/uplink_item/dangerous/syndicate_minibomb
/datum/uplink_item/dangerous/syndieborg
/datum/uplink_item/dangerous/syndieborg/spawn_item()
/datum/uplink_item/dangerous/viscerators
/datum/uplink_item/device_tools
/datum/uplink_item/device_tools/ai_detector
/datum/uplink_item/device_tools/binary
/datum/uplink_item/device_tools/c4
/datum/uplink_item/device_tools/emag
/datum/uplink_item/device_tools/encryptionkey
/datum/uplink_item/device_tools/hacked_module
/datum/uplink_item/device_tools/hardsuit
/datum/uplink_item/device_tools/magboots
/datum/uplink_item/device_tools/medkit
/datum/uplink_item/device_tools/powersink
/datum/uplink_item/device_tools/rad_laser
/datum/uplink_item/device_tools/shield
/datum/uplink_item/device_tools/singularity_beacon
/datum/uplink_item/device_tools/space_suit
/datum/uplink_item/device_tools/syndicate_bomb
/datum/uplink_item/device_tools/syndicate_detonator
/datum/uplink_item/device_tools/teleporter
/datum/uplink_item/device_tools/thermal
/datum/uplink_item/device_tools/toolbox
/datum/uplink_item/implants
/datum/uplink_item/implants/adrenal
/datum/uplink_item/implants/explosive
/datum/uplink_item/implants/freedom
/datum/uplink_item/implants/uplink
/datum/uplink_item/spawn_item(var/turf/loc, var/obj/item/device/uplink/U)
/datum/uplink_item/stealthy_tools
/datum/uplink_item/stealthy_tools/agent_card
/datum/uplink_item/stealthy_tools/camera_bug
/datum/uplink_item/stealthy_tools/chameleon_jumpsuit
/datum/uplink_item/stealthy_tools/chameleon_proj
/datum/uplink_item/stealthy_tools/chameleon_stamp
/datum/uplink_item/stealthy_tools/smugglersatchel
/datum/uplink_item/stealthy_tools/stimpack
/datum/uplink_item/stealthy_tools/syndigolashes
/datum/uplink_item/stealthy_tools/voice_changer
/datum/uplink_item/stealthy_weapons
/datum/uplink_item/stealthy_weapons/dehy_carp
/datum/uplink_item/stealthy_weapons/detomatix
/datum/uplink_item/stealthy_weapons/door_charge
/datum/uplink_item/stealthy_weapons/foampistol
/datum/uplink_item/stealthy_weapons/pizza_bomb
/datum/uplink_item/stealthy_weapons/sleepy_pen
/datum/uplink_item/stealthy_weapons/soap
/datum/uplink_item/stealthy_weapons/suppressor
/datum/uplink_item/stealthy_weapons/throwingstars
/datum/uplink_item/stealthy_weapons/traitor_chem_bottle
/datum/var/gc_destroyed
/datum/wires
/datum/wires/Attach(var/colour, var/obj/item/device/assembly/S)
/datum/wires/CanUse(var/mob/living/L)
/datum/wires/CutAll()
/datum/wires/CutWireColour(var/colour)
/datum/wires/CutWireIndex(var/index)
/datum/wires/Detach(var/colour)
/datum/wires/GenerateWires()
/datum/wires/GetAttached(var/colour)
/datum/wires/GetIndex(var/colour)
/datum/wires/GetInteractWindow()
/datum/wires/Interact(var/mob/living/user)
/datum/wires/IsAllCut()
/datum/wires/IsAttached(var/colour)
/datum/wires/IsColourCut(var/colour)
/datum/wires/IsIndexCut(var/index)
/datum/wires/New(var/atom/holder)
/datum/wires/Pulse(var/obj/item/device/assembly/S)
/datum/wires/PulseColour(var/colour)
/datum/wires/PulseIndex(var/index)
/datum/wires/RandomCut()
/datum/wires/Shuffle()
/datum/wires/Topic(href, href_list)
/datum/wires/UpdateCut(var/index, var/mended)
/datum/wires/UpdatePulsed(var/index)
/datum/wires/airlock
/datum/wires/airlock/CanUse(var/mob/living/L)
/datum/wires/airlock/GetInteractWindow()
/datum/wires/airlock/UpdateCut(var/index, var/mended)
/datum/wires/airlock/UpdatePulsed(var/index)
/datum/wires/airlock/secure
/datum/wires/alarm
/datum/wires/alarm/CanUse(var/mob/living/L)
/datum/wires/alarm/GetInteractWindow()
/datum/wires/alarm/UpdateCut(var/index, var/mended)
/datum/wires/alarm/UpdatePulsed(var/index)
/datum/wires/apc
/datum/wires/apc/CanUse(var/mob/living/L)
/datum/wires/apc/GetInteractWindow()
/datum/wires/apc/UpdateCut(var/index, var/mended)
/datum/wires/apc/UpdatePulsed(var/index)
/datum/wires/autolathe
/datum/wires/autolathe/CanUse()
/datum/wires/autolathe/GetInteractWindow()
/datum/wires/autolathe/Interact(var/mob/living/user)
/datum/wires/autolathe/UpdateCut(index, mended)
/datum/wires/autolathe/UpdatePulsed(index)
/datum/wires/explosive
/datum/wires/explosive/UpdateCut(var/index, var/mended)
/datum/wires/explosive/UpdatePulsed(var/index)
/datum/wires/explosive/c4
/datum/wires/explosive/c4/CanUse(var/mob/living/L)
/datum/wires/explosive/c4/explode()
/datum/wires/explosive/explode()
/datum/wires/explosive/gibtonite
/datum/wires/explosive/gibtonite/CanUse(var/mob/living/L)
/datum/wires/explosive/gibtonite/UpdateCut(var/index, var/mended)
/datum/wires/explosive/gibtonite/explode()
/datum/wires/mulebot
/datum/wires/mulebot/BeaconRX()
/datum/wires/mulebot/CanUse(var/mob/living/L)
/datum/wires/mulebot/HasPower()
/datum/wires/mulebot/Interact(var/mob/living/user)
/datum/wires/mulebot/LoadCheck()
/datum/wires/mulebot/MobAvoid()
/datum/wires/mulebot/Motor1()
/datum/wires/mulebot/Motor2()
/datum/wires/mulebot/RemoteRX()
/datum/wires/mulebot/RemoteTX()
/datum/wires/mulebot/UpdatePulsed(var/index)
/datum/wires/particle_acc/control_box
/datum/wires/particle_acc/control_box/CanUse(var/mob/living/L)
/datum/wires/particle_acc/control_box/UpdateCut(var/index, var/mended)
/datum/wires/particle_acc/control_box/UpdatePulsed(var/index)
/datum/wires/radio
/datum/wires/radio/CanUse(var/mob/living/L)
/datum/wires/radio/Interact(var/mob/living/user)
/datum/wires/radio/UpdatePulsed(var/index)
/datum/wires/robot
/datum/wires/robot/CanUse(var/mob/living/L)
/datum/wires/robot/GetInteractWindow()
/datum/wires/robot/IsCameraCut()
/datum/wires/robot/LockedCut()
/datum/wires/robot/UpdateCut(var/index, var/mended)
/datum/wires/robot/UpdatePulsed(var/index)
/datum/wires/syndicatebomb
/datum/wires/syndicatebomb/CanUse(var/mob/living/L)
/datum/wires/syndicatebomb/UpdateCut(var/index, var/mended)
/datum/wires/syndicatebomb/UpdatePulsed(var/index)
/datum/wires/taperecorder
/datum/wires/taperecorder/CanUse(var/mob/living/L)
/datum/wires/taperecorder/UpdatePulsed(var/index)
/datum/wires/taperecorder/get_play()
/datum/wires/taperecorder/get_record()
/datum/wires/taperecorder/play()
/datum/wires/taperecorder/record()
/datum/wires/vending
/datum/wires/vending/CanUse(var/mob/living/L)
/datum/wires/vending/GetInteractWindow()
/datum/wires/vending/Interact(var/mob/living/user)
/datum/wires/vending/UpdateCut(var/index, var/mended)
/datum/wires/vending/UpdatePulsed(var/index)
/dd_centertext(message, length)
/dd_hasprefix(text, prefix)
/dd_hasprefix_case(text, prefix)
/dd_hassuffix(text, suffix)
/dd_hassuffix_case(text, suffix)
/dd_limittext(message, length)
/dd_range(var/low, var/high, var/num)
/deconstruct_block(value, values, blocksize=3)
/derpspeech(message, stuttering)
/difflist(var/list/first, var/list/second, var/skiprep=0)
/dir2angle(var/D)
/dir2text(direction)
/dir2text_short(direction)
/display_roundstart_logout_report()
/dmm_suite
/dmm_suite/add_underlying_turf(var/turf/placed,var/turf/underturf, var/list/turfs_underlays)
/dmm_suite/check_attributes(var/atom/A)
/dmm_suite/find_next_delimiter_position(var/text as text,var/initial_position as num, var/delimiter=",",var/opening_escape=quote,var/closing_escape=quote)
/dmm_suite/get_model_key(var/which as num, var/key_length as num)
/dmm_suite/instance_atom(var/path,var/list/attributes, var/x, var/y, var/z)
/dmm_suite/load_map(var/dmm_file as file, var/z_offset as num)
/dmm_suite/make_template(var/turf/model as turf, var/flags as num)
/dmm_suite/parse_grid(var/model as text,var/xcrd as num,var/ycrd as num,var/zcrd as num)
/dmm_suite/preloader
/dmm_suite/preloader/New(var/list/the_attributes, var/path)
/dmm_suite/preloader/load(atom/what)
/dmm_suite/save_map(var/turf/t1 as turf, var/turf/t2 as turf, var/map_name as text, var/flags as num)
/dmm_suite/text2list(var/text as text,var/delimiter=",")
/dmm_suite/trim_text(var/what as text,var/trim_quotes=0)
/dmm_suite/var
/dmm_suite/verb/load_map(var/dmm_file as file, var/z_offset as num)
/dmm_suite/verb/save_map(var/turf/t1 as turf, var/turf/t2 as turf, var/map_name as text, var/flags as num)
/dmm_suite/verb/write_map(var/turf/t1 as turf, var/turf/t2 as turf, var/flags as num)
/dmm_suite/write_map(var/turf/t1 as turf, var/turf/t2 as turf, var/flags as num)
/do_after(mob/user, delay, numticks = 5, needhand = 1, atom/target = null)
/do_mob(var/mob/user , var/mob/target, var/time = 30, numticks = 5)
/do_teleport(ateleatom, adestination, aprecision=0, afteleport=1, aeffectin=null, aeffectout=null, asoundin=null, asoundout=null)
/domutcheck(mob/living/carbon/M)
/electrocute_mob(mob/living/carbon/M as mob, var/power_source, var/obj/source, var/siemens_coeff = 1.0)
/emoji_parse(text)
/empulse(turf/epicenter, heavy_range, light_range, log=0)
/english_list(var/list/input, nothing_text = "nothing", and_text = " and ", comma_text = ", ", final_comma_text = "" )
/equip_centcomofficial(var/mob/living/carbon/human/M)
/equip_deathsquad(var/mob/living/carbon/human/M, var/officer)
/equip_emergencyresponsesquad(var/mob/living/carbon/human/M, var/ertrole, var/alert)
/error(msg)
/establish_db_connection()
/explosion(turf/epicenter, devastation_range, heavy_impact_range, light_impact_range, flash_range, adminlog = 1, ignorecap = 0, flame_range = 0 ,silent = 0)
/feedback_add_details(var/variable,var/details)
/feedback_dec(var/variable,var/value)
/feedback_inc(var/variable,var/value)
/feedback_set(var/variable,var/value)
/feedback_set_details(var/variable,var/details)
/file2list(filename, seperator="\n")
/filter_fancy_list(list/L, filter as text)
/find_dead_player(var/find_key)
/find_record(field, value, list/L)
/findchar(haystack, needles, start=1, end=0)
/findname(msg)
/flick_overlay(image/I, list/show_to, duration)
/forbidden_atoms_check(atom/A)
/format_frequency(var/f)
/format_table_name(var/table as text)
/format_text(text)
/gameTimestamp(var/format = "hh:mm:ss")
/gang_name(var/gang)
/gaussian(mean, stddev)
/generate_code_phrase()
/generate_ion_law(ionMessage)
/get(atom/loc, type)
/getBlankIcon(icon/A, safety=1)
/getElementByVar(list/L, varname, value)
/getFlatIcon(image/A, defdir=A.dir, deficon=A.icon, defstate=A.icon_state, defblend=A.blend_mode)
/getHologramIcon(icon/A, safety=1)
/getIconMask(atom/A)
/getLetterImage(atom/A, letter= "", uppercase = 0)
/getPixelDistance(var/atom/A, var/atom/B, var/centered = 1)
/getStaticIcon(icon/A, safety=1)
/get_access_desc(A)
/get_active_player_count()
/get_all_accesses()
/get_all_centcom_access()
/get_all_centcom_jobs()
/get_all_job_icons()
/get_all_jobs()
/get_all_syndicate_access()
/get_area(O)
/get_area_all_atoms(var/areatype)
/get_area_master(O)
/get_area_name(N)
/get_area_turfs(var/areatype)
/get_areas(var/areatype)
/get_atom_on_turf(var/atom/movable/M)
/get_both_hands(mob/living/carbon/M)
/get_candidates(be_special_flag=0, afk_bracket=3000)
/get_cardinal_dir(atom/A, atom/B)
/get_cardinal_step_away(atom/start, atom/finish)
/get_centcom_access(job)
/get_centcom_access_desc(A)
/get_dist_euclidian(atom/Loc1 as turf|mob|obj,atom/Loc2 as turf|mob|obj)
/get_edge_target_turf(var/atom/A, var/direction)
/get_ert_access(var/class)
/get_fancy_list_of_types()
/get_hear(var/range, var/atom/source)
/get_hearers_in_view(var/R, var/atom/source)
/get_key_by_index(var/list/L, var/index)
/get_location_accessible(mob/M, location)
/get_location_modifier(mob/M)
/get_mob_by_ckey(var/key)
/get_mob_by_key(var/key)
/get_mobs_in_radio_ranges(var/list/obj/item/device/radio/radios)
/get_offset_target_turf(var/atom/A, var/dx, var/dy)
/get_path_to(start, end, atom, dist, maxnodes, maxnodedepth = 30, mintargetdist, minnodedist, id=null, turf/exclude=null)
/get_radio_name(freq)
/get_radio_span(freq)
/get_rand_frequency()
/get_ranged_target_turf(var/atom/A, var/direction, var/range)
/get_region_accesses(var/code)
/get_region_accesses_name(var/code)
/get_security_level()
/get_sfx(soundin)
/get_step_towards2(var/atom/ref , var/atom/trg)
/get_supply_group_name(var/cat)
/get_teleport_loc(turf/location,mob/target,distance = 1, density = 0, errorx = 0, errory = 0, eoffsetx = 0, eoffsety = 0)
/get_timestamp()
/get_turf(atom/A)
/get_turf_pixel(atom/movable/AM)
/get_uplink_items()
/get_viewable_pdas()
/getb(col)
/getblock(input, blocknumber, blocksize=3)
/getbrokeninhands()
/getg(col)
/getleftblocks(input,blocknumber,blocksize)
/getline(atom/M,atom/N)
/getmobs()
/getr(col)
/getrightblocks(input,blocknumber,blocksize)
/gibs(atom/location, var/list/viruses, var/datum/dna/MobDNA)
/give_codewords(mob/living/traitor_mob)
/givetestverbs(mob/M as mob in mob_list)
/gotwallitem(loc, dir)
/guest_jobbans(var/job)
/hardset_dna(mob/living/carbon/owner, ui, se, real_name, blood_type, datum/species/mrace, features)
/has_gravity(atom/AT, turf/T)
/hasvar(var/datum/A, var/varname)
/healthscan(var/mob/living/user, var/mob/living/M, var/mode = 1)
/heat2colour(temp)
/heat2colour_b(temp)
/heat2colour_g(temp)
/heat2colour_r(temp)
/hex2num(hex)
/hgibs(atom/location, var/list/viruses, var/datum/dna/MobDNA)
/hsl2rgb(hue, saturation, lightness)
/hsv(hue, sat, val, alpha)
/hue2rgb(a, b, hue)
/icon
/icon/AddAlphaMask(mask)
/icon/BecomeAlphaMask()
/icon/Blend(icon,f,x=1,y=1)
/icon/ChangeOpacity(opacity = 1.0)
/icon/ColorTone(tone)
/icon/Crop(x1,y1,x2,y2)
/icon/DrawBox(c,x1,y1,x2,y2)
/icon/Flip(dir)
/icon/GetPixel(x,y,icon_state,dir,frame,moving)
/icon/GrayScale()
/icon/Height()
/icon/Icon()
/icon/IconStates(mode=0)
/icon/Insert(new_icon,icon_state,dir,frame,moving,delay)
/icon/MapColors(a,b,c,d,e,f,g,h,i,j=0,k=0,l=0)
/icon/MaxColors(icon)
/icon/MinColors(icon)
/icon/New(icon,icon_state,dir,frame,moving)
/icon/Opaque(background = "#000000")
/icon/RscFile()
/icon/Scale(x,y)
/icon/SetIntensity(r,g=-1,b=-1)
/icon/Shift(dir,offset,wrap)
/icon/SwapColor(o,n)
/icon/Turn(angle,antialias)
/icon/UseAlphaMask(mask)
/icon/Width()
/icon/proc/Height()
/inLineOfSight(X1,Y1,X2,Y2,Z=1,PX1=16.5,PY1=16.5,PX2=16.5,PY2=16.5)
/in_range(source, user)
/init_paths(prototype, list/L)
/init_sprite_accessory_subtypes(prototype, list/L, list/male, list/female)
/init_subtypes(prototype, list/L)
/intent_numeric(argument)
/invertHTML(HTMLstring)
/investigate_reset()
/investigate_subject2file(var/subject)
/ionnum()
/isAI(A)
/isDay(var/month, var/day)
/isInSight(var/atom/A, var/atom/B)
/isLeap(y)
/is_blind(A)
/is_blocked_turf(var/turf/T)
/is_convertable_to_cult(datum/mind/mind)
/is_hot(obj/item/W as obj)
/is_pointed(obj/item/W as obj)
/is_shadow(var/mob/living/M)
/is_shadow_or_thrall(var/mob/living/M)
/is_sharp(obj/item/W as obj)
/is_special_character(mob/M)
/is_thrall(var/mob/living/M)
/is_type_in_list(var/atom/A, var/list/L)
/isalien(A)
/isalienadult(A)
/isanimal(A)
/isassembly(O)
/isbear(A)
/isbrain(A)
/iscarbon(A)
/iscarp(A)
/iscat(A)
/isclown(A)
/iscorgi(A)
/iscrab(A)
/iscultist(mob/living/M as mob)
/isdrone(A)
/isemptylist(list/L)
/ishuman(A)
/isigniter(O)
/isinfared(O)
/islarva(A)
/islinked(var/mob/living/silicon/robot/bot, var/mob/living/silicon/ai/ai)
/islist(list/L)
/isliving(A)
/isloyal(A)
/ismonkey(A)
/ismouse(A)
/isnewplayer(A)
/isobject(x)
/isobserver(A)
/isorgan(A)
/isovermind(A)
/ispAI(A)
/isprox(O)
/isrobot(A)
/issignaler(O)
/issilicon(A)
/isslime(A)
/istimer(O)
/istool(O)
/iswizard(mob/living/M as mob)
/item_heal_robotic(var/mob/living/carbon/human/H, var/mob/user, var/brute, var/burn)
/jobban_client_fullban(ckey, rank)
/jobban_fullban(mob/M, rank, reason)
/jobban_isbanned(mob/M, rank)
/jobban_loadbanfile()
/jobban_remove(X)
/jobban_savebanfile()
/jobban_unban(mob/M, rank)
/jobban_updatelegacybans()
/json2list(json)
/json_reader
/json_reader/ReadObject(list/tokens)
/json_reader/ScanJson(json)
/json_reader/check_char()
/json_reader/check_type(...)
/json_reader/check_value(...)
/json_reader/die(json_token/T)
/json_reader/get_char()
/json_reader/get_token()
/json_reader/is_digit(char)
/json_reader/is_whitespace(char)
/json_reader/next_token()
/json_reader/read_array()
/json_reader/read_key()
/json_reader/read_number()
/json_reader/read_string(delim)
/json_reader/read_token(val, type)
/json_reader/read_value()
/json_reader/read_word()
/json_reader/var
/json_reader/var/json
/json_reader/var/list
/json_reader/var/list/tokens
/json_token
/json_token/New(v)
/json_token/eof
/json_token/number
/json_token/symbol
/json_token/text
/json_token/var
/json_token/var/value
/json_token/word
/json_writer/WriteObject(list/L)
/json_writer/is_associative(list/L)
/json_writer/write(val)
/json_writer/write_array(list/L)
/json_writer/write_string(txt)
/key_name(var/whom, var/include_link = null, var/include_name = 1)
/key_name_admin(var/whom, var/include_name = 1)
/kick_clients_in_lobby(var/message, var/kick_only_afk = 0)
/list2json(list/L)
/list2text(list/ls, sep)
/listclearnulls(list/L)
/listgetindex(list/L, index)
/living_player_count()
/load_admin_ranks()
/load_admins()
/load_library_db_to_cache()
/load_whitelist()
/log_access(text)
/log_admin(text)
/log_adminsay(text)
/log_attack(text)
/log_chat(text)
/log_comment(text)
/log_del(datum/X)
/log_emote(text)
/log_game(text)
/log_law(text)
/log_ooc(text)
/log_pda(text)
/log_prayer(text)
/log_say(text)
/log_vote(text)
/log_whisper(text)
/makeNewConstruct(var/mob/living/simple_animal/construct/ctype, var/mob/target, var/mob/stoner = null, cultoverride = 0)
/make_datum_references_lists()
/make_maint_all_access()
/make_mining_asteroid_secret()
/matrix
/matrix/Add(m) return matrix(src,m,2|128)
/matrix/Interpolate(m2,t)
/matrix/Invert() return matrix(src,4|128)
/matrix/Multiply(m) return matrix(src,m,1|128)
/matrix/New(m)
/matrix/Scale(x,y)
/matrix/Subtract(m) return matrix(src,m,3|128)
/matrix/Translate(x,y)
/matrix/Turn(a) return matrix(src,a,5|128)
/matrix/TurnTo(old_angle, new_angle)
/merge_powernets(var/datum/powernet/net1, var/datum/powernet/net2)
/merge_text(into, from, null_char="_")
/message_admins(var/msg)
/message_spans_start(list/spans)
/mineral_scan_pulse(list/mobs, turf/T, range = world.view)
/minor_announce(var/message, var/title = "Attention:", var/alert)
/mix_color_from_reagents(var/list/reagent_list)
/mob
/mob/AIize()
/mob/AddCamoOverlay(atom/A)
/mob/AddDisease(var/datum/disease/D)
/mob/AddSpell(var/obj/effect/proc_holder/spell/spell)
/mob/AdjustParalysis(amount)
/mob/AdjustResting(amount)
/mob/AdjustSleeping(amount)
/mob/AdjustStunned(amount)
/mob/AdjustWeakened(amount)
/mob/AltClickOn(var/atom/A)
/mob/Animalize()
/mob/CanBuild()
/mob/CanContractDisease(var/datum/disease/D)
/mob/CanPass(atom/movable/mover, turf/target, height=0)
/mob/Cell()
/mob/ClickOn( var/atom/A, var/params )
/mob/ContractDisease(var/datum/disease/D)
/mob/CtrlClickOn(var/atom/A)
/mob/CtrlShiftClickOn(var/atom/A)
/mob/DblClickOn(var/atom/A, var/params)
/mob/Destroy()
/mob/Dizzy(amount)
/mob/ForceContractDisease(var/datum/disease/D)
/mob/HasDisease(var/datum/disease/D)
/mob/IsAdvancedToolUser()
/mob/Jitter(amount)
/mob/LaserEyes(atom/A)
/mob/Life()
/mob/Login()
/mob/Logout()
/mob/MiddleClickOn(var/atom/A)
/mob/MouseDrop(mob/M)
/mob/Move_Pulled(var/atom/A)
/mob/New()
/mob/NinjaStealthActive(atom/A)
/mob/NinjaStealthMalf()
/mob/Paralyse(amount)
/mob/Process_Spacemove(var/movement_dir = 0)
/mob/RangedAttack(var/atom/A, var/params)
/mob/Resting(amount)
/mob/RestrainedClickOn(var/atom/A)
/mob/SetParalysis(amount)
/mob/SetResting(amount)
/mob/SetSleeping(amount)
/mob/SetStunned(amount)
/mob/SetWeakened(amount)
/mob/ShiftClickOn(var/atom/A)
/mob/Sleeping(amount)
/mob/Stat()
/mob/Stun(amount)
/mob/Topic(href, href_list)
/mob/TurfAdjacent(var/turf/T)
/mob/UnarmedAttack(var/atom/A, var/proximity_flag)
/mob/Weaken(amount, var/ignore_canweaken = 0)
/mob/abiotic(full_body = 0)
/mob/activate_hand(var/selhand)
/mob/add_spells_to_statpanel(var/list/spells)
/mob/add_stings_to_statpanel(var/list/stings)
/mob/adjustEarDamage()
/mob/assess_threat()
/mob/attack_tk(mob/user)
/mob/attack_ui(slot)
/mob/audible_message(var/message, var/deaf_message, var/hearing_distance, var/self_message)
/mob/binarycheck()
/mob/browse_rsc_icon(icon, icon_state, dir = -1)
/mob/camera
/mob/camera/Destroy()
/mob/camera/Login()
/mob/camera/aiEye
/mob/camera/aiEye/Destroy()
/mob/camera/aiEye/GetViewerClient()
/mob/camera/aiEye/Move()
/mob/camera/aiEye/remote
/mob/camera/aiEye/remote/GetViewerClient()
/mob/camera/aiEye/remote/relaymove(mob/user,direct)
/mob/camera/aiEye/remote/setLoc(var/T)
/mob/camera/aiEye/setLoc(var/T)
/mob/camera/blob
/mob/camera/blob/AltClickOn(var/atom/A)
/mob/camera/blob/CtrlClickOn(var/atom/A)
/mob/camera/blob/Destroy()
/mob/camera/blob/Life()
/mob/camera/blob/Login()
/mob/camera/blob/MiddleClickOn(var/atom/A)
/mob/camera/blob/Move(var/NewLoc, var/Dir = 0)
/mob/camera/blob/New()
/mob/camera/blob/Stat()
/mob/camera/blob/add_points(var/points)
/mob/camera/blob/blob_act()
/mob/camera/blob/blob_talk(message)
/mob/camera/blob/can_attack()
/mob/camera/blob/can_buy(var/cost = 15)
/mob/camera/blob/create_shield(var/turf/T)
/mob/camera/blob/emote(var/act,var/m_type=1,var/message = null)
/mob/camera/blob/expand_blob(var/turf/T)
/mob/camera/blob/mind_initialize()
/mob/camera/blob/rally_spores(var/turf/T)
/mob/camera/blob/say(var/message)
/mob/camera/blob/update_health()
/mob/camera/blob/verb/blob_broadcast()
/mob/camera/blob/verb/chemical_reroll()
/mob/camera/blob/verb/create_blobbernaut()
/mob/camera/blob/verb/create_factory()
/mob/camera/blob/verb/create_node()
/mob/camera/blob/verb/create_resource()
/mob/camera/blob/verb/create_shield_power()
/mob/camera/blob/verb/create_storage()
/mob/camera/blob/verb/expand_blob_power()
/mob/camera/blob/verb/jump_to_node()
/mob/camera/blob/verb/rally_spores_power()
/mob/camera/blob/verb/relocate_core()
/mob/camera/blob/verb/revert()
/mob/camera/blob/verb/split_consciousness()
/mob/camera/blob/verb/transport_core()
/mob/camera/experience_pressure_difference()
/mob/canUnEquip(obj/item/I, force)
/mob/canUseTopic()
/mob/can_equip(obj/item/I, slot, disable_warning = 0)
/mob/can_use_hands()
/mob/canface()
/mob/casting()
/mob/changeNext_move(num)
/mob/change_mob_type(var/new_type = null, var/turf/location = null, var/new_name = null as text, var/delete_old_mob = 0 as num)
/mob/clear_alert(category)
/mob/clearmap()
/mob/cult_add_comm()
/mob/dead/CanPass(atom/movable/mover, turf/target, height=0)
/mob/dead/dust()
/mob/dead/gib(var/animation = 1)
/mob/dead/observer
/mob/dead/observer/ClickOn(var/atom/A, var/params)
/mob/dead/observer/DblClickOn(var/atom/A, var/params)
/mob/dead/observer/Destroy()
/mob/dead/observer/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/mob/dead/observer/Login()
/mob/dead/observer/Logout()
/mob/dead/observer/ManualFollow(var/atom/movable/target)
/mob/dead/observer/MouseDrop(atom/over)
/mob/dead/observer/Move(NewLoc, direct)
/mob/dead/observer/New(mob/body)
/mob/dead/observer/Stat()
/mob/dead/observer/Topic(href, href_list)
/mob/dead/observer/add_memory()
/mob/dead/observer/canUseTopic()
/mob/dead/observer/dead_tele()
/mob/dead/observer/memory()
/mob/dead/observer/pointed(atom/A as mob|obj|turf in view())
/mob/dead/observer/say(var/message)
/mob/dead/observer/updateghostimages()
/mob/dead/observer/updateghostsight()
/mob/dead/observer/verb/boo()
/mob/dead/observer/verb/follow()
/mob/dead/observer/verb/jumptomob()
/mob/dead/observer/verb/possess()
/mob/dead/observer/verb/reenter_corpse()
/mob/dead/observer/verb/toggle_darkness()
/mob/dead/observer/verb/toggle_ghostsee()
/mob/dead/observer/verb/toggle_inquisition()
/mob/dead/observer/verb/view_manfiest()
/mob/death(gibbed)
/mob/drop_item()
/mob/drop_item_v()
/mob/drop_l_hand()
/mob/drop_r_hand()
/mob/dust()
/mob/emote(var/act)
/mob/equip_to_appropriate_slot(obj/item/W)
/mob/equip_to_slot(obj/item/W as obj, slot)
/mob/equip_to_slot_if_possible(obj/item/W as obj, slot, qdel_on_fail = 0, disable_warning = 0, redraw_mob = 1)
/mob/equip_to_slot_or_del(obj/item/W as obj, slot)
/mob/face_atom(var/atom/A)
/mob/fall(var/forced)
/mob/fully_replace_character_name(var/oldname,var/newname)
/mob/get_active_hand()
/mob/get_contents()
/mob/get_equipped_items()
/mob/get_ghost(even_if_they_cant_reenter = 0)
/mob/get_inactive_hand()
/mob/get_item_by_slot(slot_id)
/mob/get_light_range(radius)
/mob/getlimb()
/mob/getorgan()
/mob/ghostize(var/can_reenter_corpse = 1)
/mob/gib()
/mob/has_mutation(var/mutation)
/mob/hivecheck()
/mob/hotkey_help()
/mob/incapacitated()
/mob/is_active()
/mob/is_muzzled()
/mob/lingcheck()
/mob/living
/mob/living/Bump(atom/A, yes)
/mob/living/Destroy()
/mob/living/Examine_OOC()
/mob/living/ExtinguishMob()
/mob/living/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/mob/living/IgniteMob()
/mob/living/InCritical()
/mob/living/LaserEyes(atom/A)
/mob/living/Life()
/mob/living/Login()
/mob/living/Logout()
/mob/living/MobBump(mob/M)
/mob/living/Move(atom/newloc, direct)
/mob/living/New()
/mob/living/ObjBump(obj/O)
/mob/living/PushAM(atom/movable/AM)
/mob/living/RestrainedClickOn(var/atom/A)
/mob/living/Stat()
/mob/living/UnarmedAttack(var/atom/A)
/mob/living/acid_act(var/acidpwr, var/toxpwr, var/acid_volume)
/mob/living/add_ventcrawl(obj/machinery/atmospherics/starting_machine)
/mob/living/adjustBodyTemp(actual, desired, incrementboost)
/mob/living/adjustBrainLoss(var/amount)
/mob/living/adjustBruteLoss(var/amount)
/mob/living/adjustCloneLoss(var/amount)
/mob/living/adjustEarDamage(var/damage, var/deaf)
/mob/living/adjustFireLoss(var/amount)
/mob/living/adjustOxyLoss(var/amount)
/mob/living/adjustStaminaLoss(var/amount)
/mob/living/adjustToxLoss(var/amount)
/mob/living/adjust_fire_stacks(add_fire_stacks)
/mob/living/alien_talk(var/message)
/mob/living/apply_damage(var/damage = 0,var/damagetype = "brute", var/def_zone = null, var/blocked = 0)
/mob/living/apply_damages(var/brute = 0, var/burn = 0, var/tox = 0, var/oxy = 0, var/clone = 0, var/def_zone = null, var/blocked = 0, var/stamina = 0)
/mob/living/apply_effect(var/effect = 0,var/effecttype = "stun", var/blocked = 0)
/mob/living/apply_effects(var/stun = 0, var/weaken = 0, var/paralyze = 0, var/irradiate = 0, var/slur = 0, var/stutter = 0, var/eyeblur = 0, var/drowsy = 0, var/blocked = 0, var/stamina = 0, var/jitter = 0)
/mob/living/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/attack_larva(mob/living/carbon/alien/larva/L as mob)
/mob/living/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/attack_slime(mob/living/simple_animal/slime/M as mob)
/mob/living/attackby(obj/item/I, mob/user, params)
/mob/living/attacked_by(var/obj/item/I, var/mob/living/user, var/def_zone)
/mob/living/bullet_act(obj/item/projectile/P, def_zone)
/mob/living/burn_skin(burn_amount)
/mob/living/calculate_affecting_pressure(var/pressure)
/mob/living/canSuicide()
/mob/living/canUseTopic(atom/movable/M, be_close = 0, no_dextery = 0)
/mob/living/can_inject()
/mob/living/can_speak(message)
/mob/living/can_speak_basic(message)
/mob/living/can_speak_vocal(message)
/mob/living/can_track(mob/living/user)
/mob/living/cancel_camera()
/mob/living/carbon/
/mob/living/carbon/AIize()
/mob/living/carbon/AltClickOn(var/atom/A)
/mob/living/carbon/ChangeToHusk()
/mob/living/carbon/CheckStamina()
/mob/living/carbon/ContractDisease(var/datum/disease/D)
/mob/living/carbon/Destroy()
/mob/living/carbon/Drain()
/mob/living/carbon/Life()
/mob/living/carbon/MiddleClickOn(var/atom/A)
/mob/living/carbon/Move(NewLoc, direct)
/mob/living/carbon/RestrainedClickOn(var/atom/A)
/mob/living/carbon/Topic(href, href_list)
/mob/living/carbon/activate_hand(var/selhand)
/mob/living/carbon/alien
/mob/living/carbon/alien/AddAbility(var/obj/effect/proc_holder/alien/A)
/mob/living/carbon/alien/AddInfectionImages()
/mob/living/carbon/alien/CheckStamina()
/mob/living/carbon/alien/IsAdvancedToolUser()
/mob/living/carbon/alien/Login()
/mob/living/carbon/alien/Logout()
/mob/living/carbon/alien/New()
/mob/living/carbon/alien/RemoveInfectionImages()
/mob/living/carbon/alien/RestrainedClickOn(var/atom/A)
/mob/living/carbon/alien/Stat()
/mob/living/carbon/alien/Stun(amount)
/mob/living/carbon/alien/UnarmedAttack(var/atom/A)
/mob/living/carbon/alien/add_abilities_to_panel()
/mob/living/carbon/alien/adjustFireLoss(amount)
/mob/living/carbon/alien/adjustToxLoss(amount)
/mob/living/carbon/alien/attack_alien(mob/living/carbon/alien/M as mob)
/mob/living/carbon/alien/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/carbon/alien/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/alien/attack_larva(mob/living/carbon/alien/larva/L as mob)
/mob/living/carbon/alien/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/carbon/alien/attack_slime(mob/living/simple_animal/slime/M as mob)
/mob/living/carbon/alien/canBeHandcuffed()
/mob/living/carbon/alien/check_breath(datum/gas_mixture/breath)
/mob/living/carbon/alien/check_eye_prot()
/mob/living/carbon/alien/dust(var/animation = 1)
/mob/living/carbon/alien/dust_animation(var/animate)
/mob/living/carbon/alien/ex_act(severity, target)
/mob/living/carbon/alien/getPlasma()
/mob/living/carbon/alien/getToxLoss()
/mob/living/carbon/alien/getTrail()
/mob/living/carbon/alien/get_standard_pixel_y_offset(lying = 0)
/mob/living/carbon/alien/gib_animation(var/animate)
/mob/living/carbon/alien/handle_environment(var/datum/gas_mixture/environment)
/mob/living/carbon/alien/handle_fire()
/mob/living/carbon/alien/handle_hud_icons()
/mob/living/carbon/alien/handle_inherent_channels(message, message_mode)
/mob/living/carbon/alien/handle_status_effects()
/mob/living/carbon/alien/hitby(atom/movable/AM)
/mob/living/carbon/alien/hivecheck()
/mob/living/carbon/alien/humanoid
/mob/living/carbon/alien/humanoid/Login()
/mob/living/carbon/alien/humanoid/New()
/mob/living/carbon/alien/humanoid/Topic(href, href_list)
/mob/living/carbon/alien/humanoid/adjust_body_temperature(current, loc_temp, boost)
/mob/living/carbon/alien/humanoid/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/alien/humanoid/attack_hulk(mob/living/carbon/human/user)
/mob/living/carbon/alien/humanoid/check_ear_prot()
/mob/living/carbon/alien/humanoid/corrosive_acid(O as obj|turf in oview(1))
/mob/living/carbon/alien/humanoid/cuff_resist(obj/item/I)
/mob/living/carbon/alien/humanoid/death(gibbed)
/mob/living/carbon/alien/humanoid/drone
/mob/living/carbon/alien/humanoid/drone/New()
/mob/living/carbon/alien/humanoid/drone/mind_initialize()
/mob/living/carbon/alien/humanoid/drone/movement_delay()
/mob/living/carbon/alien/humanoid/emote(var/act)
/mob/living/carbon/alien/humanoid/emp_act(severity)
/mob/living/carbon/alien/humanoid/float(on)
/mob/living/carbon/alien/humanoid/get_standard_pixel_x_offset(lying = 0)
/mob/living/carbon/alien/humanoid/get_standard_pixel_y_offset(lying = 0)
/mob/living/carbon/alien/humanoid/hunter
/mob/living/carbon/alien/humanoid/hunter/ClickOn(var/atom/A, var/params)
/mob/living/carbon/alien/humanoid/hunter/New()
/mob/living/carbon/alien/humanoid/hunter/handle_hud_icons_health()
/mob/living/carbon/alien/humanoid/hunter/leap_at(var/atom/A)
/mob/living/carbon/alien/humanoid/hunter/mind_initialize()
/mob/living/carbon/alien/humanoid/hunter/movement_delay()
/mob/living/carbon/alien/humanoid/hunter/throw_impact(A)
/mob/living/carbon/alien/humanoid/hunter/toggle_leap(var/message = 1)
/mob/living/carbon/alien/humanoid/movement_delay()
/mob/living/carbon/alien/humanoid/queen
/mob/living/carbon/alien/humanoid/queen/New()
/mob/living/carbon/alien/humanoid/queen/handle_hud_icons_health()
/mob/living/carbon/alien/humanoid/queen/large
/mob/living/carbon/alien/humanoid/queen/large/update_icons()
/mob/living/carbon/alien/humanoid/queen/mind_initialize()
/mob/living/carbon/alien/humanoid/queen/movement_delay()
/mob/living/carbon/alien/humanoid/regenerate_icons()
/mob/living/carbon/alien/humanoid/restrained()
/mob/living/carbon/alien/humanoid/sentinel
/mob/living/carbon/alien/humanoid/sentinel/New()
/mob/living/carbon/alien/humanoid/sentinel/handle_hud_icons_health()
/mob/living/carbon/alien/humanoid/sentinel/mind_initialize()
/mob/living/carbon/alien/humanoid/sentinel/movement_delay()
/mob/living/carbon/alien/humanoid/show_inv(mob/user)
/mob/living/carbon/alien/humanoid/throw_at(atom/target, range, speed)
/mob/living/carbon/alien/humanoid/unEquip(obj/item/I)
/mob/living/carbon/alien/humanoid/update_fire()
/mob/living/carbon/alien/humanoid/update_hud()
/mob/living/carbon/alien/humanoid/update_icons()
/mob/living/carbon/alien/humanoid/update_inv_l_hand(update_icons = 1)
/mob/living/carbon/alien/humanoid/update_inv_r_hand(update_icons = 1)
/mob/living/carbon/alien/humanoid/update_transform()
/mob/living/carbon/alien/humanoid/verb/suicide()
/mob/living/carbon/alien/larva
/mob/living/carbon/alien/larva/Life()
/mob/living/carbon/alien/larva/New()
/mob/living/carbon/alien/larva/Stat()
/mob/living/carbon/alien/larva/UnarmedAttack(var/atom/A)
/mob/living/carbon/alien/larva/adjustToxLoss(amount)
/mob/living/carbon/alien/larva/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/alien/larva/attack_hulk(mob/living/carbon/human/user)
/mob/living/carbon/alien/larva/attack_ui(slot_id)
/mob/living/carbon/alien/larva/death(gibbed)
/mob/living/carbon/alien/larva/emote(var/act)
/mob/living/carbon/alien/larva/handle_hud_icons_health()
/mob/living/carbon/alien/larva/handle_regular_status_updates()
/mob/living/carbon/alien/larva/mind_initialize()
/mob/living/carbon/alien/larva/regenerate_icons()
/mob/living/carbon/alien/larva/restrained()
/mob/living/carbon/alien/larva/show_inv(mob/user)
/mob/living/carbon/alien/larva/start_pulling()
/mob/living/carbon/alien/larva/stripPanelEquip(obj/item/what, mob/who)
/mob/living/carbon/alien/larva/stripPanelUnequip(obj/item/what, mob/who)
/mob/living/carbon/alien/larva/toggle_throw_mode()
/mob/living/carbon/alien/larva/unEquip(obj/item/W as obj)
/mob/living/carbon/alien/larva/updatePlasmaDisplay()
/mob/living/carbon/alien/larva/update_icons()
/mob/living/carbon/alien/larva/update_transform()
/mob/living/carbon/alien/mind_initialize()
/mob/living/carbon/alien/reagent_check(var/datum/reagent/R)
/mob/living/carbon/alien/say(var/message)
/mob/living/carbon/alien/spawn_dust()
/mob/living/carbon/alien/spawn_gibs()
/mob/living/carbon/alien/updatePlasmaDisplay()
/mob/living/carbon/alien/update_sight()
/mob/living/carbon/attack_hand(mob/living/carbon/human/user)
/mob/living/carbon/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/carbon/attack_slime(mob/living/simple_animal/slime/M)
/mob/living/carbon/attackby(obj/item/I, mob/user, params)
/mob/living/carbon/blob_act()
/mob/living/carbon/brain
/mob/living/carbon/brain/Destroy()
/mob/living/carbon/brain/New()
/mob/living/carbon/brain/UnarmedAttack(var/atom/A)
/mob/living/carbon/brain/blob_act()
/mob/living/carbon/brain/death(gibbed)
/mob/living/carbon/brain/emote(var/act,var/m_type=1,var/message = null)
/mob/living/carbon/brain/ex_act()
/mob/living/carbon/brain/gib(var/animation = 0)
/mob/living/carbon/brain/handle_breathing()
/mob/living/carbon/brain/handle_disabilities()
/mob/living/carbon/brain/handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/brain/handle_mutations_and_radiation()
/mob/living/carbon/brain/handle_regular_hud_updates()
/mob/living/carbon/brain/handle_regular_status_updates()
/mob/living/carbon/brain/handle_status_effects()
/mob/living/carbon/brain/handle_temperature_damage(body_part, exposed_temperature, exposed_intensity)
/mob/living/carbon/brain/lingcheck()
/mob/living/carbon/brain/on_forcemove(var/atom/newloc)
/mob/living/carbon/brain/radio(message, message_mode, list/spans)
/mob/living/carbon/brain/say(var/message)
/mob/living/carbon/brain/toggle_throw_mode()
/mob/living/carbon/brain/update_canmove()
/mob/living/carbon/brain/verb/suicide()
/mob/living/carbon/breathe()
/mob/living/carbon/canBeHandcuffed()
/mob/living/carbon/canSuicide()
/mob/living/carbon/can_speak_basic(message)
/mob/living/carbon/can_use_hands()
/mob/living/carbon/check_breath(datum/gas_mixture/breath)
/mob/living/carbon/check_ear_prot()
/mob/living/carbon/check_virus()
/mob/living/carbon/clean_blood()
/mob/living/carbon/cuff_resist(obj/item/I, var/breakouttime = 600, cuff_break = 0)
/mob/living/carbon/death(gibbed)
/mob/living/carbon/dream()
/mob/living/carbon/electrocute_act(var/shock_damage, var/obj/source, var/siemens_coeff = 1.0)
/mob/living/carbon/emote(var/act,var/m_type=1,var/message = null)
/mob/living/carbon/eyecheck()
/mob/living/carbon/fall(var/forced)
/mob/living/carbon/flash_eyes(intensity = 1, override_blindness_check = 0)
/mob/living/carbon/getTrail()
/mob/living/carbon/get_blood(datum/reagents/container)
/mob/living/carbon/get_breath_from_internal(volume_needed)
/mob/living/carbon/get_item_by_slot(slot_id)
/mob/living/carbon/get_standard_pixel_y_offset(lying = 0)
/mob/living/carbon/getorgan(typepath)
/mob/living/carbon/gib(var/animation = 1)
/mob/living/carbon/hallucinate(var/hal_type)
/mob/living/carbon/handle_breath_temperature(datum/gas_mixture/breath)
/mob/living/carbon/handle_breathing()
/mob/living/carbon/handle_changeling()
/mob/living/carbon/handle_chemicals_in_body()
/mob/living/carbon/handle_dreams()
/mob/living/carbon/handle_hallucinations()
/mob/living/carbon/handle_heart()
/mob/living/carbon/handle_hud_icons()
/mob/living/carbon/handle_hud_icons_health()
/mob/living/carbon/handle_mutations_and_radiation()
/mob/living/carbon/handle_regular_hud_updates()
/mob/living/carbon/handle_regular_status_updates()
/mob/living/carbon/handle_status_effects()
/mob/living/carbon/handle_stomach()
/mob/living/carbon/has_smoke_protection()
/mob/living/carbon/help_shake_act(mob/living/carbon/M)
/mob/living/carbon/hitby(atom/movable/AM, skip)
/mob/living/carbon/human
/mob/living/carbon/human/AIize()
/mob/living/carbon/human/Alienize()
/mob/living/carbon/human/Animalize()
/mob/living/carbon/human/Blobize()
/mob/living/carbon/human/CanContractDisease(var/datum/disease/D)
/mob/living/carbon/human/ChangeToHusk()
/mob/living/carbon/human/Crossed(var/atom/movable/AM)
/mob/living/carbon/human/Destroy()
/mob/living/carbon/human/ExtinguishMob()
/mob/living/carbon/human/GetSpecialVoice()
/mob/living/carbon/human/GetVoice()
/mob/living/carbon/human/IgniteMob()
/mob/living/carbon/human/InCritical()
/mob/living/carbon/human/IsAdvancedToolUser()
/mob/living/carbon/human/IsVocal()
/mob/living/carbon/human/LaserEyes()
/mob/living/carbon/human/Life()
/mob/living/carbon/human/Login()
/mob/living/carbon/human/Move(NewLoc, direct)
/mob/living/carbon/human/New()
/mob/living/carbon/human/Process_Spacemove(var/movement_dir = 0)
/mob/living/carbon/human/RangedAttack(var/atom/A)
/mob/living/carbon/human/Robotize(var/delete_items = 0)
/mob/living/carbon/human/SetSpecialVoice(var/new_voice)
/mob/living/carbon/human/Stat()
/mob/living/carbon/human/Topic(href, href_list)
/mob/living/carbon/human/UnarmedAttack(var/atom/A, var/proximity)
/mob/living/carbon/human/UnsetSpecialVoice()
/mob/living/carbon/human/abiotic(var/full_body = 0)
/mob/living/carbon/human/acid_act(var/acidpwr, var/toxpwr, var/acid_volume)
/mob/living/carbon/human/add_blood(mob/living/carbon/M)
/mob/living/carbon/human/adjustBruteLoss(var/amount)
/mob/living/carbon/human/adjustFireLoss(var/amount)
/mob/living/carbon/human/afterattack(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, inrange, params)
/mob/living/carbon/human/apply_damage(var/damage = 0,var/damagetype = "brute", var/def_zone = null, var/blocked = 0)
/mob/living/carbon/human/apply_overlay(cache_index)
/mob/living/carbon/human/assess_threat(var/obj/machinery/bot/secbot/judgebot, var/lasercolor)
/mob/living/carbon/human/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/carbon/human/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/carbon/human/attack_hand(mob/living/carbon/human/M)
/mob/living/carbon/human/attack_hulk(mob/living/carbon/human/user)
/mob/living/carbon/human/attack_larva(mob/living/carbon/alien/larva/L as mob)
/mob/living/carbon/human/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/carbon/human/attack_slime(mob/living/simple_animal/slime/M as mob)
/mob/living/carbon/human/attacked_by(var/obj/item/I, var/mob/living/user, var/def_zone)
/mob/living/carbon/human/binarycheck()
/mob/living/carbon/human/blob_act()
/mob/living/carbon/human/breathe()
/mob/living/carbon/human/bullet_act(var/obj/item/projectile/P, var/def_zone)
/mob/living/carbon/human/calculate_affecting_pressure(var/pressure)
/mob/living/carbon/human/canBeHandcuffed()
/mob/living/carbon/human/canUseHUD()
/mob/living/carbon/human/canUseTopic(atom/movable/M, be_close = 0)
/mob/living/carbon/human/can_equip(obj/item/I, slot, disable_warning = 0)
/mob/living/carbon/human/can_inject(var/mob/user, var/error_msg, var/target_zone)
/mob/living/carbon/human/can_track(mob/living/user)
/mob/living/carbon/human/check_ear_prot()
/mob/living/carbon/human/check_eye_prot()
/mob/living/carbon/human/check_obscured_slots()
/mob/living/carbon/human/check_reflect(var/def_zone)
/mob/living/carbon/human/check_shields(var/damage = 0, var/attack_text = "the attack", var/obj/item/O)
/mob/living/carbon/human/checkarmor(var/obj/item/organ/limb/def_zone, var/type)
/mob/living/carbon/human/corgize()
/mob/living/carbon/human/cuff_resist(obj/item/I)
/mob/living/carbon/human/death(gibbed)
/mob/living/carbon/human/do_cpr(mob/living/carbon/C)
/mob/living/carbon/human/drip(var/amt as num)
/mob/living/carbon/human/dummy
/mob/living/carbon/human/dust(var/animation = 1)
/mob/living/carbon/human/dust_animation(var/animate)
/mob/living/carbon/human/electrocute_act(var/shock_damage, var/obj/source, var/siemens_coeff = 1.0, var/safety = 0)
/mob/living/carbon/human/emote(var/act,var/m_type=1,var/message = null)
/mob/living/carbon/human/emp_act(severity)
/mob/living/carbon/human/endTailWag()
/mob/living/carbon/human/equip_in_one_of_slots(obj/item/I, list/slots, qdel_on_fail = 1)
/mob/living/carbon/human/equip_space_ninja(safety=0)
/mob/living/carbon/human/equip_to_slot(obj/item/I, slot, redraw_mob = 1)
/mob/living/carbon/human/ex_act(severity, ex_target)
/mob/living/carbon/human/examine(mob/user)
/mob/living/carbon/human/experience_pressure_difference()
/mob/living/carbon/human/fixblood()
/mob/living/carbon/human/forcesay(list/append)
/mob/living/carbon/human/generateStaticOverlay()
/mob/living/carbon/human/getBruteLoss()
/mob/living/carbon/human/getFireLoss()
/mob/living/carbon/human/get_alt_name()
/mob/living/carbon/human/get_assignment(var/if_no_id = "No id", var/if_no_job = "No job")
/mob/living/carbon/human/get_authentification_name(var/if_no_id = "Unknown")
/mob/living/carbon/human/get_cold_protection(temperature)
/mob/living/carbon/human/get_cold_protection_flags(temperature)
/mob/living/carbon/human/get_damageable_organs()
/mob/living/carbon/human/get_damaged_organs(var/brute, var/burn)
/mob/living/carbon/human/get_face_name(if_no_face="Unknown")
/mob/living/carbon/human/get_heat_protection(temperature)
/mob/living/carbon/human/get_heat_protection_flags(temperature)
/mob/living/carbon/human/get_id_name(var/if_no_id = "Unknown")
/mob/living/carbon/human/get_idcard()
/mob/living/carbon/human/get_item_by_slot(slot_id)
/mob/living/carbon/human/get_organ(var/zone)
/mob/living/carbon/human/get_overlays_copy(var/list/unwantedLayers)
/mob/living/carbon/human/get_spans()
/mob/living/carbon/human/get_visible_name()
/mob/living/carbon/human/getarmor(var/def_zone, var/type)
/mob/living/carbon/human/getlimb(typepath)
/mob/living/carbon/human/gib_animation(var/animate)
/mob/living/carbon/human/grabbedby(mob/living/user)
/mob/living/carbon/human/handle_blood()
/mob/living/carbon/human/handle_changeling()
/mob/living/carbon/human/handle_chemicals_in_body()
/mob/living/carbon/human/handle_disabilities()
/mob/living/carbon/human/handle_embedded_objects()
/mob/living/carbon/human/handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/human/handle_fire()
/mob/living/carbon/human/handle_heart()
/mob/living/carbon/human/handle_hud_icons()
/mob/living/carbon/human/handle_mutations_and_radiation()
/mob/living/carbon/human/handle_random_events()
/mob/living/carbon/human/handle_vision()
/mob/living/carbon/human/has_embedded_objects()
/mob/living/carbon/human/has_smoke_protection()
/mob/living/carbon/human/hat_fall_prob()
/mob/living/carbon/human/heal_organ_damage(var/brute, var/burn)
/mob/living/carbon/human/heal_overall_damage(var/brute, var/burn)
/mob/living/carbon/human/help_shake_act(mob/living/carbon/M)
/mob/living/carbon/human/inject_blood(obj/item/weapon/reagent_containers/container, var/amount)
/mob/living/carbon/human/interactive
/mob/living/carbon/human/interactive/Life()
/mob/living/carbon/human/interactive/New()
/mob/living/carbon/human/interactive/angry
/mob/living/carbon/human/interactive/angry/New()
/mob/living/carbon/human/interactive/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/human/interactive/attacked_by(var/obj/item/I, var/mob/living/user, var/def_zone)
/mob/living/carbon/human/interactive/bullet_act(var/obj/item/projectile/P)
/mob/living/carbon/human/interactive/chatter(obj)
/mob/living/carbon/human/interactive/combat(obj)
/mob/living/carbon/human/interactive/denied_filter(var/target)
/mob/living/carbon/human/interactive/doing2string(var/doin)
/mob/living/carbon/human/interactive/doorscan(obj)
/mob/living/carbon/human/interactive/enforce_hands()
/mob/living/carbon/human/interactive/friendly
/mob/living/carbon/human/interactive/friendly/New()
/mob/living/carbon/human/interactive/greytide
/mob/living/carbon/human/interactive/greytide/New()
/mob/living/carbon/human/interactive/insert_into_backpack()
/mob/living/carbon/human/interactive/interest2string(var/inter)
/mob/living/carbon/human/interactive/isnotfunc(var/checkDead = TRUE)
/mob/living/carbon/human/interactive/job2area(var/target)
/mob/living/carbon/human/interactive/nearbyscan(obj)
/mob/living/carbon/human/interactive/random()
/mob/living/carbon/human/interactive/shitcurity(obj)
/mob/living/carbon/human/interactive/sidestep(obj)
/mob/living/carbon/human/interactive/swap_hands()
/mob/living/carbon/human/interactive/takeDelegate(var/mob/living/carbon/human/interactive/from,var/doReset=TRUE)
/mob/living/carbon/human/interactive/take_to_slot(var/obj/item/G)
/mob/living/carbon/human/interactive/targetRange(var/towhere)
/mob/living/carbon/human/interactive/target_filter(var/target)
/mob/living/carbon/human/interactive/tryWalk(var/turf/TARGET)
/mob/living/carbon/human/interactive/walk2derpless(var/target)
/mob/living/carbon/human/makeSkeleton()
/mob/living/carbon/human/make_blood()
/mob/living/carbon/human/mech_melee_attack(obj/mecha/M)
/mob/living/carbon/human/mind_initialize()
/mob/living/carbon/human/mob_has_gravity()
/mob/living/carbon/human/mob_negates_gravity()
/mob/living/carbon/human/movement_delay()
/mob/living/carbon/human/on_hit(proj_type)
/mob/living/carbon/human/prepare_data_huds()
/mob/living/carbon/human/radio(message, message_mode, list/spans)
/mob/living/carbon/human/reagent_check(datum/reagent/R)
/mob/living/carbon/human/regenerate_icons()
/mob/living/carbon/human/remove_all_embedded_objects()
/mob/living/carbon/human/remove_overlay(cache_index)
/mob/living/carbon/human/restore_blood()
/mob/living/carbon/human/restrained()
/mob/living/carbon/human/say_quote(input, spans)
/mob/living/carbon/human/sec_hud_set_ID()
/mob/living/carbon/human/sec_hud_set_implants()
/mob/living/carbon/human/sec_hud_set_security_status()
/mob/living/carbon/human/set_cloned_appearance()
/mob/living/carbon/human/shadowling_ascendance()
/mob/living/carbon/human/shadowling_hatch()
/mob/living/carbon/human/show_inv(mob/user)
/mob/living/carbon/human/singularity_act()
/mob/living/carbon/human/singularity_pull(S, current_size)
/mob/living/carbon/human/slimeize(reproduce as num)
/mob/living/carbon/human/slip(var/s_amount, var/w_amount, var/obj/O, var/lube)
/mob/living/carbon/human/spawn_dust()
/mob/living/carbon/human/spawn_gibs()
/mob/living/carbon/human/startTailWag()
/mob/living/carbon/human/suppress_bloodloss(var/amount)
/mob/living/carbon/human/take_blood(obj/item/weapon/reagent_containers/container, var/amount)
/mob/living/carbon/human/take_organ_damage(var/brute, var/burn)
/mob/living/carbon/human/take_overall_damage(var/brute, var/burn)
/mob/living/carbon/human/tintcheck()
/mob/living/carbon/human/treat_message(message)
/mob/living/carbon/human/unEquip(obj/item/I)
/mob/living/carbon/human/update_augments()
/mob/living/carbon/human/update_base_icon_state()
/mob/living/carbon/human/update_body()
/mob/living/carbon/human/update_damage_overlays()
/mob/living/carbon/human/update_fire()
/mob/living/carbon/human/update_hair()
/mob/living/carbon/human/update_hud()
/mob/living/carbon/human/update_icons()
/mob/living/carbon/human/update_inv_back()
/mob/living/carbon/human/update_inv_belt()
/mob/living/carbon/human/update_inv_ears()
/mob/living/carbon/human/update_inv_glasses()
/mob/living/carbon/human/update_inv_gloves()
/mob/living/carbon/human/update_inv_handcuffed()
/mob/living/carbon/human/update_inv_head()
/mob/living/carbon/human/update_inv_l_hand()
/mob/living/carbon/human/update_inv_legcuffed()
/mob/living/carbon/human/update_inv_pockets()
/mob/living/carbon/human/update_inv_r_hand()
/mob/living/carbon/human/update_inv_s_store()
/mob/living/carbon/human/update_inv_shoes()
/mob/living/carbon/human/update_inv_w_uniform()
/mob/living/carbon/human/update_inv_wear_id()
/mob/living/carbon/human/update_inv_wear_mask()
/mob/living/carbon/human/update_inv_wear_suit()
/mob/living/carbon/human/update_mutant_bodyparts()
/mob/living/carbon/human/update_mutcolor()
/mob/living/carbon/human/updatehealth()
/mob/living/carbon/human/var/datum/reagents/vessel
/mob/living/carbon/human/verb/quick_equip()
/mob/living/carbon/human/verb/suicide()
/mob/living/carbon/human/verb/toggle_hotkey_verbs()
/mob/living/carbon/human/wear_female_version(t_color, icon, layer, type)
/mob/living/carbon/human/whisper(message as text)
/mob/living/carbon/humanize(tr_flags = (1 | 2 | 64), newname = null)
/mob/living/carbon/immortality()
/mob/living/carbon/inject_blood(obj/item/weapon/reagent_containers/container, var/amount)
/mob/living/carbon/is_mouth_covered(head_only = 0, mask_only = 0)
/mob/living/carbon/is_muzzled()
/mob/living/carbon/med_hud_set_health()
/mob/living/carbon/med_hud_set_status()
/mob/living/carbon/monkey
/mob/living/carbon/monkey/IsAdvancedToolUser()
/mob/living/carbon/monkey/Life()
/mob/living/carbon/monkey/Login()
/mob/living/carbon/monkey/New()
/mob/living/carbon/monkey/RestrainedClickOn(var/atom/A)
/mob/living/carbon/monkey/Stat()
/mob/living/carbon/monkey/UnarmedAttack(var/atom/A)
/mob/living/carbon/monkey/acid_act(var/acidpwr, var/toxpwr, var/acid_volume)
/mob/living/carbon/monkey/assess_threat(var/obj/machinery/bot/secbot/judgebot, var/lasercolor)
/mob/living/carbon/monkey/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/carbon/monkey/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/carbon/monkey/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/monkey/attack_larva(mob/living/carbon/alien/larva/L as mob)
/mob/living/carbon/monkey/attack_paw(mob/living/M as mob)
/mob/living/carbon/monkey/attack_slime(mob/living/simple_animal/slime/M as mob)
/mob/living/carbon/monkey/canBeHandcuffed()
/mob/living/carbon/monkey/can_equip(obj/item/I, slot, disable_warning = 0)
/mob/living/carbon/monkey/death(gibbed)
/mob/living/carbon/monkey/dust(var/animation = 1)
/mob/living/carbon/monkey/dust_animation(var/animate)
/mob/living/carbon/monkey/emote(var/act)
/mob/living/carbon/monkey/equip_to_slot(obj/item/I, slot, redraw_mob = 1)
/mob/living/carbon/monkey/ex_act(severity, target)
/mob/living/carbon/monkey/examine(mob/user)
/mob/living/carbon/monkey/gib_animation(var/animate)
/mob/living/carbon/monkey/handle_breath_temperature(datum/gas_mixture/breath)
/mob/living/carbon/monkey/handle_changeling()
/mob/living/carbon/monkey/handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/monkey/handle_fire()
/mob/living/carbon/monkey/handle_hud_icons()
/mob/living/carbon/monkey/handle_mutations_and_radiation()
/mob/living/carbon/monkey/handle_random_events()
/mob/living/carbon/monkey/has_smoke_protection()
/mob/living/carbon/monkey/help_shake_act(mob/living/carbon/M)
/mob/living/carbon/monkey/mind_initialize()
/mob/living/carbon/monkey/movement_delay()
/mob/living/carbon/monkey/prepare_data_huds()
/mob/living/carbon/monkey/reagent_check(var/datum/reagent/R)
/mob/living/carbon/monkey/regenerate_icons()
/mob/living/carbon/monkey/update_fire()
/mob/living/carbon/monkey/update_hud()
/mob/living/carbon/monkey/update_icons()
/mob/living/carbon/monkey/update_inv_back(var/update_icons=1)
/mob/living/carbon/monkey/update_inv_handcuffed(var/update_icons=1)
/mob/living/carbon/monkey/update_inv_head(var/update_icons=1)
/mob/living/carbon/monkey/update_inv_l_hand(var/update_icons=1)
/mob/living/carbon/monkey/update_inv_r_hand(var/update_icons=1)
/mob/living/carbon/monkey/update_inv_wear_mask(var/update_icons=1)
/mob/living/carbon/monkey/verb/removeinternal()
/mob/living/carbon/monkey/verb/suicide()
/mob/living/carbon/monkeyize(tr_flags = (1 | 2 | 64), newname = null)
/mob/living/carbon/movement_delay()
/mob/living/carbon/natural_bodytemperature_stabilization()
/mob/living/carbon/ninjadrain_act(var/obj/item/clothing/suit/space/space_ninja/S, var/mob/living/carbon/human/H, var/obj/item/clothing/gloves/space_ninja/G)
/mob/living/carbon/prepare_data_huds()
/mob/living/carbon/prepare_huds()
/mob/living/carbon/proc/handle_dreams()
/mob/living/carbon/relaymove(var/mob/user, direction)
/mob/living/carbon/resist_buckle()
/mob/living/carbon/resist_fire()
/mob/living/carbon/resist_restraints()
/mob/living/carbon/restrained()
/mob/living/carbon/revive()
/mob/living/carbon/show_inv(mob/user)
/mob/living/carbon/slip(var/s_amount, var/w_amount, var/obj/O, var/lube)
/mob/living/carbon/spin(spintime, speed)
/mob/living/carbon/swap_hand()
/mob/living/carbon/take_blood(obj/item/weapon/reagent_containers/container, var/amount)
/mob/living/carbon/throw_item(atom/target)
/mob/living/carbon/throw_mode_off()
/mob/living/carbon/throw_mode_on()
/mob/living/carbon/tintcheck()
/mob/living/carbon/toggle_throw_mode()
/mob/living/carbon/treat_message(message)
/mob/living/carbon/unEquip(obj/item/I)
/mob/living/carbon/unset_sting()
/mob/living/carbon/update_sight()
/mob/living/carbon/update_suit_sensors()
/mob/living/carbon/update_transform()
/mob/living/carbon/updatehealth()
/mob/living/check_contents_for(A)
/mob/living/check_ear_prot()
/mob/living/check_emote(message)
/mob/living/check_eye_prot()
/mob/living/cult_innate_comm()
/mob/living/death(gibbed)
/mob/living/do_attack_animation(atom/A)
/mob/living/do_jitter_animation(jitteriness)
/mob/living/dust(var/animation = 0)
/mob/living/dust_animation(var/animate, var/flick_name = "")
/mob/living/electrocute_act(var/shock_damage, var/obj/source, var/siemens_coeff = 1.0)
/mob/living/emote(var/act, var/m_type=1, var/message = null)
/mob/living/emp_act(severity)
/mob/living/end_animation(var/animate)
/mob/living/ex_act(severity, target)
/mob/living/fire_act()
/mob/living/flash_eyes(intensity = 1, override_blindness_check = 0)
/mob/living/float(on)
/mob/living/generateStaticOverlay()
/mob/living/getBrainLoss()
/mob/living/getBruteLoss()
/mob/living/getCloneLoss()
/mob/living/getFireLoss()
/mob/living/getMaxHealth()
/mob/living/getOxyLoss()
/mob/living/getStaminaLoss()
/mob/living/getToxLoss()
/mob/living/getTrail()
/mob/living/get_contents(var/obj/item/weapon/storage/Storage = null)
/mob/living/get_message_mode(message)
/mob/living/get_organ_target()
/mob/living/get_standard_pixel_x_offset(lying = 0)
/mob/living/get_standard_pixel_y_offset(lying = 0)
/mob/living/get_temperature(var/datum/gas_mixture/environment)
/mob/living/get_visible_name()
/mob/living/getarmor(var/def_zone, var/type)
/mob/living/gib(var/animation = 1)
/mob/living/gib_animation(var/animate, var/flick_name = "gibbed")
/mob/living/grabbedby(mob/living/carbon/user,var/supress_message = 0)
/mob/living/handle_actions()
/mob/living/handle_blood()
/mob/living/handle_breathing()
/mob/living/handle_chemicals_in_body()
/mob/living/handle_disabilities()
/mob/living/handle_environment(var/datum/gas_mixture/environment)
/mob/living/handle_fire()
/mob/living/handle_hud_icons()
/mob/living/handle_hud_icons_health()
/mob/living/handle_inherent_channels(message, message_mode)
/mob/living/handle_mutations_and_radiation()
/mob/living/handle_random_events()
/mob/living/handle_regular_hud_updates()
/mob/living/handle_regular_status_updates()
/mob/living/handle_status_effects()
/mob/living/handle_stomach()
/mob/living/handle_ventcrawl(var/atom/A)
/mob/living/handle_vision()
/mob/living/heal_organ_damage(var/brute, var/burn)
/mob/living/heal_overall_damage(var/brute, var/burn)
/mob/living/hitby(atom/movable/AM)
/mob/living/incapacitated()
/mob/living/irradiate(amount)
/mob/living/lay_down()
/mob/living/lingcheck()
/mob/living/makeTrail(var/turf/T, var/mob/living/M)
/mob/living/mech_melee_attack(obj/mecha/M)
/mob/living/mob_sleep()
/mob/living/narsie_act()
/mob/living/on_hit(var/obj/item/projectile/proj_type)
/mob/living/pointed(atom/A as mob|obj|turf in view())
/mob/living/radio(message, message_mode, list/spans)
/mob/living/remove_ventcrawl()
/mob/living/resist_buckle()
/mob/living/resist_fire()
/mob/living/resist_restraints()
/mob/living/revive()
/mob/living/robot_talk(var/message)
/mob/living/run_armor_check(def_zone = null, attack_flag = "melee", absorb_text = null, soften_text = null)
/mob/living/say(message, bubble_type,)
/mob/living/say_quote(input, list/spans)
/mob/living/say_test(var/text)
/mob/living/send_speech(message, message_range = 7, obj/source = src, bubble_type, list/spans)
/mob/living/setBrainLoss(var/amount)
/mob/living/setCloneLoss(var/amount)
/mob/living/setEarDamage(var/damage, var/deaf)
/mob/living/setMaxHealth(var/newMaxHealth)
/mob/living/setOxyLoss(var/amount)
/mob/living/setStaminaLoss(var/amount)
/mob/living/setToxLoss(var/amount)
/mob/living/setup_animation(var/animation, var/prev_lying)
/mob/living/silicon
/mob/living/silicon/GetPhoto()
/mob/living/silicon/IsAdvancedToolUser()
/mob/living/silicon/Login()
/mob/living/silicon/Topic(href, href_list)
/mob/living/silicon/add_inherent_law(var/law)
/mob/living/silicon/add_ion_law(var/law)
/mob/living/silicon/add_med_hud()
/mob/living/silicon/add_sec_hud()
/mob/living/silicon/add_supplied_law(var/number, var/law)
/mob/living/silicon/adjustEarDamage()
/mob/living/silicon/ai
/mob/living/silicon/ai/AltClickOn(var/atom/A)
/mob/living/silicon/ai/ClickOn(var/atom/A, params)
/mob/living/silicon/ai/CtrlClickOn(var/atom/A)
/mob/living/silicon/ai/CtrlShiftClickOn(var/atom/A)
/mob/living/silicon/ai/DblClickOn(var/atom/A, params)
/mob/living/silicon/ai/Destroy()
/mob/living/silicon/ai/IsVocal()
/mob/living/silicon/ai/Life()
/mob/living/silicon/ai/Login()
/mob/living/silicon/ai/Logout()
/mob/living/silicon/ai/New(loc, var/datum/ai_laws/L, var/obj/item/device/mmi/B, var/safety = 0)
/mob/living/silicon/ai/RangedAttack(atom/A)
/mob/living/silicon/ai/ShiftClickOn(var/atom/A)
/mob/living/silicon/ai/Stat()
/mob/living/silicon/ai/Topic(href, href_list)
/mob/living/silicon/ai/TurfAdjacent(var/turf/T)
/mob/living/silicon/ai/UnarmedAttack(atom/A)
/mob/living/silicon/ai/ai_actual_track(mob/living/target)
/mob/living/silicon/ai/ai_alerts()
/mob/living/silicon/ai/ai_call_shuttle()
/mob/living/silicon/ai/ai_camera_list(var/camera)
/mob/living/silicon/ai/ai_cancel_call()
/mob/living/silicon/ai/ai_hologram_change()
/mob/living/silicon/ai/ai_network_change()
/mob/living/silicon/ai/ai_roster()
/mob/living/silicon/ai/ai_statuschange()
/mob/living/silicon/ai/announcement()
/mob/living/silicon/ai/attack_ai(var/mob/user as mob)
/mob/living/silicon/ai/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/silicon/ai/attack_slime(mob/living/simple_animal/slime/user)
/mob/living/silicon/ai/blackout()
/mob/living/silicon/ai/blob_act()
/mob/living/silicon/ai/botcall()
/mob/living/silicon/ai/break_air_alarms()
/mob/living/silicon/ai/break_fire_alarms()
/mob/living/silicon/ai/bullet_act(var/obj/item/projectile/Proj)
/mob/living/silicon/ai/call_bot(var/turf/waypoint)
/mob/living/silicon/ai/canPlaceTransformer()
/mob/living/silicon/ai/canUseTopic()
/mob/living/silicon/ai/canUseTopic(atom/movable/M, be_close = 0)
/mob/living/silicon/ai/cancelAlarm(var/class, area/A as area, obj/origin)
/mob/living/silicon/ai/cancel_camera()
/mob/living/silicon/ai/check_eye(var/mob/user as mob)
/mob/living/silicon/ai/choose_modules()
/mob/living/silicon/ai/cmd_send_pdamesg(mob/user as mob)
/mob/living/silicon/ai/cmd_show_message_log(mob/user as mob)
/mob/living/silicon/ai/compose_job(atom/movable/speaker, message_langs, raw_message, radio_freq)
/mob/living/silicon/ai/compose_track_href(atom/movable/speaker, namepart)
/mob/living/silicon/ai/control_integrated_radio()
/mob/living/silicon/ai/corereturn()
/mob/living/silicon/ai/death(gibbed)
/mob/living/silicon/ai/disable_rcd()
/mob/living/silicon/ai/disablelockdown()
/mob/living/silicon/ai/emp_act(severity)
/mob/living/silicon/ai/ex_act(severity, target)
/mob/living/silicon/ai/examine(mob/user)
/mob/living/silicon/ai/fireproof_core()
/mob/living/silicon/ai/get_camera_list()
/mob/living/silicon/ai/get_message_mode(message)
/mob/living/silicon/ai/handle_inherent_channels(message, message_mode)
/mob/living/silicon/ai/holopad_talk(var/message)
/mob/living/silicon/ai/light_cameras()
/mob/living/silicon/ai/lockdown()
/mob/living/silicon/ai/mech_takeover()
/mob/living/silicon/ai/mind_initialize()
/mob/living/silicon/ai/overload_machine(obj/machinery/M as obj in world)
/mob/living/silicon/ai/override_machine(obj/machinery/M as obj in world)
/mob/living/silicon/ai/place_transformer()
/mob/living/silicon/ai/proc/holopad_talk(var/message)
/mob/living/silicon/ai/radio(message, message_mode, list/spans)
/mob/living/silicon/ai/reactivate_camera(obj/machinery/camera/C as obj in cameranet.cameras)
/mob/living/silicon/ai/reset_view(atom/A)
/mob/living/silicon/ai/restrained()
/mob/living/silicon/ai/say(var/message)
/mob/living/silicon/ai/set_automatic_say_channel()
/mob/living/silicon/ai/set_syndie_radio()
/mob/living/silicon/ai/set_waypoint(var/atom/A)
/mob/living/silicon/ai/show_laws(var/everyone = 0)
/mob/living/silicon/ai/show_laws_verb()
/mob/living/silicon/ai/switchCamera(var/obj/machinery/camera/C)
/mob/living/silicon/ai/toggle_camera_light()
/mob/living/silicon/ai/trackable_mobs()
/mob/living/silicon/ai/transfer_ai(var/interaction, var/mob/user, var/mob/living/silicon/ai/AI, var/obj/item/device/aicard/card)
/mob/living/silicon/ai/triggerAlarm(var/class, area/A, var/O, var/obj/alarmsource)
/mob/living/silicon/ai/update_canmove()
/mob/living/silicon/ai/updatehealth()
/mob/living/silicon/ai/upgrade_camera(obj/machinery/camera/C as obj in cameranet.cameras)
/mob/living/silicon/ai/upgrade_turrets()
/mob/living/silicon/ai/verb/ai_camera_track(var/target_name in trackable_mobs())
/mob/living/silicon/ai/verb/announcement_help()
/mob/living/silicon/ai/verb/cmd_toggle_pda_receiver()
/mob/living/silicon/ai/verb/cmd_toggle_pda_silent()
/mob/living/silicon/ai/verb/cmd_use_chatroom()
/mob/living/silicon/ai/verb/pick_icon()
/mob/living/silicon/ai/verb/suicide()
/mob/living/silicon/ai/verb/toggle_acceleration()
/mob/living/silicon/ai/verb/toggle_anchor()
/mob/living/silicon/ai/view_core()
/mob/living/silicon/apply_damage(var/damage = 0,var/damagetype = "brute", var/def_zone = null, var/blocked = 0)
/mob/living/silicon/apply_effect(var/effect = 0,var/effecttype = "stun", var/blocked = 0)
/mob/living/silicon/assess_threat()
/mob/living/silicon/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/silicon/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/silicon/attack_hand(mob/living/carbon/human/M)
/mob/living/silicon/attack_hulk(mob/living/carbon/human/user)
/mob/living/silicon/attack_larva(mob/living/carbon/alien/larva/L)
/mob/living/silicon/attack_paw(mob/living/user)
/mob/living/silicon/binarycheck()
/mob/living/silicon/bullet_act(var/obj/item/projectile/Proj)
/mob/living/silicon/can_inject(var/mob/user, var/error_msg)
/mob/living/silicon/cancelAlarm()
/mob/living/silicon/check_eye_prot()
/mob/living/silicon/checklaws()
/mob/living/silicon/clear_inherent_laws()
/mob/living/silicon/clear_ion_laws()
/mob/living/silicon/clear_supplied_laws()
/mob/living/silicon/clear_zeroth_law(var/force)
/mob/living/silicon/contents_explosion(severity, target)
/mob/living/silicon/damage_mob(var/brute = 0, var/fire = 0, var/tox = 0)
/mob/living/silicon/drop_item()
/mob/living/silicon/emote(var/act,var/m_type=1,var/message = null)
/mob/living/silicon/emp_act(severity)
/mob/living/silicon/get_message_mode(message)
/mob/living/silicon/get_spans()
/mob/living/silicon/gib(var/animation = 0)
/mob/living/silicon/grabbedby(mob/living/user)
/mob/living/silicon/handle_inherent_channels(message, message_mode)
/mob/living/silicon/laws_sanity_check()
/mob/living/silicon/lingcheck()
/mob/living/silicon/make_laws()
/mob/living/silicon/pai
/mob/living/silicon/pai/CheckDNA(mob/living/carbon/M, mob/living/silicon/pai/P)
/mob/living/silicon/pai/Life()
/mob/living/silicon/pai/Login()
/mob/living/silicon/pai/New(var/obj/item/device/paicard)
/mob/living/silicon/pai/Stat()
/mob/living/silicon/pai/Topic(href, href_list)
/mob/living/silicon/pai/UnarmedAttack(var/atom/A)
/mob/living/silicon/pai/binarycheck()
/mob/living/silicon/pai/blob_act()
/mob/living/silicon/pai/cancel_camera()
/mob/living/silicon/pai/chatroom()
/mob/living/silicon/pai/check_eye(var/mob/user as mob)
/mob/living/silicon/pai/death(gibbed)
/mob/living/silicon/pai/directives()
/mob/living/silicon/pai/downloadSoftware()
/mob/living/silicon/pai/emp_act(severity)
/mob/living/silicon/pai/ex_act(severity, target)
/mob/living/silicon/pai/examine()
/mob/living/silicon/pai/facialRecognition()
/mob/living/silicon/pai/hackloop()
/mob/living/silicon/pai/make_laws()
/mob/living/silicon/pai/medicalAnalysis()
/mob/living/silicon/pai/mind_initialize()
/mob/living/silicon/pai/on_forcemove(var/atom/newloc)
/mob/living/silicon/pai/pdamessage()
/mob/living/silicon/pai/restrained()
/mob/living/silicon/pai/say(var/msg)
/mob/living/silicon/pai/softwareAtmo()
/mob/living/silicon/pai/softwareCamera()
/mob/living/silicon/pai/softwareDoor()
/mob/living/silicon/pai/softwareManifest()
/mob/living/silicon/pai/softwareMedicalRecord()
/mob/living/silicon/pai/softwareMenu()
/mob/living/silicon/pai/softwareSecurityRecord()
/mob/living/silicon/pai/softwareSignal()
/mob/living/silicon/pai/softwareTranslator()
/mob/living/silicon/pai/switchCamera(var/obj/machinery/camera/C)
/mob/living/silicon/pai/updatehealth()
/mob/living/silicon/pai/verb/paiInterface()
/mob/living/silicon/pai/verb/suicide()
/mob/living/silicon/put_in_hand_check()
/mob/living/silicon/queueAlarm(var/message, var/type, var/incoming = 1)
/mob/living/silicon/radio(message, message_mode, list/spans)
/mob/living/silicon/remove_med_sec_hud()
/mob/living/silicon/robot
/mob/living/silicon/robot/AltClickOn(var/atom/A)
/mob/living/silicon/robot/ClickOn(var/atom/A, var/params)
/mob/living/silicon/robot/CtrlClickOn(var/atom/A)
/mob/living/silicon/robot/CtrlShiftClickOn(var/atom/A)
/mob/living/silicon/robot/Destroy()
/mob/living/silicon/robot/IsVocal()
/mob/living/silicon/robot/Life()
/mob/living/silicon/robot/Login()
/mob/living/silicon/robot/MiddleClickOn(var/atom/A)
/mob/living/silicon/robot/Move()
/mob/living/silicon/robot/Move(a, b, flag)
/mob/living/silicon/robot/New(loc)
/mob/living/silicon/robot/Process_Spacemove(var/movement_dir = 0)
/mob/living/silicon/robot/RangedAttack(atom/A)
/mob/living/silicon/robot/ResetSecurityCodes()
/mob/living/silicon/robot/SetEmagged(var/new_state)
/mob/living/silicon/robot/SetLockdown(var/state = 1)
/mob/living/silicon/robot/ShiftClickOn(var/atom/A)
/mob/living/silicon/robot/Stat()
/mob/living/silicon/robot/Topic(href, href_list)
/mob/living/silicon/robot/UnarmedAttack(atom/A)
/mob/living/silicon/robot/UnlinkSelf()
/mob/living/silicon/robot/activate_module(var/obj/item/O)
/mob/living/silicon/robot/activated(obj/item/O)
/mob/living/silicon/robot/allowed(mob/M)
/mob/living/silicon/robot/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/silicon/robot/attack_hand(mob/living/carbon/human/user)
/mob/living/silicon/robot/attack_slime(mob/living/simple_animal/slime/M as mob)
/mob/living/silicon/robot/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/mob/living/silicon/robot/blob_act()
/mob/living/silicon/robot/bullet_act(var/obj/item/projectile/Proj)
/mob/living/silicon/robot/canUseTopic(atom/movable/M, be_close = 0)
/mob/living/silicon/robot/cancelAlarm(var/class, area/A as area, obj/origin)
/mob/living/silicon/robot/check_access(obj/item/weapon/card/id/I)
/mob/living/silicon/robot/clamp_values()
/mob/living/silicon/robot/cycle_modules()
/mob/living/silicon/robot/death(gibbed)
/mob/living/silicon/robot/deconstruct()
/mob/living/silicon/robot/deselect_module(var/module)
/mob/living/silicon/robot/dust(var/animation = 1)
/mob/living/silicon/robot/dust_animation(var/animate)
/mob/living/silicon/robot/emag_act(mob/user as mob)
/mob/living/silicon/robot/ex_act(severity, target)
/mob/living/silicon/robot/examine(mob/user)
/mob/living/silicon/robot/fire_act()
/mob/living/silicon/robot/get_active_hand()
/mob/living/silicon/robot/get_selected_module()
/mob/living/silicon/robot/gib(var/animation = 1)
/mob/living/silicon/robot/gib_animation(var/animate)
/mob/living/silicon/robot/handle_fire()
/mob/living/silicon/robot/handle_hud_icons()
/mob/living/silicon/robot/handle_hud_icons_health()
/mob/living/silicon/robot/handle_regular_hud_updates()
/mob/living/silicon/robot/handle_regular_status_updates()
/mob/living/silicon/robot/handle_status_effects()
/mob/living/silicon/robot/hotkey_help()
/mob/living/silicon/robot/installed_modules()
/mob/living/silicon/robot/lawsync()
/mob/living/silicon/robot/mind_initialize()
/mob/living/silicon/robot/mode()
/mob/living/silicon/robot/module_active(var/module)
/mob/living/silicon/robot/module_selected(var/module)
/mob/living/silicon/robot/movement_delay()
/mob/living/silicon/robot/ninjadrain_act(var/obj/item/clothing/suit/space/space_ninja/S, var/mob/living/carbon/human/H, var/obj/item/clothing/gloves/space_ninja/G)
/mob/living/silicon/robot/notify_ai(var/notifytype, var/oldname, var/newname)
/mob/living/silicon/robot/pick_module()
/mob/living/silicon/robot/radio_menu()
/mob/living/silicon/robot/regenerate_icons()
/mob/living/silicon/robot/restrained()
/mob/living/silicon/robot/robot_alerts()
/mob/living/silicon/robot/select_module(var/module)
/mob/living/silicon/robot/self_destruct()
/mob/living/silicon/robot/show_laws(var/everyone = 0)
/mob/living/silicon/robot/spawn_dust()
/mob/living/silicon/robot/spawn_gibs()
/mob/living/silicon/robot/swap_hand()
/mob/living/silicon/robot/syndicate
/mob/living/silicon/robot/syndicate/New(loc)
/mob/living/silicon/robot/toggle_module(var/module)
/mob/living/silicon/robot/transform_animation(animation_length)
/mob/living/silicon/robot/triggerAlarm(var/class, area/A, var/O, var/obj/alarmsource)
/mob/living/silicon/robot/uneq_active()
/mob/living/silicon/robot/uneq_all()
/mob/living/silicon/robot/uneq_module(obj/item/O)
/mob/living/silicon/robot/update_canmove()
/mob/living/silicon/robot/update_cell()
/mob/living/silicon/robot/update_fire()
/mob/living/silicon/robot/update_hotkey_mode()
/mob/living/silicon/robot/update_icons()
/mob/living/silicon/robot/update_items()
/mob/living/silicon/robot/update_normal_mode()
/mob/living/silicon/robot/update_sight()
/mob/living/silicon/robot/updatename()
/mob/living/silicon/robot/use_power()
/mob/living/silicon/robot/verb/cmd_robot_alerts()
/mob/living/silicon/robot/verb/cmd_show_laws()
/mob/living/silicon/robot/verb/cmd_toggle_module(module as num)
/mob/living/silicon/robot/verb/cmd_unequip_module()
/mob/living/silicon/robot/verb/outputlaws()
/mob/living/silicon/robot/verb/set_automatic_say_channel()
/mob/living/silicon/robot/verb/suicide()
/mob/living/silicon/robot/verb/unlock_own_cover()
/mob/living/silicon/say(var/message)
/mob/living/silicon/sensor_mode()
/mob/living/silicon/setEarDamage()
/mob/living/silicon/set_autosay()
/mob/living/silicon/set_zeroth_law(var/law, var/law_borg)
/mob/living/silicon/show_laws()
/mob/living/silicon/spawn_dust()
/mob/living/silicon/spawn_gibs()
/mob/living/silicon/statelaws()
/mob/living/silicon/stripPanelEquip(obj/item/what, mob/who, slot)
/mob/living/silicon/triggerAlarm()
/mob/living/simple_animal
/mob/living/simple_animal/CanAttack(var/atom/the_target)
/mob/living/simple_animal/ExtinguishMob()
/mob/living/simple_animal/IgniteMob()
/mob/living/simple_animal/Life()
/mob/living/simple_animal/Login()
/mob/living/simple_animal/New()
/mob/living/simple_animal/Stat()
/mob/living/simple_animal/adjustFireLoss(var/amount)
/mob/living/simple_animal/adjustStaminaLoss(var/amount)
/mob/living/simple_animal/ascendant_shadowling
/mob/living/simple_animal/ascendant_shadowling/Process_Spacemove(var/movement_dir = 0)
/mob/living/simple_animal/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/simple_animal/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/simple_animal/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/simple_animal/attack_larva(mob/living/carbon/alien/larva/L as mob)
/mob/living/simple_animal/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/simple_animal/attack_slime(mob/living/simple_animal/slime/M as mob)
/mob/living/simple_animal/attack_threshold_check(var/damage)
/mob/living/simple_animal/attackby(var/obj/item/O as obj, var/mob/living/user as mob, params)
/mob/living/simple_animal/attacked_by(var/obj/item/I, var/mob/living/user)
/mob/living/simple_animal/blob_act()
/mob/living/simple_animal/bullet_act(var/obj/item/projectile/Proj)
/mob/living/simple_animal/butterfly
/mob/living/simple_animal/butterfly/New()
/mob/living/simple_animal/chick
/mob/living/simple_animal/chick/Life()
/mob/living/simple_animal/chick/New()
/mob/living/simple_animal/chicken
/mob/living/simple_animal/chicken/Life()
/mob/living/simple_animal/chicken/New()
/mob/living/simple_animal/chicken/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/mob/living/simple_animal/chicken/death(gibbed)
/mob/living/simple_animal/chicken/rabbit
/mob/living/simple_animal/chicken/rabbit/space
/mob/living/simple_animal/construct
/mob/living/simple_animal/construct/New()
/mob/living/simple_animal/construct/armored
/mob/living/simple_animal/construct/armored/bullet_act(var/obj/item/projectile/P)
/mob/living/simple_animal/construct/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/simple_animal/construct/builder
/mob/living/simple_animal/construct/bullet_act(var/obj/item/projectile/Proj)
/mob/living/simple_animal/construct/death()
/mob/living/simple_animal/construct/examine(mob/user)
/mob/living/simple_animal/construct/harvester
/mob/living/simple_animal/construct/harvester/Process_Spacemove(var/movement_dir = 0)
/mob/living/simple_animal/construct/mind_initialize()
/mob/living/simple_animal/construct/narsie_act()
/mob/living/simple_animal/construct/wraith
/mob/living/simple_animal/cow
/mob/living/simple_animal/cow/Life()
/mob/living/simple_animal/cow/New()
/mob/living/simple_animal/cow/attack_hand(mob/living/carbon/M as mob)
/mob/living/simple_animal/cow/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/mob/living/simple_animal/crab
/mob/living/simple_animal/crab/Coffee
/mob/living/simple_animal/crab/Life()
/mob/living/simple_animal/death(gibbed)
/mob/living/simple_animal/drone
/mob/living/simple_animal/drone/Destroy()
/mob/living/simple_animal/drone/IsAdvancedToolUser()
/mob/living/simple_animal/drone/Login()
/mob/living/simple_animal/drone/MiddleClickOn(var/atom/A)
/mob/living/simple_animal/drone/New()
/mob/living/simple_animal/drone/UnarmedAttack(atom/A, proximity)
/mob/living/simple_animal/drone/activate_hand(var/selhand)
/mob/living/simple_animal/drone/alert_drones(msg, dead_can_hear = 0)
/mob/living/simple_animal/drone/apply_overlay(cache_index)
/mob/living/simple_animal/drone/assess_threat()
/mob/living/simple_animal/drone/attack_hand(mob/user)
/mob/living/simple_animal/drone/attackby(obj/item/I, mob/user)
/mob/living/simple_animal/drone/canUseTopic()
/mob/living/simple_animal/drone/can_equip(obj/item/I, slot)
/mob/living/simple_animal/drone/cancelAlarm(var/class, area/A as area, obj/origin)
/mob/living/simple_animal/drone/check_eye_prot()
/mob/living/simple_animal/drone/death(gibbed)
/mob/living/simple_animal/drone/drone_chat(msg)
/mob/living/simple_animal/drone/emp_act(severity)
/mob/living/simple_animal/drone/equip_to_slot(obj/item/I, slot)
/mob/living/simple_animal/drone/examine(mob/user)
/mob/living/simple_animal/drone/generateStaticOverlay()
/mob/living/simple_animal/drone/getItemPixelShiftY()
/mob/living/simple_animal/drone/get_item_by_slot(slot_id)
/mob/living/simple_animal/drone/gib()
/mob/living/simple_animal/drone/handle_inherent_channels(message, message_mode)
/mob/living/simple_animal/drone/handle_temperature_damage()
/mob/living/simple_animal/drone/lang_treat(atom/movable/speaker, message_langs, raw_message)
/mob/living/simple_animal/drone/pickVisualAppearence()
/mob/living/simple_animal/drone/remove_overlay(cache_index)
/mob/living/simple_animal/drone/say(var/message)
/mob/living/simple_animal/drone/stripPanelEquip(obj/item/what, mob/who, where)
/mob/living/simple_animal/drone/stripPanelUnequip(obj/item/what, mob/who, where)
/mob/living/simple_animal/drone/swap_hand()
/mob/living/simple_animal/drone/syndrone
/mob/living/simple_animal/drone/syndrone/Login()
/mob/living/simple_animal/drone/syndrone/New()
/mob/living/simple_animal/drone/triggerAlarm(var/class, area/A, var/O, var/obj/alarmsource)
/mob/living/simple_animal/drone/unEquip(obj/item/I, force)
/mob/living/simple_animal/drone/updateSeeStaticMobs()
/mob/living/simple_animal/drone/update_inv_hands()
/mob/living/simple_animal/drone/update_inv_head()
/mob/living/simple_animal/drone/update_inv_internal_storage()
/mob/living/simple_animal/drone/update_inv_l_hand()
/mob/living/simple_animal/drone/update_inv_r_hand()
/mob/living/simple_animal/drone/update_inv_wear_mask()
/mob/living/simple_animal/drone/verb/check_laws()
/mob/living/simple_animal/drone/verb/drone_ping()
/mob/living/simple_animal/drone/verb/quick_equip()
/mob/living/simple_animal/drone/verb/toggle_light()
/mob/living/simple_animal/drone/verb/toggle_statics()
/mob/living/simple_animal/emote(var/act, var/m_type=1, var/message = null)
/mob/living/simple_animal/ex_act(severity, target)
/mob/living/simple_animal/gib(var/animation = 0)
/mob/living/simple_animal/handle_automated_movement()
/mob/living/simple_animal/handle_automated_speech()
/mob/living/simple_animal/handle_disabilities()
/mob/living/simple_animal/handle_environment(datum/gas_mixture/environment)
/mob/living/simple_animal/handle_fire()
/mob/living/simple_animal/handle_regular_status_updates()
/mob/living/simple_animal/handle_status_effects()
/mob/living/simple_animal/handle_temperature_damage()
/mob/living/simple_animal/harvest(mob/living/user)
/mob/living/simple_animal/hostile
/mob/living/simple_animal/hostile/AICanContinue()
/mob/living/simple_animal/hostile/AIShouldSleep()
/mob/living/simple_animal/hostile/AIShouldWake()
/mob/living/simple_animal/hostile/Aggro()
/mob/living/simple_animal/hostile/AttackTarget()
/mob/living/simple_animal/hostile/AttackingTarget()
/mob/living/simple_animal/hostile/CanAttack(var/atom/the_target)
/mob/living/simple_animal/hostile/DestroySurroundings()
/mob/living/simple_animal/hostile/EscapeConfinement()
/mob/living/simple_animal/hostile/FindHidden()
/mob/living/simple_animal/hostile/FindTarget()
/mob/living/simple_animal/hostile/Found(var/atom/A)
/mob/living/simple_animal/hostile/GiveTarget(var/new_target)
/mob/living/simple_animal/hostile/Goto(var/target, var/delay, var/minimum_distance)
/mob/living/simple_animal/hostile/Life()
/mob/living/simple_animal/hostile/ListTargets()
/mob/living/simple_animal/hostile/LoseAggro()
/mob/living/simple_animal/hostile/LoseTarget()
/mob/living/simple_animal/hostile/LostTarget()
/mob/living/simple_animal/hostile/MoveToTarget()
/mob/living/simple_animal/hostile/OpenFire(var/the_target)
/mob/living/simple_animal/hostile/PickTarget(var/list/Targets)
/mob/living/simple_animal/hostile/RangedAttack(var/atom/A, var/params)
/mob/living/simple_animal/hostile/Shoot(var/target, var/start, var/user, var/bullet = 0)
/mob/living/simple_animal/hostile/UnarmedAttack(var/atom/A)
/mob/living/simple_animal/hostile/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/alien
/mob/living/simple_animal/hostile/alien/LayEggs()
/mob/living/simple_animal/hostile/alien/SpreadPlants()
/mob/living/simple_animal/hostile/alien/death(gibbed)
/mob/living/simple_animal/hostile/alien/drone
/mob/living/simple_animal/hostile/alien/drone/Life()
/mob/living/simple_animal/hostile/alien/handle_temperature_damage()
/mob/living/simple_animal/hostile/alien/queen
/mob/living/simple_animal/hostile/alien/queen/Life()
/mob/living/simple_animal/hostile/alien/queen/large
/mob/living/simple_animal/hostile/alien/sentinel
/mob/living/simple_animal/hostile/asteroid/
/mob/living/simple_animal/hostile/asteroid/Aggro()
/mob/living/simple_animal/hostile/asteroid/LoseAggro()
/mob/living/simple_animal/hostile/asteroid/basilisk
/mob/living/simple_animal/hostile/asteroid/basilisk/GiveTarget(var/new_target)
/mob/living/simple_animal/hostile/asteroid/basilisk/death(gibbed)
/mob/living/simple_animal/hostile/asteroid/basilisk/ex_act(severity, target)
/mob/living/simple_animal/hostile/asteroid/bullet_act(var/obj/item/projectile/P)
/mob/living/simple_animal/hostile/asteroid/death(gibbed)
/mob/living/simple_animal/hostile/asteroid/goldgrub
/mob/living/simple_animal/hostile/asteroid/goldgrub/AttackingTarget()
/mob/living/simple_animal/hostile/asteroid/goldgrub/Burrow()
/mob/living/simple_animal/hostile/asteroid/goldgrub/EatOre(var/atom/targeted_ore)
/mob/living/simple_animal/hostile/asteroid/goldgrub/GiveTarget(var/new_target)
/mob/living/simple_animal/hostile/asteroid/goldgrub/Reward()
/mob/living/simple_animal/hostile/asteroid/goldgrub/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/asteroid/goldgrub/bullet_act(var/obj/item/projectile/P)
/mob/living/simple_animal/hostile/asteroid/goldgrub/death(gibbed)
/mob/living/simple_animal/hostile/asteroid/goliath
/mob/living/simple_animal/hostile/asteroid/goliath/Aggro()
/mob/living/simple_animal/hostile/asteroid/goliath/Life()
/mob/living/simple_animal/hostile/asteroid/goliath/OpenFire()
/mob/living/simple_animal/hostile/asteroid/goliath/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/asteroid/goliath/death(gibbed)
/mob/living/simple_animal/hostile/asteroid/goliath/handle_preattack()
/mob/living/simple_animal/hostile/asteroid/goliath/revive()
/mob/living/simple_animal/hostile/asteroid/handle_temperature_damage()
/mob/living/simple_animal/hostile/asteroid/hitby(atom/movable/AM)
/mob/living/simple_animal/hostile/asteroid/hivelord
/mob/living/simple_animal/hostile/asteroid/hivelord/AttackingTarget()
/mob/living/simple_animal/hostile/asteroid/hivelord/OpenFire(var/the_target)
/mob/living/simple_animal/hostile/asteroid/hivelord/death(gibbed)
/mob/living/simple_animal/hostile/asteroid/hivelordbrood
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/New()
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/death()
/mob/living/simple_animal/hostile/bear
/mob/living/simple_animal/hostile/bear/FindTarget()
/mob/living/simple_animal/hostile/bear/Hudson
/mob/living/simple_animal/hostile/bear/LoseTarget()
/mob/living/simple_animal/hostile/bear/Move()
/mob/living/simple_animal/hostile/bear/Process_Spacemove(var/movement_dir = 0)
/mob/living/simple_animal/hostile/blob
/mob/living/simple_animal/hostile/blob/adjustcolors(var/a_color)
/mob/living/simple_animal/hostile/blob/blob_act()
/mob/living/simple_animal/hostile/blob/blobbernaut
/mob/living/simple_animal/hostile/blob/blobbernaut/blob_act()
/mob/living/simple_animal/hostile/blob/blobbernaut/death(gibbed)
/mob/living/simple_animal/hostile/blob/blobspore
/mob/living/simple_animal/hostile/blob/blobspore/CanPass(atom/movable/mover, turf/target, height=0)
/mob/living/simple_animal/hostile/blob/blobspore/Destroy()
/mob/living/simple_animal/hostile/blob/blobspore/Life()
/mob/living/simple_animal/hostile/blob/blobspore/New(loc, var/obj/effect/blob/factory/linked_node)
/mob/living/simple_animal/hostile/blob/blobspore/Zombify(var/mob/living/carbon/human/H)
/mob/living/simple_animal/hostile/blob/blobspore/adjustcolors(var/a_color)
/mob/living/simple_animal/hostile/blob/blobspore/death(gibbed)
/mob/living/simple_animal/hostile/blob/blobspore/fire_act(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/mob/living/simple_animal/hostile/blob/blobspore/update_icons()
/mob/living/simple_animal/hostile/carp
/mob/living/simple_animal/hostile/carp/AttackingTarget()
/mob/living/simple_animal/hostile/carp/FindTarget()
/mob/living/simple_animal/hostile/carp/Process_Spacemove(var/movement_dir = 0)
/mob/living/simple_animal/hostile/carp/eyeball
/mob/living/simple_animal/hostile/carp/eyeball/FindTarget()
/mob/living/simple_animal/hostile/carp/eyeball/death()
/mob/living/simple_animal/hostile/carp/holocarp
/mob/living/simple_animal/hostile/carp/holocarp/death()
/mob/living/simple_animal/hostile/carp/megacarp
/mob/living/simple_animal/hostile/carp/ranged
/mob/living/simple_animal/hostile/carp/ranged/New()
/mob/living/simple_animal/hostile/carp/ranged/chaos
/mob/living/simple_animal/hostile/carp/ranged/chaos/Shoot()
/mob/living/simple_animal/hostile/creature
/mob/living/simple_animal/hostile/death(gibbed)
/mob/living/simple_animal/hostile/faithless
/mob/living/simple_animal/hostile/faithless/AttackingTarget()
/mob/living/simple_animal/hostile/faithless/FindTarget()
/mob/living/simple_animal/hostile/faithless/Process_Spacemove(var/movement_dir = 0)
/mob/living/simple_animal/hostile/headcrab
/mob/living/simple_animal/hostile/headcrab/AttackingTarget()
/mob/living/simple_animal/hostile/headcrab/Infect(var/mob/living/carbon/human/victim)
/mob/living/simple_animal/hostile/hivebot
/mob/living/simple_animal/hostile/hivebot/death(gibbed)
/mob/living/simple_animal/hostile/hivebot/range
/mob/living/simple_animal/hostile/hivebot/rapid
/mob/living/simple_animal/hostile/hivebot/strong
/mob/living/simple_animal/hostile/killertomato
/mob/living/simple_animal/hostile/mimic
/mob/living/simple_animal/hostile/mimic/FindTarget()
/mob/living/simple_animal/hostile/mimic/copy
/mob/living/simple_animal/hostile/mimic/copy/AttackingTarget()
/mob/living/simple_animal/hostile/mimic/copy/ChangeOwner(var/mob/owner)
/mob/living/simple_animal/hostile/mimic/copy/CheckObject(var/obj/O)
/mob/living/simple_animal/hostile/mimic/copy/CopyObject(var/obj/O, var/mob/living/creator, var/destroy_original = 0)
/mob/living/simple_animal/hostile/mimic/copy/DestroySurroundings()
/mob/living/simple_animal/hostile/mimic/copy/Life()
/mob/living/simple_animal/hostile/mimic/copy/ListTargets()
/mob/living/simple_animal/hostile/mimic/copy/New(loc, var/obj/copy, var/mob/living/creator, var/destroy_original = 0)
/mob/living/simple_animal/hostile/mimic/copy/death()
/mob/living/simple_animal/hostile/mimic/copy/machine
/mob/living/simple_animal/hostile/mimic/copy/machine/CanAttack(var/atom/the_target)
/mob/living/simple_animal/hostile/mimic/copy/ranged
/mob/living/simple_animal/hostile/mimic/copy/ranged/CopyObject(var/obj/O, var/mob/living/creator, var/destroy_original = 0)
/mob/living/simple_animal/hostile/mimic/copy/ranged/New(loc, var/obj/copy, var/mob/living/creator, var/destroy_original = 0)
/mob/living/simple_animal/hostile/mimic/copy/ranged/OpenFire(var/the_target)
/mob/living/simple_animal/hostile/mimic/crate
/mob/living/simple_animal/hostile/mimic/crate/AttackingTarget()
/mob/living/simple_animal/hostile/mimic/crate/DestroySurroundings()
/mob/living/simple_animal/hostile/mimic/crate/FindTarget()
/mob/living/simple_animal/hostile/mimic/crate/ListTargets()
/mob/living/simple_animal/hostile/mimic/crate/LoseTarget()
/mob/living/simple_animal/hostile/mimic/crate/LostTarget()
/mob/living/simple_animal/hostile/mimic/crate/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/mimic/crate/death()
/mob/living/simple_animal/hostile/mimic/crate/initialize()
/mob/living/simple_animal/hostile/mimic/crate/trigger()
/mob/living/simple_animal/hostile/mimic/death()
/mob/living/simple_animal/hostile/mining_drone
/mob/living/simple_animal/hostile/mining_drone/AttackingTarget()
/mob/living/simple_animal/hostile/mining_drone/CollectOre()
/mob/living/simple_animal/hostile/mining_drone/DropOre()
/mob/living/simple_animal/hostile/mining_drone/New()
/mob/living/simple_animal/hostile/mining_drone/SetCollectBehavior()
/mob/living/simple_animal/hostile/mining_drone/SetOffenseBehavior()
/mob/living/simple_animal/hostile/mining_drone/adjustBruteLoss()
/mob/living/simple_animal/hostile/mining_drone/attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/hostile/mining_drone/attackby(obj/item/I as obj, mob/user as mob, params)
/mob/living/simple_animal/hostile/mining_drone/death()
/mob/living/simple_animal/hostile/mushroom
/mob/living/simple_animal/hostile/mushroom/Bruise()
/mob/living/simple_animal/hostile/mushroom/LevelUp(var/level_gain)
/mob/living/simple_animal/hostile/mushroom/Life()
/mob/living/simple_animal/hostile/mushroom/New()
/mob/living/simple_animal/hostile/mushroom/Recover()
/mob/living/simple_animal/hostile/mushroom/UpdateMushroomCap()
/mob/living/simple_animal/hostile/mushroom/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/mushroom/attack_animal(var/mob/living/L)
/mob/living/simple_animal/hostile/mushroom/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/simple_animal/hostile/mushroom/attackby(obj/item/I as obj, mob/user as mob, params)
/mob/living/simple_animal/hostile/mushroom/bullet_act()
/mob/living/simple_animal/hostile/mushroom/death(gibbed)
/mob/living/simple_animal/hostile/mushroom/examine(mob/user)
/mob/living/simple_animal/hostile/mushroom/harvest()
/mob/living/simple_animal/hostile/mushroom/hitby(atom/movable/AM)
/mob/living/simple_animal/hostile/mushroom/revive()
/mob/living/simple_animal/hostile/pirate
/mob/living/simple_animal/hostile/pirate/death()
/mob/living/simple_animal/hostile/pirate/ranged
/mob/living/simple_animal/hostile/poison
/mob/living/simple_animal/hostile/poison/AttackingTarget()
/mob/living/simple_animal/hostile/poison/bees
/mob/living/simple_animal/hostile/poison/bees/Life()
/mob/living/simple_animal/hostile/poison/bees/New()
/mob/living/simple_animal/hostile/poison/bees/Process_Spacemove(var/movement_dir = 0)
/mob/living/simple_animal/hostile/poison/bees/death(gibbed)
/mob/living/simple_animal/hostile/poison/bees/update_bees()
/mob/living/simple_animal/hostile/poison/giant_spider
/mob/living/simple_animal/hostile/poison/giant_spider/Life()
/mob/living/simple_animal/hostile/poison/giant_spider/handle_temperature_damage()
/mob/living/simple_animal/hostile/poison/giant_spider/hunter
/mob/living/simple_animal/hostile/poison/giant_spider/nurse
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/GiveUp(var/C)
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/Life()
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/verb/LayEggs()
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/verb/Wrap()
/mob/living/simple_animal/hostile/poison/giant_spider/verb/Web()
/mob/living/simple_animal/hostile/retaliate
/mob/living/simple_animal/hostile/retaliate/Found(var/atom/A)
/mob/living/simple_animal/hostile/retaliate/ListTargets()
/mob/living/simple_animal/hostile/retaliate/Retaliate()
/mob/living/simple_animal/hostile/retaliate/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/retaliate/bat
/mob/living/simple_animal/hostile/retaliate/clown
/mob/living/simple_animal/hostile/retaliate/clown/death(gibbed)
/mob/living/simple_animal/hostile/retaliate/clown/handle_temperature_damage()
/mob/living/simple_animal/hostile/retaliate/goat
/mob/living/simple_animal/hostile/retaliate/goat/Life()
/mob/living/simple_animal/hostile/retaliate/goat/Move()
/mob/living/simple_animal/hostile/retaliate/goat/New()
/mob/living/simple_animal/hostile/retaliate/goat/Retaliate()
/mob/living/simple_animal/hostile/retaliate/goat/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/mob/living/simple_animal/hostile/russian
/mob/living/simple_animal/hostile/russian/death(gibbed)
/mob/living/simple_animal/hostile/russian/ranged
/mob/living/simple_animal/hostile/russian/ranged/New()
/mob/living/simple_animal/hostile/statue
/mob/living/simple_animal/hostile/statue/AttackingTarget()
/mob/living/simple_animal/hostile/statue/CanAttack(var/atom/the_target)
/mob/living/simple_animal/hostile/statue/DestroySurroundings()
/mob/living/simple_animal/hostile/statue/Life()
/mob/living/simple_animal/hostile/statue/ListTargets()
/mob/living/simple_animal/hostile/statue/Move(var/turf/NewLoc)
/mob/living/simple_animal/hostile/statue/New(loc, var/mob/living/creator)
/mob/living/simple_animal/hostile/statue/can_be_seen(var/turf/destination)
/mob/living/simple_animal/hostile/statue/face_atom()
/mob/living/simple_animal/hostile/statue/gib(var/animation = 0)
/mob/living/simple_animal/hostile/statue/say()
/mob/living/simple_animal/hostile/syndicate
/mob/living/simple_animal/hostile/syndicate/death(gibbed)
/mob/living/simple_animal/hostile/syndicate/melee
/mob/living/simple_animal/hostile/syndicate/melee/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/mob/living/simple_animal/hostile/syndicate/melee/bullet_act(var/obj/item/projectile/Proj)
/mob/living/simple_animal/hostile/syndicate/melee/space
/mob/living/simple_animal/hostile/syndicate/melee/space/Process_Spacemove(var/movement_dir = 0)
/mob/living/simple_animal/hostile/syndicate/ranged
/mob/living/simple_animal/hostile/syndicate/ranged/space
/mob/living/simple_animal/hostile/syndicate/ranged/space/Process_Spacemove(var/movement_dir = 0)
/mob/living/simple_animal/hostile/tree
/mob/living/simple_animal/hostile/tree/AttackingTarget()
/mob/living/simple_animal/hostile/tree/FindTarget()
/mob/living/simple_animal/hostile/tree/death(gibbed)
/mob/living/simple_animal/hostile/tree/festivus
/mob/living/simple_animal/hostile/viscerator
/mob/living/simple_animal/hostile/viscerator/death(gibbed)
/mob/living/simple_animal/hostile/viscerator/flying
/mob/living/simple_animal/lizard
/mob/living/simple_animal/make_babies()
/mob/living/simple_animal/mind_initialize()
/mob/living/simple_animal/mouse
/mob/living/simple_animal/mouse/Crossed(AM as mob|obj)
/mob/living/simple_animal/mouse/New()
/mob/living/simple_animal/mouse/brown
/mob/living/simple_animal/mouse/brown/Tom
/mob/living/simple_animal/mouse/death(gibbed)
/mob/living/simple_animal/mouse/gray
/mob/living/simple_animal/mouse/splat()
/mob/living/simple_animal/mouse/white
/mob/living/simple_animal/movement_delay()
/mob/living/simple_animal/parrot
/mob/living/simple_animal/parrot/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/mob/living/simple_animal/parrot/Life()
/mob/living/simple_animal/parrot/New()
/mob/living/simple_animal/parrot/Poly
/mob/living/simple_animal/parrot/Poly/New()
/mob/living/simple_animal/parrot/Stat()
/mob/living/simple_animal/parrot/Topic(href, href_list)
/mob/living/simple_animal/parrot/attack_alien(mob/living/carbon/alien/M as mob)
/mob/living/simple_animal/parrot/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/simple_animal/parrot/attack_hand(mob/living/carbon/M as mob)
/mob/living/simple_animal/parrot/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/simple_animal/parrot/attackby(var/obj/item/O as obj, var/mob/living/user as mob, params)
/mob/living/simple_animal/parrot/bullet_act(var/obj/item/projectile/Proj)
/mob/living/simple_animal/parrot/death(gibbed)
/mob/living/simple_animal/parrot/drop_held_item(var/drop_gently = 1)
/mob/living/simple_animal/parrot/handle_automated_movement()
/mob/living/simple_animal/parrot/handle_automated_speech()
/mob/living/simple_animal/parrot/isStuck()
/mob/living/simple_animal/parrot/movement_delay()
/mob/living/simple_animal/parrot/perch_player()
/mob/living/simple_animal/parrot/radio(message, message_mode, list/spans)
/mob/living/simple_animal/parrot/search_for_item()
/mob/living/simple_animal/parrot/search_for_perch()
/mob/living/simple_animal/parrot/search_for_perch_and_item()
/mob/living/simple_animal/parrot/show_inv(mob/user)
/mob/living/simple_animal/parrot/steal_from_ground()
/mob/living/simple_animal/parrot/steal_from_mob()
/mob/living/simple_animal/parrot/toggle_mode()
/mob/living/simple_animal/parrot/verb/drop_held_item_player()
/mob/living/simple_animal/pet
/mob/living/simple_animal/pet/New()
/mob/living/simple_animal/pet/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/mob/living/simple_animal/pet/cat
/mob/living/simple_animal/pet/cat/Proc
/mob/living/simple_animal/pet/cat/Runtime
/mob/living/simple_animal/pet/cat/Runtime/Life()
/mob/living/simple_animal/pet/cat/kitten
/mob/living/simple_animal/pet/corgi
/mob/living/simple_animal/pet/corgi/Ian
/mob/living/simple_animal/pet/corgi/Ian/Life()
/mob/living/simple_animal/pet/corgi/Lisa
/mob/living/simple_animal/pet/corgi/Lisa/Life()
/mob/living/simple_animal/pet/corgi/Lisa/Topic(href, href_list)
/mob/living/simple_animal/pet/corgi/New()
/mob/living/simple_animal/pet/corgi/Topic(href, href_list)
/mob/living/simple_animal/pet/corgi/attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/pet/corgi/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/mob/living/simple_animal/pet/corgi/death(gibbed)
/mob/living/simple_animal/pet/corgi/mind_initialize()
/mob/living/simple_animal/pet/corgi/place_on_head(obj/item/item_to_add, var/mob/user as mob)
/mob/living/simple_animal/pet/corgi/puppy
/mob/living/simple_animal/pet/corgi/puppy/Topic(href, href_list)
/mob/living/simple_animal/pet/corgi/regenerate_icons()
/mob/living/simple_animal/pet/corgi/revive()
/mob/living/simple_animal/pet/corgi/sac_act(var/obj/effect/rune/R, victim)
/mob/living/simple_animal/pet/corgi/show_inv(mob/user as mob)
/mob/living/simple_animal/pet/corgi/wuv(change, mob/M)
/mob/living/simple_animal/pet/death(gibbed)
/mob/living/simple_animal/pet/fox
/mob/living/simple_animal/pet/fox/Renault
/mob/living/simple_animal/pet/pug
/mob/living/simple_animal/pet/pug/Life()
/mob/living/simple_animal/pet/regenerate_icons()
/mob/living/simple_animal/pet/revive()
/mob/living/simple_animal/revenant
/mob/living/simple_animal/revenant/ClickOn(var/atom/A, var/params)
/mob/living/simple_animal/revenant/Life()
/mob/living/simple_animal/revenant/New()
/mob/living/simple_animal/revenant/Stat()
/mob/living/simple_animal/revenant/attackby(obj/item/W, mob/living/user, params)
/mob/living/simple_animal/revenant/castcheck(var/essence_cost)
/mob/living/simple_animal/revenant/change_essence_amount(var/essence_amt, var/silent = 0, var/source = null)
/mob/living/simple_animal/revenant/death()
/mob/living/simple_animal/revenant/ex_act(severity, target)
/mob/living/simple_animal/revenant/giveSpells()
/mob/living/simple_animal/revenant/reveal(var/time, var/stun)
/mob/living/simple_animal/revenant/say(message)
/mob/living/simple_animal/revive()
/mob/living/simple_animal/say_quote(input)
/mob/living/simple_animal/shade
/mob/living/simple_animal/shade/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/mob/living/simple_animal/shade/death()
/mob/living/simple_animal/shade/mind_initialize()
/mob/living/simple_animal/slaughter
/mob/living/simple_animal/slaughter/death()
/mob/living/simple_animal/slaughter/phasein(var/obj/effect/decal/cleanable/B)
/mob/living/simple_animal/slaughter/phaseout(var/obj/effect/decal/cleanable/B)
/mob/living/simple_animal/slime
/mob/living/simple_animal/slime/AIprocess()
/mob/living/simple_animal/slime/CanFeedon(var/mob/living/M)
/mob/living/simple_animal/slime/Feedon(var/mob/living/M)
/mob/living/simple_animal/slime/Feedstop()
/mob/living/simple_animal/slime/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, spans)
/mob/living/simple_animal/slime/Life()
/mob/living/simple_animal/slime/MouseDrop(var/atom/movable/A as mob|obj)
/mob/living/simple_animal/slime/New()
/mob/living/simple_animal/slime/ObjBump(obj/O)
/mob/living/simple_animal/slime/Process_Spacemove(var/movement_dir = 0)
/mob/living/simple_animal/slime/RestrainedClickOn(var/atom/A)
/mob/living/simple_animal/slime/Stat()
/mob/living/simple_animal/slime/UnarmedAttack(var/atom/A)
/mob/living/simple_animal/slime/UpdateFeed(var/mob/M)
/mob/living/simple_animal/slime/add_nutrition(var/nutrition_to_add = 0, var/lastnut = 0)
/mob/living/simple_animal/slime/adjustFireLoss(amount)
/mob/living/simple_animal/slime/adjust_body_temperature(current, loc_temp, boost)
/mob/living/simple_animal/slime/apply_water()
/mob/living/simple_animal/slime/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/simple_animal/slime/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/simple_animal/slime/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/simple_animal/slime/attack_hulk(mob/living/carbon/human/user)
/mob/living/simple_animal/slime/attack_larva(mob/living/carbon/alien/larva/L as mob)
/mob/living/simple_animal/slime/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/simple_animal/slime/attack_slime(mob/living/simple_animal/slime/M as mob)
/mob/living/simple_animal/slime/attack_ui(slot)
/mob/living/simple_animal/slime/attackby(obj/item/W, mob/living/user, params)
/mob/living/simple_animal/slime/bullet_act(var/obj/item/projectile/Proj)
/mob/living/simple_animal/slime/death(gibbed)
/mob/living/simple_animal/slime/discipline_slime(mob/user)
/mob/living/simple_animal/slime/emote(var/act)
/mob/living/simple_animal/slime/emp_act(severity)
/mob/living/simple_animal/slime/examine(mob/user)
/mob/living/simple_animal/slime/getTrail()
/mob/living/simple_animal/slime/get_grow_nutrition()
/mob/living/simple_animal/slime/get_hunger_nutrition()
/mob/living/simple_animal/slime/get_max_nutrition()
/mob/living/simple_animal/slime/get_starve_nutrition()
/mob/living/simple_animal/slime/gib()
/mob/living/simple_animal/slime/handle_automated_movement()
/mob/living/simple_animal/slime/handle_automated_speech()
/mob/living/simple_animal/slime/handle_environment(datum/gas_mixture/environment)
/mob/living/simple_animal/slime/handle_mood()
/mob/living/simple_animal/slime/handle_nutrition()
/mob/living/simple_animal/slime/handle_regular_status_updates()
/mob/living/simple_animal/slime/handle_speech()
/mob/living/simple_animal/slime/handle_targets()
/mob/living/simple_animal/slime/mind_initialize()
/mob/living/simple_animal/slime/movement_delay()
/mob/living/simple_animal/slime/mutation_table(var/colour)
/mob/living/simple_animal/slime/pet
/mob/living/simple_animal/slime/regenerate_icons()
/mob/living/simple_animal/slime/show_inv(mob/user)
/mob/living/simple_animal/slime/start_pulling(var/atom/movable/AM)
/mob/living/simple_animal/slime/unEquip(obj/item/W as obj)
/mob/living/simple_animal/slime/verb/Evolve()
/mob/living/simple_animal/slime/verb/Feed()
/mob/living/simple_animal/slime/verb/Reproduce()
/mob/living/simple_animal/slime/will_hunt(var/hunger = -1)
/mob/living/simple_animal/stripPanelEquip(obj/item/what, mob/who, where, child_override)
/mob/living/simple_animal/stripPanelUnequip(obj/item/what, mob/who, where, child_override)
/mob/living/simple_animal/update_canmove()
/mob/living/simple_animal/update_fire()
/mob/living/simple_animal/update_transform()
/mob/living/simple_animal/updatehealth()
/mob/living/simple_animal/verb/suicide()
/mob/living/singularity_act()
/mob/living/singularity_pull(S)
/mob/living/spawn_dust()
/mob/living/spawn_gibs()
/mob/living/spreadFire(var/mob/living/L)
/mob/living/stripPanelEquip(obj/item/what, mob/who, where)
/mob/living/stripPanelUnequip(obj/item/what, mob/who, where)
/mob/living/take_organ_damage(var/brute, var/burn)
/mob/living/take_overall_damage(var/brute, var/burn)
/mob/living/treat_message(message)
/mob/living/update_action_buttons()
/mob/living/update_damage_overlays()
/mob/living/update_fire()
/mob/living/update_gravity(has_gravity)
/mob/living/update_pipe_vision(var/atom/new_loc = null)
/mob/living/update_pulling()
/mob/living/update_sight()
/mob/living/updatehealth()
/mob/living/verb/ghost()
/mob/living/verb/pulled(atom/movable/AM as mob|obj in oview(1))
/mob/living/verb/resist()
/mob/living/verb/succumb(var/whispered as null)
/mob/make_changeling()
/mob/mind_initialize()
/mob/mob_has_gravity(turf/T)
/mob/mob_negates_gravity()
/mob/movement_delay()
/mob/new_player
/mob/new_player/AIize()
/mob/new_player/AnnounceArrival(var/mob/living/carbon/human/character, var/rank)
/mob/new_player/AttemptLateSpawn(rank)
/mob/new_player/ClickOn()
/mob/new_player/IsJobAvailable(rank)
/mob/new_player/LateChoices()
/mob/new_player/Login()
/mob/new_player/Logout()
/mob/new_player/Move()
/mob/new_player/New()
/mob/new_player/Stat()
/mob/new_player/Topic(href, href_list[])
/mob/new_player/ViewManifest()
/mob/new_player/close_spawn_windows()
/mob/new_player/create_character()
/mob/new_player/handle_player_polling()
/mob/new_player/handle_privacy_poll()
/mob/new_player/log_text_poll_reply(var/pollid = -1, var/replytext = "")
/mob/new_player/new_player_panel()
/mob/new_player/poll_player(var/pollid = -1)
/mob/new_player/privacy_poll()
/mob/new_player/vote_on_numval_poll(var/pollid = -1, var/optionid = -1, var/rating = null)
/mob/new_player/vote_on_poll(var/pollid = -1, var/optionid = -1, var/multichoice = 0)
/mob/on_forcemove(var/atom/newloc)
/mob/pipe_eject(var/direction)
/mob/playsound_local(var/turf/turf_source, soundin, vol as num, vary, frequency, falloff, surround = 1)
/mob/prepare_huds()
/mob/proc/equip_to_slot_or_del(obj/item/W as obj, slot)
/mob/proc/sac_act(var/obj/effect/rune/R, var/mob/victim as mob)
/mob/put_in_active_hand(var/obj/item/W)
/mob/put_in_any_hand_if_possible(obj/item/W as obj, qdel_on_fail = 0, disable_warning = 1, redraw_mob = 1)
/mob/put_in_hand_check(var/obj/item/W)
/mob/put_in_hands(var/obj/item/W)
/mob/put_in_inactive_hand(var/obj/item/W)
/mob/put_in_l_hand(var/obj/item/W)
/mob/put_in_r_hand(var/obj/item/W)
/mob/reagent_check(var/datum/reagent/R)
/mob/regenerate_icons()
/mob/reload_huds()
/mob/remove_changeling_powers(var/keep_free_powers=0)
/mob/remove_from_mob(var/obj/O)
/mob/rename_self(var/role, var/allow_numbers=0)
/mob/reset_view(atom/A)
/mob/restrained()
/mob/ret_grab(obj/effect/list_container/mobl/L as obj, flag)
/mob/sac_act(var/obj/effect/rune/R, var/mob/victim as mob)
/mob/safe_animal(var/MP)
/mob/sandbox_panel()
/mob/say_dead(var/message)
/mob/see(message)
/mob/setEarDamage()
/mob/set_machine(var/obj/O)
/mob/show_inv(mob/user)
/mob/show_message(msg, type, alt, alt_type)
/mob/show_viewers(message)
/mob/slip(var/s_amount, var/w_amount, var/obj/O, var/lube)
/mob/spellremove(var/mob/M as mob)
/mob/start_pulling(var/atom/movable/AM)
/mob/stopLobbySound()
/mob/store_memory(msg as message, popup, sane = 1)
/mob/stripPanelEquip(obj/item/what, mob/who)
/mob/stripPanelUnequip(obj/item/what, mob/who)
/mob/swap_hand()
/mob/sync_mind()
/mob/throw_alert(category, id, severity, obj/new_master)
/mob/throw_item(atom/target)
/mob/unEquip(obj/item/I, force)
/mob/unset_machine()
/mob/update_Login_details()
/mob/update_action_buttons()
/mob/update_canmove()
/mob/update_gravity()
/mob/update_hair()
/mob/update_hotkey_mode()
/mob/update_hud()
/mob/update_icons()
/mob/update_interface()
/mob/update_inv_back()
/mob/update_inv_belt()
/mob/update_inv_ears()
/mob/update_inv_glasses()
/mob/update_inv_gloves()
/mob/update_inv_handcuffed()
/mob/update_inv_head()
/mob/update_inv_l_hand()
/mob/update_inv_legcuffed()
/mob/update_inv_pockets()
/mob/update_inv_r_hand()
/mob/update_inv_s_store()
/mob/update_inv_shoes()
/mob/update_inv_w_uniform()
/mob/update_inv_wear_id()
/mob/update_inv_wear_mask()
/mob/update_inv_wear_suit()
/mob/update_normal_mode()
/mob/update_transform()
/mob/verb/a_intent_change(input as text)
/mob/verb/abandon_mob()
/mob/verb/add_memory(msg as message)
/mob/verb/button_pressed_F12()
/mob/verb/cancel_camera()
/mob/verb/eastface()
/mob/verb/examinate(atom/A as mob|obj|turf in view())
/mob/verb/me_verb(message as text)
/mob/verb/memory()
/mob/verb/mode()
/mob/verb/northface()
/mob/verb/observe()
/mob/verb/pointed(atom/A as mob|obj|turf in view())
/mob/verb/pray(msg as text)
/mob/verb/say_verb(message as text)
/mob/verb/skincmd(data as text)
/mob/verb/southface()
/mob/verb/stop_pulling()
/mob/verb/vote()
/mob/verb/westface()
/mob/verb/whisper(message as text)
/mob/visible_message(var/message, var/self_message, var/blind_message)
/moveElement(list/L, fromIndex, toIndex)
/moveRange(list/L, fromIndex, toIndex, len=1)
/n_Interpreter
/n_Interpreter/Add(a, b)
/n_Interpreter/AlertAdmins()
/n_Interpreter/AssignVariable(name, node/expression/value, scope/S=null)
/n_Interpreter/CallProc(name, params[]=null)
/n_Interpreter/CreateGlobalScope()
/n_Interpreter/CreateScope(node/BlockDefinition/B)
/n_Interpreter/Divide(a, b)
/n_Interpreter/Eval(node/expression/exp)
/n_Interpreter/EvalOperator(node/expression/operator/exp)
/n_Interpreter/GC()
/n_Interpreter/GetCleanVar(name, compare)
/n_Interpreter/GetFunction(name)
/n_Interpreter/GetVar(name)
/n_Interpreter/GetVariable(name)
/n_Interpreter/GetVariableScope(name)
/n_Interpreter/HandleError(runtimeError/e)
/n_Interpreter/IsVariableAccessible(name)
/n_Interpreter/Iterate(node/BlockDefinition/block, count)
/n_Interpreter/Load(node/BlockDefinition/GlobalBlock/program)
/n_Interpreter/LogicalXor(a, b)		return (a||b) && !(a&&b)
/n_Interpreter/Modulo(a, b)
/n_Interpreter/Multiply(a, b)
/n_Interpreter/New(node/BlockDefinition/GlobalBlock/program=null)
/n_Interpreter/Power(a, b)
/n_Interpreter/ProcExists(name)
/n_Interpreter/RaiseError(runtimeError/e)
/n_Interpreter/Run()
/n_Interpreter/RunBlock(node/BlockDefinition/Block, scope/scope = null)
/n_Interpreter/RunFunction(node/statement/FunctionCall/stmt)
/n_Interpreter/RunIf(node/statement/IfStatement/stmt)
/n_Interpreter/RunWhile(node/statement/WhileLoop/stmt)
/n_Interpreter/SetProc(name, path, object=null, list/params=null)
/n_Interpreter/SetVar(name, value)
/n_Interpreter/Subtract(a, b)
/n_Interpreter/TCS_Interpreter
/n_Interpreter/TCS_Interpreter/GC()
/n_Interpreter/TCS_Interpreter/HandleError(runtimeError/e)
/n_Interpreter/VarExists(name)
/n_Interpreter/proc/EvalOperator(node/expression/operator/exp)
/n_Interpreter/var
/n_Interpreter/var/datum/container
/n_Interpreter/var/node
/n_Interpreter/var/node/BlockDefinition/program
/n_Interpreter/var/node/statement/FunctionDefinition/curFunction
/n_Interpreter/var/returnVal
/n_Interpreter/var/scope
/n_Interpreter/var/scope/curScope
/n_Interpreter/var/scope/globalScope
/n_Interpreter/var/stack
/n_Keyword
/n_Keyword/New(inline=0)
/n_Keyword/Parse(n_Parser/parser)
/n_Keyword/nS_Keyword
/n_Keyword/nS_Keyword/New(inline=0)
/n_Keyword/nS_Keyword/kwBreak
/n_Keyword/nS_Keyword/kwBreak/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwContinue
/n_Keyword/nS_Keyword/kwContinue/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwDef
/n_Keyword/nS_Keyword/kwDef/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwElse
/n_Keyword/nS_Keyword/kwElse/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwElseIf
/n_Keyword/nS_Keyword/kwElseIf/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwIf
/n_Keyword/nS_Keyword/kwIf/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwReturn
/n_Keyword/nS_Keyword/kwReturn/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwWhile
/n_Keyword/nS_Keyword/kwWhile/Parse(n_Parser/nS_Parser/parser)
/n_Parser
/n_Parser/NextToken()
/n_Parser/Parse()
/n_Parser/nS_Parser
/n_Parser/nS_Parser/AddBlock(node/BlockDefinition/B)
/n_Parser/nS_Parser/CheckToken(val, type, err=1, skip=1)
/n_Parser/nS_Parser/EndBlock()
/n_Parser/nS_Parser/EndOfExpression(end[])
/n_Parser/nS_Parser/GetBinaryOperator(O)
/n_Parser/nS_Parser/GetExpression(token/T)
/n_Parser/nS_Parser/GetOperator(O, type=/node/expression/operator, L[])
/n_Parser/nS_Parser/GetUnaryOperator(O)
/n_Parser/nS_Parser/New(tokens[], n_scriptOptions/options)
/n_Parser/nS_Parser/Parse()
/n_Parser/nS_Parser/ParseAssignment()
/n_Parser/nS_Parser/ParseExpression(list/end=list(/token/end), list/ErrChars=list("", "}"), check_functions = 0)
/n_Parser/nS_Parser/ParseFunctionExpression()
/n_Parser/nS_Parser/ParseFunctionStatement()
/n_Parser/nS_Parser/ParseParamExpression(var/check_functions = 0)
/n_Parser/nS_Parser/ParseParenExpression()
/n_Parser/nS_Parser/Precedence(node/expression/operator/top, node/expression/operator/input)
/n_Parser/nS_Parser/Reduce(stack/opr, stack/val)
/n_Parser/nS_Parser/var
/n_Parser/var
/n_Parser/var/list
/n_Parser/var/node/BlockDefinition
/n_Parser/var/node/BlockDefinition/curBlock
/n_Parser/var/stack
/n_Parser/var/token
/n_Parser/var/token/curToken
/n_Scanner
/n_Scanner/LoadCode(c)
/n_Scanner/LoadCodeFromFile(f)
/n_Scanner/Scan()
/n_Scanner/nS_Scanner
/n_Scanner/nS_Scanner/New(code, n_scriptOptions/nS_Options/options)
/n_Scanner/nS_Scanner/ReadComment()
/n_Scanner/nS_Scanner/ReadNumber()
/n_Scanner/nS_Scanner/ReadString(start)
/n_Scanner/nS_Scanner/ReadSymbol()
/n_Scanner/nS_Scanner/ReadWord()
/n_Scanner/nS_Scanner/Scan()
/n_Scanner/nS_Scanner/var
/n_Scanner/nS_Scanner/var/list
/n_Scanner/nS_Scanner/var/n_scriptOptions/nS_Options/options
/n_Scanner/var
/n_Scanner/var/code
/n_Scanner/var/list
/n_abs(var/num)
/n_acos(var/num)
/n_asin(var/num)
/n_ceil(var/num)
/n_clamp(var/num, var/min=-1, var/max=1)
/n_cos(var/num)
/n_delay(var/time)
/n_explode(var/string, var/separator = "")
/n_floor(var/num)
/n_implode(var/list/li, var/separator)
/n_inrange(var/num, var/min=-1, var/max=1)
/n_list()
/n_listadd()
/n_listcopy(var/list/L, var/start, var/end)
/n_listcut(var/list/L, var/start, var/end)
/n_listinsert(var/list/L, var/index, var/element)
/n_listpos(var/list/L, var/pos, var/value)
/n_listremove()
/n_listswap(var/list/L, var/firstindex, var/secondindex)
/n_log(var/num)
/n_lower(var/string)
/n_max()
/n_min()
/n_num2str(var/num)
/n_pick()
/n_prob(var/chance)
/n_proper(var/string)
/n_rand(var/low, var/high)
/n_randseed(var/seed)
/n_repeat(var/string, var/amount)
/n_replace(text, find, replacement)
/n_reverse(var/string)
/n_round(var/num)
/n_scriptOptions
/n_scriptOptions/CanStartID(char)
/n_scriptOptions/IsDigit(char)
/n_scriptOptions/IsValidID(id)
/n_scriptOptions/IsValidIDChar(char)
/n_scriptOptions/nS_Options
/n_scriptOptions/nS_Options/New()
/n_scriptOptions/nS_Options/var
/n_scriptOptions/nS_Options/var/list
/n_sin(var/num)
/n_smartfind(var/haystack, var/needle, var/start = 1, var/end = 0)
/n_smartlength(var/container)
/n_sqrt(var/num)
/n_str2num(var/string)
/n_substr(var/string, var/start = 1, var/end = 0)
/n_time()
/n_upper(var/string)
/near_camera(var/mob/living/M)
/near_range_camera(var/mob/M)
/new_station_name()
/next_list_item(var/item, var/list/L)
/ninjaspeak(n)
/node
/node/BlockDefinition
/node/BlockDefinition/FunctionBlock
/node/BlockDefinition/GlobalBlock
/node/BlockDefinition/GlobalBlock/New()
/node/BlockDefinition/SetVar(name, value)
/node/ToString()
/node/expression
/node/expression/FunctionCall
/node/expression/FunctionCall/var
/node/expression/FunctionCall/var/func_name
/node/expression/FunctionCall/var/node/identifier/object
/node/expression/operator
/node/expression/operator/New()
/node/expression/operator/ToString()
/node/expression/operator/binary
/node/expression/operator/binary/Add
/node/expression/operator/binary/BitwiseAnd
/node/expression/operator/binary/BitwiseOr
/node/expression/operator/binary/BitwiseXor
/node/expression/operator/binary/Divide
/node/expression/operator/binary/Equal
/node/expression/operator/binary/Greater
/node/expression/operator/binary/GreaterOrEqual
/node/expression/operator/binary/Less
/node/expression/operator/binary/LessOrEqual
/node/expression/operator/binary/LogicalAnd
/node/expression/operator/binary/LogicalOr
/node/expression/operator/binary/LogicalXor
/node/expression/operator/binary/Modulo
/node/expression/operator/binary/Multiply
/node/expression/operator/binary/NotEqual
/node/expression/operator/binary/Power
/node/expression/operator/binary/Subtract
/node/expression/operator/unary
/node/expression/operator/unary/BitwiseNot
/node/expression/operator/unary/LogicalNot
/node/expression/operator/unary/Minus
/node/expression/operator/unary/New(node/expression/exp)
/node/expression/operator/unary/group
/node/expression/operator/var
/node/expression/operator/var/node/expression/exp
/node/expression/operator/var/tmp
/node/expression/operator/var/tmp/name
/node/expression/operator/var/tmp/precedence
/node/expression/value/literal
/node/expression/value/literal/New(value)
/node/expression/value/literal/ToString()
/node/expression/value/literal/var
/node/expression/value/literal/var/value
/node/expression/value/reference
/node/expression/value/reference/New(value)
/node/expression/value/reference/ToString()
/node/expression/value/reference/var
/node/expression/value/reference/var/datum/value
/node/expression/value/variable
/node/expression/value/variable/New(ident)
/node/expression/value/variable/ToString()
/node/expression/value/variable/var
/node/expression/value/variable/var/node
/node/expression/value/variable/var/node/identifier
/node/expression/value/variable/var/node/identifier/id
/node/expression/value/variable/var/node/object
/node/identifier
/node/identifier/New(id)
/node/identifier/ToString()
/node/identifier/var
/node/identifier/var/id_name
/node/statement
/node/statement/BreakStatement
/node/statement/ContinueStatement
/node/statement/ForLoop
/node/statement/ForLoop/var
/node/statement/ForLoop/var/node
/node/statement/ForLoop/var/node/BlockDefinition/block
/node/statement/ForLoop/var/node/expression/increment
/node/statement/ForLoop/var/node/expression/init
/node/statement/ForLoop/var/node/expression/test
/node/statement/FunctionCall
/node/statement/FunctionCall/var
/node/statement/FunctionCall/var/func_name
/node/statement/FunctionCall/var/node/identifier/object
/node/statement/FunctionDefinition
/node/statement/FunctionDefinition/var
/node/statement/FunctionDefinition/var/func_name
/node/statement/FunctionDefinition/var/node/BlockDefinition/FunctionBlock/block
/node/statement/IfStatement
/node/statement/IfStatement/ElseIf
/node/statement/IfStatement/var
/node/statement/IfStatement/var/node
/node/statement/IfStatement/var/node/BlockDefinition
/node/statement/IfStatement/var/node/BlockDefinition/block
/node/statement/IfStatement/var/node/BlockDefinition/else_block
/node/statement/IfStatement/var/node/expression/cond
/node/statement/IfStatement/var/node/statement/else_if
/node/statement/ReturnStatement
/node/statement/ReturnStatement/var
/node/statement/ReturnStatement/var/node/expression/value
/node/statement/VariableAssignment
/node/statement/VariableAssignment/var
/node/statement/VariableAssignment/var/node
/node/statement/VariableAssignment/var/node/expression/value
/node/statement/VariableAssignment/var/node/identifier
/node/statement/VariableAssignment/var/node/identifier/object
/node/statement/VariableAssignment/var/node/identifier/var_name
/node/statement/VariableDeclaration
/node/statement/VariableDeclaration/var
/node/statement/VariableDeclaration/var/node
/node/statement/VariableDeclaration/var/node/identifier
/node/statement/VariableDeclaration/var/node/identifier/object
/node/statement/VariableDeclaration/var/node/identifier/var_name
/node/statement/WhileLoop
/node/statement/WhileLoop/var
/node/statement/WhileLoop/var/node
/node/statement/WhileLoop/var/node/BlockDefinition/block
/node/statement/WhileLoop/var/node/expression/cond
/non_zero_min(var/a, var/b)
/notes_add(var/ckey, var/note, var/lognote = 0)
/notes_remove(var/ckey, var/start_index, var/end_index)
/notice(msg)
/notify_ghosts(var/message, var/ghost_sound = null)
/nukelastname(var/mob/M as mob)
/num2hex(num, len=2)
/num2seclevel(var/num)
/obj
/obj/Deconstruct()
/obj/Del()
/obj/Destroy()
/obj/IsAssemblyHolder()
/obj/IsSpecialAssembly()
/obj/MouseDrop_T(mob/living/M, mob/living/user)
/obj/SkinCmd(mob/user as mob, var/data as text)
/obj/add_blood(mob/living/carbon/M)
/obj/allowed(mob/M)
/obj/alter_health()
/obj/assume_air(datum/gas_mixture/giver)
/obj/atmosanalyzer_scan(var/datum/gas_mixture/air_contents, mob/user, var/obj/target = src)
/obj/attack_hand(mob/living/user)
/obj/attack_tk(mob/user)
/obj/buckle_mob(mob/living/M)
/obj/check_access(obj/item/I)
/obj/check_access_list(var/list/L)
/obj/container_resist()
/obj/docking_port
/obj/docking_port/Destroy()
/obj/docking_port/getDockedId()
/obj/docking_port/get_docked()
/obj/docking_port/highlight(_color)
/obj/docking_port/mobile
/obj/docking_port/mobile/New()
/obj/docking_port/mobile/canDock(obj/docking_port/stationary/S)
/obj/docking_port/mobile/canMove()
/obj/docking_port/mobile/cancel()
/obj/docking_port/mobile/check()
/obj/docking_port/mobile/closePortDoors()
/obj/docking_port/mobile/dock(obj/docking_port/stationary/S1)
/obj/docking_port/mobile/emergency
/obj/docking_port/mobile/emergency/New()
/obj/docking_port/mobile/emergency/cancel(area/signalOrigin)
/obj/docking_port/mobile/emergency/check()
/obj/docking_port/mobile/emergency/request(obj/docking_port/stationary/S, coefficient=1, area/signalOrigin, reason, redAlert)
/obj/docking_port/mobile/emergency/timeLeft(divisor)
/obj/docking_port/mobile/enterTransit()
/obj/docking_port/mobile/findTransitDock()
/obj/docking_port/mobile/getStatusText()
/obj/docking_port/mobile/pod
/obj/docking_port/mobile/pod/New()
/obj/docking_port/mobile/pod/cancel()
/obj/docking_port/mobile/pod/request()
/obj/docking_port/mobile/request(obj/docking_port/stationary/S)
/obj/docking_port/mobile/roadkill(list/L, dir, x, y)
/obj/docking_port/mobile/setTimer(wait)
/obj/docking_port/mobile/supply
/obj/docking_port/mobile/supply/New()
/obj/docking_port/mobile/supply/buy()
/obj/docking_port/mobile/supply/canMove()
/obj/docking_port/mobile/supply/dock()
/obj/docking_port/mobile/supply/request(obj/docking_port/stationary/S)
/obj/docking_port/mobile/supply/sell()
/obj/docking_port/mobile/timeLeft(divisor)
/obj/docking_port/return_coords(_x, _y, _dir)
/obj/docking_port/return_ordered_turfs(_x, _y, _z, _dir, area/A)
/obj/docking_port/stationary
/obj/docking_port/stationary/New()
/obj/docking_port/stationary/get_docked()
/obj/docking_port/stationary/transit
/obj/docking_port/stationary/transit/New()
/obj/effect/Destroy()
/obj/effect/New()
/obj/effect/accelerated_particle
/obj/effect/accelerated_particle/Bump(atom/A)
/obj/effect/accelerated_particle/Bumped(atom/A)
/obj/effect/accelerated_particle/New(loc, dir = 2)
/obj/effect/accelerated_particle/ex_act(severity, target)
/obj/effect/accelerated_particle/move(var/lag)
/obj/effect/accelerated_particle/powerful
/obj/effect/accelerated_particle/strong
/obj/effect/accelerated_particle/toxmob(var/mob/living/M)
/obj/effect/accelerated_particle/weak
/obj/effect/acid
/obj/effect/acid/New(loc, targ)
/obj/effect/acid/tick()
/obj/effect/anomaly
/obj/effect/anomaly/New()
/obj/effect/anomaly/anomalyEffect()
/obj/effect/anomaly/anomalyNeutralize()
/obj/effect/anomaly/attackby(obj/item/I, mob/user, params)
/obj/effect/anomaly/bhole
/obj/effect/anomaly/bhole/New()
/obj/effect/anomaly/bhole/affect_coord(var/x, var/y, var/ex_act_force, var/pull_chance, var/turf_removal_chance)
/obj/effect/anomaly/bhole/anomalyEffect()
/obj/effect/anomaly/bhole/grav(var/r, var/ex_act_force, var/pull_chance, var/turf_removal_chance)
/obj/effect/anomaly/bluespace
/obj/effect/anomaly/bluespace/Bumped(atom/A)
/obj/effect/anomaly/bluespace/New()
/obj/effect/anomaly/flux
/obj/effect/anomaly/flux/New()
/obj/effect/anomaly/grav
/obj/effect/anomaly/grav/Bump(mob/A)
/obj/effect/anomaly/grav/Bumped(mob/A)
/obj/effect/anomaly/grav/New()
/obj/effect/anomaly/grav/anomalyEffect()
/obj/effect/anomaly/grav/gravShock(var/mob/A)
/obj/effect/anomaly/pyro
/obj/effect/anomaly/pyro/New()
/obj/effect/anomaly/pyro/anomalyEffect()
/obj/effect/attackby(obj/item/I, mob/user, params)
/obj/effect/beam
/obj/effect/beam/i_beam
/obj/effect/beam/i_beam/Bump()
/obj/effect/beam/i_beam/Bumped()
/obj/effect/beam/i_beam/Crossed(atom/movable/AM as mob|obj)
/obj/effect/beam/i_beam/Destroy()
/obj/effect/beam/i_beam/hit()
/obj/effect/beam/i_beam/process()
/obj/effect/beam/i_beam/vis_spread(v)
/obj/effect/blob
/obj/effect/blob/CanPass(atom/movable/mover, turf/target, height=0)
/obj/effect/blob/Crossed(var/mob/living/L)
/obj/effect/blob/Destroy()
/obj/effect/blob/Life()
/obj/effect/blob/New(loc)
/obj/effect/blob/Pulse(var/pulse = 0, var/origin_dir = 0, var/a_color)
/obj/effect/blob/PulseAnimation()
/obj/effect/blob/RegenHealth()
/obj/effect/blob/adjustcolors(var/a_color)
/obj/effect/blob/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/obj/effect/blob/attack_animal(mob/living/simple_animal/M as mob)
/obj/effect/blob/attackby(var/obj/item/weapon/W, var/mob/living/user, params)
/obj/effect/blob/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/blob/change_to(var/type)
/obj/effect/blob/core
/obj/effect/blob/core/Destroy()
/obj/effect/blob/core/Life()
/obj/effect/blob/core/New(loc, var/h = 200, var/client/new_overmind = null, var/new_rate = 2, offspring)
/obj/effect/blob/core/RegenHealth()
/obj/effect/blob/core/adjustcolors(var/a_color)
/obj/effect/blob/core/create_overmind(var/client/new_overmind, var/override_delay)
/obj/effect/blob/core/fire_act(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/blob/core/update_icon()
/obj/effect/blob/ex_act(severity, target)
/obj/effect/blob/expand(var/turf/T = null, var/prob = 1, var/a_color)
/obj/effect/blob/factory
/obj/effect/blob/factory/Destroy()
/obj/effect/blob/factory/PulseAnimation(var/activate = 0)
/obj/effect/blob/factory/run_action()
/obj/effect/blob/factory/update_icon()
/obj/effect/blob/fire_act(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/blob/node
/obj/effect/blob/node/Destroy()
/obj/effect/blob/node/Life()
/obj/effect/blob/node/New(loc, var/h = 100)
/obj/effect/blob/node/adjustcolors(var/a_color)
/obj/effect/blob/node/fire_act(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/blob/node/update_icon()
/obj/effect/blob/normal
/obj/effect/blob/normal/update_icon()
/obj/effect/blob/process()
/obj/effect/blob/resource
/obj/effect/blob/resource/PulseAnimation(var/activate = 0)
/obj/effect/blob/resource/run_action()
/obj/effect/blob/resource/update_icon()
/obj/effect/blob/run_action()
/obj/effect/blob/shield
/obj/effect/blob/shield/CanPass(atom/movable/mover, turf/target, height=0)
/obj/effect/blob/shield/fire_act(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/blob/shield/update_icon()
/obj/effect/blob/storage
/obj/effect/blob/storage/PulseAnimation(var/activate = 0)
/obj/effect/blob/storage/update_icon()
/obj/effect/blob/storage/update_max_blob_points(var/new_point_increase)
/obj/effect/blob/take_damage(damage, damage_type)
/obj/effect/bmode
/obj/effect/bmode/builddir
/obj/effect/bmode/builddir/Click()
/obj/effect/bmode/buildhelp
/obj/effect/bmode/buildhelp/Click()
/obj/effect/bmode/buildholder
/obj/effect/bmode/buildholder/Reset()
/obj/effect/bmode/buildmode
/obj/effect/bmode/buildmode/Click(location, control, params)
/obj/effect/bmode/buildquit
/obj/effect/bmode/buildquit/Click()
/obj/effect/bump_teleporter
/obj/effect/bump_teleporter/Bumped(atom/user)
/obj/effect/bump_teleporter/Destroy()
/obj/effect/bump_teleporter/New()
/obj/effect/chrono_field
/obj/effect/chrono_field/Destroy()
/obj/effect/chrono_field/Move()
/obj/effect/chrono_field/New(loc, var/mob/living/target, var/obj/item/weapon/gun/energy/chrono_gun/G)
/obj/effect/chrono_field/assume_air()
/obj/effect/chrono_field/blob_act()
/obj/effect/chrono_field/bullet_act(var/obj/item/projectile/P)
/obj/effect/chrono_field/ex_act()
/obj/effect/chrono_field/process()
/obj/effect/chrono_field/return_air()
/obj/effect/chrono_field/singularity_act()
/obj/effect/chrono_field/update_icon()
/obj/effect/chronos_cam
/obj/effect/chronos_cam/Destroy()
/obj/effect/chronos_cam/relaymove(var/mob/user, direction)
/obj/effect/cocoon/abductor
/obj/effect/cocoon/abductor/Copy(var/mob/living/carbon/human/H)
/obj/effect/cocoon/abductor/Start()
/obj/effect/cocoon/abductor/process()
/obj/effect/debugging/marker
/obj/effect/debugging/marker/Move()
/obj/effect/decal
/obj/effect/decal/chempuff
/obj/effect/decal/cleanable
/obj/effect/decal/cleanable/New()
/obj/effect/decal/cleanable/ash
/obj/effect/decal/cleanable/ash/New()
/obj/effect/decal/cleanable/attackby(obj/item/weapon/W as obj, mob/user as mob,)
/obj/effect/decal/cleanable/blood
/obj/effect/decal/cleanable/blood/CtrlClick(var/mob/user)
/obj/effect/decal/cleanable/blood/Destroy()
/obj/effect/decal/cleanable/blood/New()
/obj/effect/decal/cleanable/blood/drip
/obj/effect/decal/cleanable/blood/drip/New()
/obj/effect/decal/cleanable/blood/gibs
/obj/effect/decal/cleanable/blood/gibs/body
/obj/effect/decal/cleanable/blood/gibs/core
/obj/effect/decal/cleanable/blood/gibs/down
/obj/effect/decal/cleanable/blood/gibs/ex_act(severity, target)
/obj/effect/decal/cleanable/blood/gibs/limb
/obj/effect/decal/cleanable/blood/gibs/old
/obj/effect/decal/cleanable/blood/gibs/old/New()
/obj/effect/decal/cleanable/blood/gibs/pipe_eject(var/direction)
/obj/effect/decal/cleanable/blood/gibs/streak(var/list/directions)
/obj/effect/decal/cleanable/blood/gibs/up
/obj/effect/decal/cleanable/blood/old
/obj/effect/decal/cleanable/blood/old/New()
/obj/effect/decal/cleanable/blood/splatter
/obj/effect/decal/cleanable/blood/tracks
/obj/effect/decal/cleanable/blood/xtracks
/obj/effect/decal/cleanable/chem_pile
/obj/effect/decal/cleanable/cobweb
/obj/effect/decal/cleanable/cobweb2
/obj/effect/decal/cleanable/crayon
/obj/effect/decal/cleanable/crayon/New(location, main = "#FFFFFF", var/type = "rune1", var/e_name = "rune", var/rotation = 0)
/obj/effect/decal/cleanable/crayon/examine()
/obj/effect/decal/cleanable/crayon/gang
/obj/effect/decal/cleanable/crayon/gang/Destroy()
/obj/effect/decal/cleanable/crayon/gang/New(location, var/type, var/e_name = "gang tag", var/rotation = 0)
/obj/effect/decal/cleanable/dirt
/obj/effect/decal/cleanable/egg_smudge
/obj/effect/decal/cleanable/ex_act()
/obj/effect/decal/cleanable/fire_act()
/obj/effect/decal/cleanable/flour
/obj/effect/decal/cleanable/generic
/obj/effect/decal/cleanable/greenglow
/obj/effect/decal/cleanable/greenglow/New()
/obj/effect/decal/cleanable/greenglow/ex_act()
/obj/effect/decal/cleanable/molten_item
/obj/effect/decal/cleanable/oil
/obj/effect/decal/cleanable/oil/Destroy()
/obj/effect/decal/cleanable/oil/New()
/obj/effect/decal/cleanable/oil/streak
/obj/effect/decal/cleanable/pie_smudge
/obj/effect/decal/cleanable/robot_debris
/obj/effect/decal/cleanable/robot_debris/down
/obj/effect/decal/cleanable/robot_debris/ex_act()
/obj/effect/decal/cleanable/robot_debris/gib/pipe_eject(var/direction)
/obj/effect/decal/cleanable/robot_debris/limb
/obj/effect/decal/cleanable/robot_debris/old
/obj/effect/decal/cleanable/robot_debris/streak(var/list/directions)
/obj/effect/decal/cleanable/robot_debris/up
/obj/effect/decal/cleanable/tomato_smudge
/obj/effect/decal/cleanable/trail_holder
/obj/effect/decal/cleanable/trail_holder/CtrlClick(var/mob/user)
/obj/effect/decal/cleanable/vomit
/obj/effect/decal/cleanable/vomit/Destroy()
/obj/effect/decal/cleanable/vomit/old
/obj/effect/decal/cleanable/vomit/old/New()
/obj/effect/decal/cleanable/xenoblood
/obj/effect/decal/cleanable/xenoblood/Destroy()
/obj/effect/decal/cleanable/xenoblood/xgibs
/obj/effect/decal/cleanable/xenoblood/xgibs/body
/obj/effect/decal/cleanable/xenoblood/xgibs/core
/obj/effect/decal/cleanable/xenoblood/xgibs/down
/obj/effect/decal/cleanable/xenoblood/xgibs/ex_act()
/obj/effect/decal/cleanable/xenoblood/xgibs/limb
/obj/effect/decal/cleanable/xenoblood/xgibs/streak(var/list/directions)
/obj/effect/decal/cleanable/xenoblood/xgibs/up
/obj/effect/decal/cleanable/xenoblood/xsplatter
/obj/effect/decal/ex_act(severity, target)
/obj/effect/decal/point
/obj/effect/decal/remains
/obj/effect/decal/remains/human
/obj/effect/decal/remains/robot
/obj/effect/decal/remains/xeno
/obj/effect/decal/spraystill
/obj/effect/dummy/chameleon
/obj/effect/dummy/chameleon/Destroy()
/obj/effect/dummy/chameleon/activate(var/obj/O, var/mob/M, new_icon, new_iconstate, new_overlays, new_underlays, var/obj/item/device/chameleon/C)
/obj/effect/dummy/chameleon/attack_hand()
/obj/effect/dummy/chameleon/attackby()
/obj/effect/dummy/chameleon/bullet_act()
/obj/effect/dummy/chameleon/ex_act()
/obj/effect/dummy/chameleon/relaymove(var/mob/user, direction)
/obj/effect/dummy/slaughter
/obj/effect/dummy/slaughter/bullet_act(blah)
/obj/effect/dummy/slaughter/ex_act(blah)
/obj/effect/dummy/slaughter/relaymove(var/mob/user, direction)
/obj/effect/dummy/slaughter/singularity_act(blah)
/obj/effect/dummy/spell_jaunt
/obj/effect/dummy/spell_jaunt/Destroy()
/obj/effect/dummy/spell_jaunt/bullet_act(blah)
/obj/effect/dummy/spell_jaunt/ex_act(blah)
/obj/effect/dummy/spell_jaunt/relaymove(var/mob/user, direction)
/obj/effect/effect
/obj/effect/effect/Destroy()
/obj/effect/effect/bad_smoke
/obj/effect/effect/bad_smoke/CanPass(atom/movable/mover, turf/target, height=0)
/obj/effect/effect/bad_smoke/Crossed(mob/living/carbon/M as mob )
/obj/effect/effect/bad_smoke/Move()
/obj/effect/effect/bad_smoke/New()
/obj/effect/effect/chem_smoke
/obj/effect/effect/chem_smoke/Crossed(mob/living/carbon/M as mob )
/obj/effect/effect/chem_smoke/Move()
/obj/effect/effect/chem_smoke/New()
/obj/effect/effect/foam
/obj/effect/effect/foam/Crossed(var/atom/movable/AM)
/obj/effect/effect/foam/Destroy()
/obj/effect/effect/foam/New(loc)
/obj/effect/effect/foam/kill_foam()
/obj/effect/effect/foam/metal/Crossed(var/atom/movable/AM)
/obj/effect/effect/foam/metal/New(loc)
/obj/effect/effect/foam/metal/aluminium
/obj/effect/effect/foam/metal/iron
/obj/effect/effect/foam/metal/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/effect/foam/process()
/obj/effect/effect/foam/spread_foam()
/obj/effect/effect/foam/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/effect/freezing_smoke
/obj/effect/effect/freezing_smoke/Chilled(atom/A)
/obj/effect/effect/freezing_smoke/New(loc, var/amt, var/blast)
/obj/effect/effect/harmless_smoke
/obj/effect/effect/harmless_smoke/New()
/obj/effect/effect/ion_trails
/obj/effect/effect/sleep_smoke
/obj/effect/effect/sleep_smoke/Crossed(mob/living/carbon/M as mob )
/obj/effect/effect/sleep_smoke/Move()
/obj/effect/effect/sleep_smoke/New()
/obj/effect/effect/smoke
/obj/effect/effect/sparks
/obj/effect/effect/sparks/Destroy()
/obj/effect/effect/sparks/Move()
/obj/effect/effect/sparks/New()
/obj/effect/effect/sparks/electricity
/obj/effect/effect/steam
/obj/effect/effect/water
/obj/effect/effect/water/Bump(atom/A)
/obj/effect/effect/water/Move(turf/newloc)
/obj/effect/effect/water/New()
/obj/effect/energy_net
/obj/effect/energy_net/attack_alien(mob/living/user as mob)
/obj/effect/energy_net/attack_hulk(mob/living/carbon/human/user)
/obj/effect/energy_net/attack_paw(mob/user)
/obj/effect/energy_net/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/effect/energy_net/blob_act()
/obj/effect/energy_net/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/energy_net/ex_act(severity, target)
/obj/effect/energy_net/healthcheck()
/obj/effect/energy_net/hitby(AM as mob|obj)
/obj/effect/energy_net/process(var/mob/living/carbon/M as mob)
/obj/effect/expl_particles
/obj/effect/expl_particles/Move()
/obj/effect/expl_particles/New()
/obj/effect/explosion
/obj/effect/explosion/New()
/obj/effect/fake_attacker
/obj/effect/fake_attacker/Crossed(var/mob/M, somenumber)
/obj/effect/fake_attacker/New(loc,var/mob/living/carbon/T)
/obj/effect/fake_attacker/attack_loop()
/obj/effect/fake_attacker/attackby(var/obj/item/weapon/P as obj, mob/living/user as mob, params)
/obj/effect/fake_attacker/collapse()
/obj/effect/fake_attacker/fake_blood(var/mob/target)
/obj/effect/fake_attacker/proc/fake_blood(var/mob/target)
/obj/effect/fake_attacker/updateimage()
/obj/effect/forcefield
/obj/effect/forcefield/mime
/obj/effect/forcefield/mime/New()
/obj/effect/forcefield/mime/process()
/obj/effect/gateway
/obj/effect/gateway/Bumped(mob/M as mob|obj)
/obj/effect/gateway/Crossed(AM as mob|obj)
/obj/effect/gibspawner
/obj/effect/gibspawner/Gib(atom/location, var/list/viruses = list(), var/datum/dna/MobDNA = null)
/obj/effect/gibspawner/New(location, var/list/viruses, var/datum/dna/MobDNA)
/obj/effect/gibspawner/generic
/obj/effect/gibspawner/generic/New()
/obj/effect/gibspawner/human
/obj/effect/gibspawner/human/New()
/obj/effect/gibspawner/robot
/obj/effect/gibspawner/robot/New()
/obj/effect/gibspawner/xeno
/obj/effect/gibspawner/xeno/New()
/obj/effect/glowshroom
/obj/effect/glowshroom/CalcDir(turf/location = loc)
/obj/effect/glowshroom/CheckEndurance()
/obj/effect/glowshroom/New()
/obj/effect/glowshroom/Spread()
/obj/effect/glowshroom/acid_act(var/acidpwr, var/toxpwr, var/acid_volume)
/obj/effect/glowshroom/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/effect/glowshroom/ex_act(severity, target)
/obj/effect/glowshroom/single
/obj/effect/glowshroom/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/golemrune
/obj/effect/golemrune/New()
/obj/effect/golemrune/attack_hand(mob/living/user as mob)
/obj/effect/golemrune/process()
/obj/effect/goliath_tentacle/
/obj/effect/goliath_tentacle/New()
/obj/effect/goliath_tentacle/Trip()
/obj/effect/goliath_tentacle/original
/obj/effect/goliath_tentacle/original/New()
/obj/effect/hallucination
/obj/effect/hallucination/battle
/obj/effect/hallucination/battle/New(loc,var/mob/living/carbon/T)
/obj/effect/hallucination/bolts
/obj/effect/hallucination/bolts/New(loc,var/mob/living/carbon/T,var/door_number=-1)
/obj/effect/hallucination/delusion
/obj/effect/hallucination/delusion/New(loc,var/mob/living/carbon/T)
/obj/effect/hallucination/fake_flood
/obj/effect/hallucination/fake_flood/Destroy()
/obj/effect/hallucination/fake_flood/Expand()
/obj/effect/hallucination/fake_flood/New(loc,var/mob/living/carbon/T)
/obj/effect/hallucination/fake_flood/process()
/obj/effect/hallucination/fakeattacker/New(loc,var/mob/living/carbon/T)
/obj/effect/hallucination/message
/obj/effect/hallucination/message/New(loc,var/mob/living/carbon/T)
/obj/effect/hallucination/simple
/obj/effect/hallucination/simple/Destroy()
/obj/effect/hallucination/simple/GetImage()
/obj/effect/hallucination/simple/Moved(atom/OldLoc, Dir)
/obj/effect/hallucination/simple/New(loc,var/mob/living/carbon/T)
/obj/effect/hallucination/simple/Show(var/update=1)
/obj/effect/hallucination/simple/singularity
/obj/effect/hallucination/simple/singularity/Eat(atom/OldLoc, Dir)
/obj/effect/hallucination/simple/update_icon(var/new_state,var/new_icon,var/new_px=0,var/new_py=0)
/obj/effect/hallucination/simple/xeno
/obj/effect/hallucination/simple/xeno/New(loc,var/mob/living/carbon/T)
/obj/effect/hallucination/simple/xeno/throw_at(atom/target, range, speed)
/obj/effect/hallucination/simple/xeno/throw_impact(A)
/obj/effect/hallucination/singularity_scare
/obj/effect/hallucination/singularity_scare/New(loc,var/mob/living/carbon/T)
/obj/effect/hallucination/whispers
/obj/effect/hallucination/whispers/New(loc,var/mob/living/carbon/T)
/obj/effect/hallucination/xeno_attack
/obj/effect/hallucination/xeno_attack/New(loc,var/mob/living/carbon/T)
/obj/effect/hotspot
/obj/effect/hotspot/Crossed(mob/living/L)
/obj/effect/hotspot/Destroy()
/obj/effect/hotspot/DestroyTurf()
/obj/effect/hotspot/Kill()
/obj/effect/hotspot/New()
/obj/effect/hotspot/perform_exposure()
/obj/effect/hotspot/process()
/obj/effect/immovablerod
/obj/effect/immovablerod/Bump(atom/clong)
/obj/effect/immovablerod/Move()
/obj/effect/immovablerod/New(atom/start, atom/end)
/obj/effect/landmark
/obj/effect/landmark/Destroy()
/obj/effect/landmark/New()
/obj/effect/landmark/abductor
/obj/effect/landmark/abductor/agent
/obj/effect/landmark/abductor/console/New()
/obj/effect/landmark/abductor/scientist
/obj/effect/landmark/corpse
/obj/effect/landmark/corpse/AICorpse/createCorpse()
/obj/effect/landmark/corpse/bridgeofficer
/obj/effect/landmark/corpse/clown
/obj/effect/landmark/corpse/commander
/obj/effect/landmark/corpse/cook
/obj/effect/landmark/corpse/createCorpse()
/obj/effect/landmark/corpse/doctor
/obj/effect/landmark/corpse/engineer
/obj/effect/landmark/corpse/engineer/rig
/obj/effect/landmark/corpse/facehugCorpse/createCorpse()
/obj/effect/landmark/corpse/initialize()
/obj/effect/landmark/corpse/miner
/obj/effect/landmark/corpse/miner/rig
/obj/effect/landmark/corpse/scientist
/obj/effect/landmark/corpse/slimeCorpse
/obj/effect/landmark/corpse/slimeCorpse/createCorpse()
/obj/effect/landmark/corpse/syndicatecommando
/obj/effect/landmark/corpse/syndicatesoldier
/obj/effect/landmark/costume/New()
/obj/effect/landmark/costume/butler/New()
/obj/effect/landmark/costume/chicken/New()
/obj/effect/landmark/costume/commie/New()
/obj/effect/landmark/costume/cutewitch/New()
/obj/effect/landmark/costume/elpresidente/New()
/obj/effect/landmark/costume/fakewizard/New()
/obj/effect/landmark/costume/gladiator/New()
/obj/effect/landmark/costume/highlander/New()
/obj/effect/landmark/costume/holiday_priest/New()
/obj/effect/landmark/costume/imperium_monk/New()
/obj/effect/landmark/costume/madscientist/New()
/obj/effect/landmark/costume/maid/New()
/obj/effect/landmark/costume/marisawizard/fake/New()
/obj/effect/landmark/costume/nightowl/New()
/obj/effect/landmark/costume/nyangirl/New()
/obj/effect/landmark/costume/pirate/New()
/obj/effect/landmark/costume/plaguedoctor/New()
/obj/effect/landmark/costume/prig/New()
/obj/effect/landmark/costume/sexyclown/New()
/obj/effect/landmark/costume/sexymime/New()
/obj/effect/landmark/costume/thegriffin/New()
/obj/effect/landmark/costume/waiter/New()
/obj/effect/landmark/mobcorpse
/obj/effect/landmark/mobcorpse/New()
/obj/effect/landmark/mobcorpse/clown
/obj/effect/landmark/mobcorpse/createCorpse()
/obj/effect/landmark/mobcorpse/pirate
/obj/effect/landmark/mobcorpse/pirate/ranged
/obj/effect/landmark/mobcorpse/russian
/obj/effect/landmark/mobcorpse/russian/ranged
/obj/effect/landmark/mobcorpse/syndicatecommando
/obj/effect/landmark/mobcorpse/syndicatesoldier
/obj/effect/landmark/sc_bible_spawner
/obj/effect/landmark/sc_bible_spawner/New()
/obj/effect/landmark/start
/obj/effect/landmark/start/Destroy()
/obj/effect/landmark/start/New()
/obj/effect/landmark/start/depsec
/obj/effect/landmark/start/depsec/New()
/obj/effect/landmark/start/depsec/engineering
/obj/effect/landmark/start/depsec/medical
/obj/effect/landmark/start/depsec/science
/obj/effect/landmark/start/depsec/supply
/obj/effect/light_emitter
/obj/effect/list_container
/obj/effect/list_container/mobl
/obj/effect/manifest
/obj/effect/manifest/New()
/obj/effect/manifest/manifest()
/obj/effect/mark
/obj/effect/meatgrinder
/obj/effect/meatgrinder/Bumped(mob/M as mob|obj)
/obj/effect/meatgrinder/Crossed(AM as mob|obj)
/obj/effect/meatgrinder/New()
/obj/effect/meatgrinder/triggerrad1(mob)
/obj/effect/medical_holosign
/obj/effect/medical_holosign/New()
/obj/effect/meteor
/obj/effect/meteor/Bump(atom/A)
/obj/effect/meteor/Destroy()
/obj/effect/meteor/Move()
/obj/effect/meteor/New()
/obj/effect/meteor/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/effect/meteor/big
/obj/effect/meteor/big/meteor_effect()
/obj/effect/meteor/dust
/obj/effect/meteor/ex_act()
/obj/effect/meteor/flaming
/obj/effect/meteor/flaming/meteor_effect()
/obj/effect/meteor/get_hit()
/obj/effect/meteor/irradiated
/obj/effect/meteor/irradiated/meteor_effect()
/obj/effect/meteor/make_debris()
/obj/effect/meteor/meaty
/obj/effect/meteor/meaty/Bump(atom/A)
/obj/effect/meteor/meaty/make_debris()
/obj/effect/meteor/meaty/ram_turf(var/turf/T)
/obj/effect/meteor/meaty/xeno
/obj/effect/meteor/meaty/xeno/ram_turf(var/turf/T)
/obj/effect/meteor/medium
/obj/effect/meteor/medium/meteor_effect()
/obj/effect/meteor/meteor_effect(var/sound=1)
/obj/effect/meteor/pumpkin
/obj/effect/meteor/pumpkin/New()
/obj/effect/meteor/ram_turf(var/turf/T)
/obj/effect/meteor/tunguska
/obj/effect/meteor/tunguska/Bump()
/obj/effect/meteor/tunguska/meteor_effect()
/obj/effect/mine
/obj/effect/mine/Bumped(AM as mob|obj)
/obj/effect/mine/Crossed(AM as mob|obj)
/obj/effect/mine/explosive
/obj/effect/mine/explosive/mineEffect(mob/victim)
/obj/effect/mine/gas
/obj/effect/mine/gas/mineEffect(mob/victim)
/obj/effect/mine/gas/n2o
/obj/effect/mine/gas/plasma
/obj/effect/mine/kickmine
/obj/effect/mine/kickmine/mineEffect(mob/victim)
/obj/effect/mine/mineEffect(mob/victim)
/obj/effect/mine/sound
/obj/effect/mine/sound/bwoink
/obj/effect/mine/sound/mineEffect(mob/victim)
/obj/effect/mine/stun
/obj/effect/mine/stun/mineEffect(mob/victim)
/obj/effect/mine/triggermine(mob/victim)
/obj/effect/mist
/obj/effect/nanofrost_container
/obj/effect/nanofrost_container/Smoke()
/obj/effect/overlay
/obj/effect/overlay/beam
/obj/effect/overlay/beam/New()
/obj/effect/overlay/coconut
/obj/effect/overlay/holograph
/obj/effect/overlay/palmtree_l
/obj/effect/overlay/palmtree_r
/obj/effect/overlay/singularity_act()
/obj/effect/overlay/singularity_pull()
/obj/effect/payload_spawner/New(var/turf/newloc,var/type, var/numspawned as num)
/obj/effect/portal
/obj/effect/portal/Bumped(mob/M as mob|obj)
/obj/effect/portal/Destroy()
/obj/effect/portal/New(loc, turf/target, creator, lifespan=300)
/obj/effect/portal/attack_ghost(mob/user as mob)
/obj/effect/portal/teleport(atom/movable/M as mob|obj)
/obj/effect/portal/wormhole
/obj/effect/portal/wormhole/attack_hand(mob/user)
/obj/effect/portal/wormhole/attackby(obj/item/I, mob/user, params)
/obj/effect/portal/wormhole/jaunt_tunnel
/obj/effect/portal/wormhole/jaunt_tunnel/teleport(atom/movable/M)
/obj/effect/portal/wormhole/teleport(atom/movable/M)
/obj/effect/proc_holder
/obj/effect/proc_holder/alien
/obj/effect/proc_holder/alien/Click()
/obj/effect/proc_holder/alien/acid
/obj/effect/proc_holder/alien/acid/corrode(var/target,var/mob/living/carbon/alien/user = usr)
/obj/effect/proc_holder/alien/acid/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/acid/on_gain(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/cost_check(check_turf=0,var/mob/living/carbon/alien/user,var/silent = 0)
/obj/effect/proc_holder/alien/evolve
/obj/effect/proc_holder/alien/evolve/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/hide
/obj/effect/proc_holder/alien/hide/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/larva_evolve
/obj/effect/proc_holder/alien/larva_evolve/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/lay_egg
/obj/effect/proc_holder/alien/lay_egg/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/neurotoxin
/obj/effect/proc_holder/alien/neurotoxin/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/nightvisiontoggle
/obj/effect/proc_holder/alien/nightvisiontoggle/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/on_gain(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/plant
/obj/effect/proc_holder/alien/plant/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/regurgitate
/obj/effect/proc_holder/alien/regurgitate/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/resin
/obj/effect/proc_holder/alien/resin/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/transfer
/obj/effect/proc_holder/alien/transfer/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/alien/whisper
/obj/effect/proc_holder/alien/whisper/fire(var/mob/living/carbon/alien/user)
/obj/effect/proc_holder/changeling
/obj/effect/proc_holder/changeling/Click()
/obj/effect/proc_holder/changeling/absorbDNA
/obj/effect/proc_holder/changeling/absorbDNA/can_sting(var/mob/living/carbon/user)
/obj/effect/proc_holder/changeling/absorbDNA/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/adrenaline
/obj/effect/proc_holder/changeling/adrenaline/sting_action(var/mob/living/user)
/obj/effect/proc_holder/changeling/augmented_eyesight
/obj/effect/proc_holder/changeling/augmented_eyesight/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/can_be_used_by(var/mob/user)
/obj/effect/proc_holder/changeling/can_sting(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/digitalcamo
/obj/effect/proc_holder/changeling/digitalcamo/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/dissonant_shriek
/obj/effect/proc_holder/changeling/dissonant_shriek/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/evolution_menu
/obj/effect/proc_holder/changeling/evolution_menu/Click()
/obj/effect/proc_holder/changeling/evolution_menu/Topic(href, href_list)
/obj/effect/proc_holder/changeling/evolution_menu/create_menu(var/datum/changeling/changeling)
/obj/effect/proc_holder/changeling/fakedeath
/obj/effect/proc_holder/changeling/fakedeath/can_sting(var/mob/user)
/obj/effect/proc_holder/changeling/fakedeath/sting_action(var/mob/living/user)
/obj/effect/proc_holder/changeling/fleshmend
/obj/effect/proc_holder/changeling/fleshmend/sting_action(var/mob/living/user)
/obj/effect/proc_holder/changeling/glands
/obj/effect/proc_holder/changeling/glands/on_purchase(var/mob/user)
/obj/effect/proc_holder/changeling/headcrab
/obj/effect/proc_holder/changeling/headcrab/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/hivemind_comms
/obj/effect/proc_holder/changeling/hivemind_comms/on_purchase(var/mob/user)
/obj/effect/proc_holder/changeling/hivemind_download
/obj/effect/proc_holder/changeling/hivemind_download/can_sting(var/mob/living/carbon/user)
/obj/effect/proc_holder/changeling/hivemind_download/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/hivemind_upload
/obj/effect/proc_holder/changeling/hivemind_upload/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/humanform
/obj/effect/proc_holder/changeling/humanform/sting_action(var/mob/living/carbon/user)
/obj/effect/proc_holder/changeling/lesserform
/obj/effect/proc_holder/changeling/lesserform/sting_action(var/mob/living/carbon/human/user)
/obj/effect/proc_holder/changeling/mimicvoice
/obj/effect/proc_holder/changeling/mimicvoice/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/on_purchase(var/mob/user)
/obj/effect/proc_holder/changeling/panacea
/obj/effect/proc_holder/changeling/panacea/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/resonant_shriek
/obj/effect/proc_holder/changeling/resonant_shriek/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/revive
/obj/effect/proc_holder/changeling/revive/sting_action(var/mob/living/carbon/user)
/obj/effect/proc_holder/changeling/spiders
/obj/effect/proc_holder/changeling/spiders/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/sting
/obj/effect/proc_holder/changeling/sting/Click()
/obj/effect/proc_holder/changeling/sting/LSD
/obj/effect/proc_holder/changeling/sting/LSD/sting_action(var/mob/user, var/mob/living/carbon/target)
/obj/effect/proc_holder/changeling/sting/blind
/obj/effect/proc_holder/changeling/sting/blind/sting_action(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/sting/can_sting(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/sting/cryo
/obj/effect/proc_holder/changeling/sting/cryo/sting_action(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/sting/extract_dna
/obj/effect/proc_holder/changeling/sting/extract_dna/can_sting(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/sting/extract_dna/sting_action(var/mob/user, var/mob/living/carbon/human/target)
/obj/effect/proc_holder/changeling/sting/mute
/obj/effect/proc_holder/changeling/sting/mute/sting_action(var/mob/user, var/mob/living/carbon/target)
/obj/effect/proc_holder/changeling/sting/set_sting(var/mob/user)
/obj/effect/proc_holder/changeling/sting/sting_feedback(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/sting/transformation
/obj/effect/proc_holder/changeling/sting/transformation/Click()
/obj/effect/proc_holder/changeling/sting/transformation/can_sting(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/sting/transformation/sting_action(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/sting/unset_sting(var/mob/user)
/obj/effect/proc_holder/changeling/sting_action(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/sting_feedback(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/strained_muscles
/obj/effect/proc_holder/changeling/strained_muscles/sting_action(var/mob/living/carbon/user)
/obj/effect/proc_holder/changeling/suit
/obj/effect/proc_holder/changeling/suit/armor
/obj/effect/proc_holder/changeling/suit/organic_space_suit
/obj/effect/proc_holder/changeling/suit/sting_action(var/mob/living/carbon/human/user)
/obj/effect/proc_holder/changeling/suit/try_to_sting(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/take_chemical_cost(var/datum/changeling/changeling)
/obj/effect/proc_holder/changeling/transform
/obj/effect/proc_holder/changeling/transform/sting_action(var/mob/living/carbon/human/user)
/obj/effect/proc_holder/changeling/try_to_sting(var/mob/user, var/mob/target)
/obj/effect/proc_holder/changeling/weapon
/obj/effect/proc_holder/changeling/weapon/arm_blade
/obj/effect/proc_holder/changeling/weapon/shield
/obj/effect/proc_holder/changeling/weapon/shield/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/weapon/sting_action(var/mob/user)
/obj/effect/proc_holder/changeling/weapon/try_to_sting(var/mob/user, var/mob/target)
/obj/effect/proc_holder/spell
/obj/effect/proc_holder/spell/Click()
/obj/effect/proc_holder/spell/New()
/obj/effect/proc_holder/spell/adjust_var(mob/living/target = usr, type, amount)
/obj/effect/proc_holder/spell/after_cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf
/obj/effect/proc_holder/spell/aoe_turf/blindness
/obj/effect/proc_holder/spell/aoe_turf/blindness/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/choose_targets(mob/user = usr)
/obj/effect/proc_holder/spell/aoe_turf/conjure
/obj/effect/proc_holder/spell/aoe_turf/conjure/carp
/obj/effect/proc_holder/spell/aoe_turf/conjure/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/conjure/construct
/obj/effect/proc_holder/spell/aoe_turf/conjure/construct/lesser
/obj/effect/proc_holder/spell/aoe_turf/conjure/creature
/obj/effect/proc_holder/spell/aoe_turf/conjure/floor
/obj/effect/proc_holder/spell/aoe_turf/conjure/forcewall
/obj/effect/proc_holder/spell/aoe_turf/conjure/lesserforcewall
/obj/effect/proc_holder/spell/aoe_turf/conjure/mime_wall
/obj/effect/proc_holder/spell/aoe_turf/conjure/mime_wall/Click()
/obj/effect/proc_holder/spell/aoe_turf/conjure/presents
/obj/effect/proc_holder/spell/aoe_turf/conjure/soulstone
/obj/effect/proc_holder/spell/aoe_turf/conjure/summonEdSwarm
/obj/effect/proc_holder/spell/aoe_turf/conjure/wall
/obj/effect/proc_holder/spell/aoe_turf/conjure/wall/reinforced
/obj/effect/proc_holder/spell/aoe_turf/drain_thralls
/obj/effect/proc_holder/spell/aoe_turf/drain_thralls/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/flashfreeze
/obj/effect/proc_holder/spell/aoe_turf/flashfreeze/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/flicker_lights
/obj/effect/proc_holder/spell/aoe_turf/flicker_lights/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/glacial_blast
/obj/effect/proc_holder/spell/aoe_turf/glacial_blast/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/knock
/obj/effect/proc_holder/spell/aoe_turf/knock/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/repulse
/obj/effect/proc_holder/spell/aoe_turf/repulse/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/revenantDefile
/obj/effect/proc_holder/spell/aoe_turf/revenantDefile/cast(list/targets, var/mob/living/simple_animal/revenant/user = usr)
/obj/effect/proc_holder/spell/aoe_turf/revenant_light
/obj/effect/proc_holder/spell/aoe_turf/revenant_light/cast(list/targets, var/mob/living/simple_animal/revenant/user = usr)
/obj/effect/proc_holder/spell/aoe_turf/unearthly_screech
/obj/effect/proc_holder/spell/aoe_turf/unearthly_screech/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/veil
/obj/effect/proc_holder/spell/aoe_turf/veil/cast(list/targets)
/obj/effect/proc_holder/spell/before_cast(list/targets)
/obj/effect/proc_holder/spell/can_be_cast_by(mob/caster)
/obj/effect/proc_holder/spell/can_cast(mob/user = usr)
/obj/effect/proc_holder/spell/cast(list/targets)
/obj/effect/proc_holder/spell/cast_check(skipcharge = 0,mob/user = usr)
/obj/effect/proc_holder/spell/choose_targets(mob/user = usr)
/obj/effect/proc_holder/spell/critfail(list/targets)
/obj/effect/proc_holder/spell/dumbfire
/obj/effect/proc_holder/spell/dumbfire/cast(list/targets, mob/user = usr)
/obj/effect/proc_holder/spell/dumbfire/choose_targets(mob/user = usr)
/obj/effect/proc_holder/spell/dumbfire/fireball
/obj/effect/proc_holder/spell/invocation(mob/user = usr)
/obj/effect/proc_holder/spell/perform(list/targets, recharge = 1, mob/user = usr)
/obj/effect/proc_holder/spell/playMagSound()
/obj/effect/proc_holder/spell/revert_cast(mob/user = usr)
/obj/effect/proc_holder/spell/start_recharge()
/obj/effect/proc_holder/spell/targeted
/obj/effect/proc_holder/spell/targeted/annihilate
/obj/effect/proc_holder/spell/targeted/annihilate/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/area_teleport
/obj/effect/proc_holder/spell/targeted/area_teleport/before_cast(list/targets)
/obj/effect/proc_holder/spell/targeted/area_teleport/cast(list/targets,area/thearea)
/obj/effect/proc_holder/spell/targeted/area_teleport/invocation(area/chosenarea = null)
/obj/effect/proc_holder/spell/targeted/area_teleport/perform(list/targets, recharge = 1)
/obj/effect/proc_holder/spell/targeted/area_teleport/teleport
/obj/effect/proc_holder/spell/targeted/barnyardcurse
/obj/effect/proc_holder/spell/targeted/barnyardcurse/cast(list/targets, mob/user = usr)
/obj/effect/proc_holder/spell/targeted/blindness_smoke
/obj/effect/proc_holder/spell/targeted/blindness_smoke/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/charge
/obj/effect/proc_holder/spell/targeted/charge/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/choose_targets(mob/user = usr)
/obj/effect/proc_holder/spell/targeted/collective_mind
/obj/effect/proc_holder/spell/targeted/collective_mind/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/emplosion
/obj/effect/proc_holder/spell/targeted/emplosion/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/emplosion/disable_tech
/obj/effect/proc_holder/spell/targeted/enthrall
/obj/effect/proc_holder/spell/targeted/enthrall/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt/jaunt_disappear(var/atom/movable/overlay/animation, var/mob/living/target)
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt/jaunt_reappear(var/atom/movable/overlay/animation, var/mob/living/target)
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt/jaunt_steam(var/mobloc)
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt/shift
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt/shift/jaunt_disappear(var/atom/movable/overlay/animation, var/mob/living/target)
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt/shift/jaunt_reappear(var/atom/movable/overlay/animation, var/mob/living/target)
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt/shift/jaunt_steam(var/mobloc)
/obj/effect/proc_holder/spell/targeted/explosion
/obj/effect/proc_holder/spell/targeted/explosion/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/explosion/fireball
/obj/effect/proc_holder/spell/targeted/genetic
/obj/effect/proc_holder/spell/targeted/genetic/blind
/obj/effect/proc_holder/spell/targeted/genetic/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/genetic/mutate
/obj/effect/proc_holder/spell/targeted/glare
/obj/effect/proc_holder/spell/targeted/glare/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/hypnosis
/obj/effect/proc_holder/spell/targeted/hypnosis/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/inflict_handler
/obj/effect/proc_holder/spell/targeted/inflict_handler/blind
/obj/effect/proc_holder/spell/targeted/inflict_handler/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/inflict_handler/disintegrate
/obj/effect/proc_holder/spell/targeted/inflict_handler/fireball
/obj/effect/proc_holder/spell/targeted/inflict_handler/flesh_to_stone
/obj/effect/proc_holder/spell/targeted/inflict_handler/magic_missile
/obj/effect/proc_holder/spell/targeted/lichdom
/obj/effect/proc_holder/spell/targeted/lichdom/New()
/obj/effect/proc_holder/spell/targeted/lichdom/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/lightning
/obj/effect/proc_holder/spell/targeted/lightning/Bolt(mob/origin,mob/target,bolt_energy,mob/user = usr)
/obj/effect/proc_holder/spell/targeted/lightning/Click()
/obj/effect/proc_holder/spell/targeted/lightning/Discharge(mob/user = usr)
/obj/effect/proc_holder/spell/targeted/lightning/Reset(mob/user = usr)
/obj/effect/proc_holder/spell/targeted/lightning/StartChargeup(mob/user = usr)
/obj/effect/proc_holder/spell/targeted/lightning/cast(list/targets, mob/user = usr)
/obj/effect/proc_holder/spell/targeted/lightning/revert_cast(mob/user = usr)
/obj/effect/proc_holder/spell/targeted/los_check(mob/A,mob/B)
/obj/effect/proc_holder/spell/targeted/mime/speak
/obj/effect/proc_holder/spell/targeted/mime/speak/Click()
/obj/effect/proc_holder/spell/targeted/mime/speak/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/mind_transfer
/obj/effect/proc_holder/spell/targeted/mind_transfer/cast(list/targets,mob/user = usr, distanceoverride)
/obj/effect/proc_holder/spell/targeted/night_vision
/obj/effect/proc_holder/spell/targeted/night_vision/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/projectile
/obj/effect/proc_holder/spell/targeted/projectile/cast(list/targets, mob/user = usr)
/obj/effect/proc_holder/spell/targeted/projectile/magic_missile
/obj/effect/proc_holder/spell/targeted/projectile/magic_missile/lesser
/obj/effect/proc_holder/spell/targeted/revenant_harvest
/obj/effect/proc_holder/spell/targeted/revenant_harvest/cast(list/targets, var/mob/living/simple_animal/revenant/user = usr)
/obj/effect/proc_holder/spell/targeted/revenant_transmit
/obj/effect/proc_holder/spell/targeted/revenant_transmit/cast(list/targets, var/mob/living/simple_animal/revenant/user = usr)
/obj/effect/proc_holder/spell/targeted/shadow_walk
/obj/effect/proc_holder/spell/targeted/shadow_walk/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/shadowling_hivemind
/obj/effect/proc_holder/spell/targeted/shadowling_hivemind/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/shadowling_hivemind_ascendant
/obj/effect/proc_holder/spell/targeted/shadowling_hivemind_ascendant/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/shadowling_phase_shift
/obj/effect/proc_holder/spell/targeted/shadowling_phase_shift/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/shadowling_regenarmor
/obj/effect/proc_holder/spell/targeted/shadowling_regenarmor/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/smoke
/obj/effect/proc_holder/spell/targeted/smoke/disable
/obj/effect/proc_holder/spell/targeted/spatial_relocation
/obj/effect/proc_holder/spell/targeted/spatial_relocation/cast(list/targets, distanceoverride)
/obj/effect/proc_holder/spell/targeted/summonitem
/obj/effect/proc_holder/spell/targeted/summonitem/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/trigger
/obj/effect/proc_holder/spell/targeted/trigger/Destroy()
/obj/effect/proc_holder/spell/targeted/trigger/New()
/obj/effect/proc_holder/spell/targeted/trigger/blind
/obj/effect/proc_holder/spell/targeted/trigger/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/turf_teleport
/obj/effect/proc_holder/spell/targeted/turf_teleport/blink
/obj/effect/proc_holder/spell/targeted/turf_teleport/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/vortex
/obj/effect/proc_holder/spell/targeted/vortex/cast(list/targets)
/obj/effect/proc_holder/spell/turf/fireball/cast(var/turf/T)
/obj/effect/rend
/obj/effect/rend/New(loc, var/spawn_type, var/spawn_amt, var/desc, var/spawn_fast)
/obj/effect/rend/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/effect/rend/process()
/obj/effect/resonance
/obj/effect/resonance/New(loc, var/creator = null, var/timetoburst)
/obj/effect/rune
/obj/effect/rune/New()
/obj/effect/rune/ajourney()
/obj/effect/rune/armor()
/obj/effect/rune/attack_hand(mob/living/user as mob)
/obj/effect/rune/attackby(I as obj, user as mob, params)
/obj/effect/rune/blind()
/obj/effect/rune/bloodboil()
/obj/effect/rune/check_icon()
/obj/effect/rune/communicate()
/obj/effect/rune/convert()
/obj/effect/rune/cultsummon()
/obj/effect/rune/deafen()
/obj/effect/rune/drain()
/obj/effect/rune/emp(var/U,var/range_red)
/obj/effect/rune/examine(mob/user)
/obj/effect/rune/fizzle(var/mob/living/cultist = null)
/obj/effect/rune/freedom()
/obj/effect/rune/itemport(var/key)
/obj/effect/rune/manifest()
/obj/effect/rune/obscure(var/rad)
/obj/effect/rune/raise()
/obj/effect/rune/revealrunes(var/obj/W as obj)
/obj/effect/rune/runestun(var/mob/living/T as mob)
/obj/effect/rune/sac_grant_word(var/mob/living/C)
/obj/effect/rune/sacrifice()
/obj/effect/rune/stone_or_gib(var/mob/T)
/obj/effect/rune/summon_shell()
/obj/effect/rune/talisman()
/obj/effect/rune/tearreality()
/obj/effect/rune/teleport(var/key)
/obj/effect/rune/tomesummon()
/obj/effect/rune/wall()
/obj/effect/spacevine
/obj/effect/spacevine/Crossed(mob/crosser)
/obj/effect/spacevine/Destroy()
/obj/effect/spacevine/attack_hand(mob/user as mob)
/obj/effect/spacevine/attack_paw(mob/living/user as mob)
/obj/effect/spacevine/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/effect/spacevine/buckle_mob()
/obj/effect/spacevine/eat(mob/eater)
/obj/effect/spacevine/ex_act(severity, target)
/obj/effect/spacevine/grow()
/obj/effect/spacevine/on_chem_effect(datum/reagent/R)
/obj/effect/spacevine/spread()
/obj/effect/spacevine/temperature_expose(null, temp, volume)
/obj/effect/spacevine_controller
/obj/effect/spacevine_controller/Destroy()
/obj/effect/spacevine_controller/New(loc, list/muts, mttv, spreading)
/obj/effect/spacevine_controller/ex_act()
/obj/effect/spacevine_controller/process()
/obj/effect/spacevine_controller/singularity_act()
/obj/effect/spacevine_controller/singularity_pull()
/obj/effect/spacevine_controller/spawn_spacevine_piece(var/turf/location, obj/effect/spacevine/parent, list/muts)
/obj/effect/spawner
/obj/effect/spawner/lootdrop
/obj/effect/spawner/lootdrop/New()
/obj/effect/spawner/lootdrop/armory_contraband
/obj/effect/spawner/lootdrop/maintenance
/obj/effect/spawner/lootdrop/maintenance/New()
/obj/effect/spawner/newbomb
/obj/effect/spawner/newbomb/New()
/obj/effect/spawner/newbomb/proximity
/obj/effect/spawner/newbomb/radio
/obj/effect/spawner/newbomb/timer
/obj/effect/spawner/newbomb/timer/syndicate
/obj/effect/spawner/structure
/obj/effect/spawner/structure/New()
/obj/effect/spawner/structure/window
/obj/effect/spawner/structure/window/reinforced
/obj/effect/spider
/obj/effect/spider/attackby(var/obj/item/weapon/W, var/mob/user, params)
/obj/effect/spider/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/spider/cocoon
/obj/effect/spider/cocoon/Destroy()
/obj/effect/spider/cocoon/New()
/obj/effect/spider/cocoon/container_resist()
/obj/effect/spider/eggcluster
/obj/effect/spider/eggcluster/New()
/obj/effect/spider/eggcluster/process()
/obj/effect/spider/ex_act(severity, target)
/obj/effect/spider/healthcheck()
/obj/effect/spider/spiderling
/obj/effect/spider/spiderling/Bump(atom/user)
/obj/effect/spider/spiderling/New()
/obj/effect/spider/spiderling/die()
/obj/effect/spider/spiderling/healthcheck()
/obj/effect/spider/spiderling/process()
/obj/effect/spider/stickyweb
/obj/effect/spider/stickyweb/CanPass(atom/movable/mover, turf/target, height=0)
/obj/effect/spider/stickyweb/New()
/obj/effect/spider/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/spresent
/obj/effect/step_trigger
/obj/effect/step_trigger/Crossed(H as mob|obj)
/obj/effect/step_trigger/Trigger(var/atom/movable/A)
/obj/effect/step_trigger/message
/obj/effect/step_trigger/message/Trigger(mob/M as mob)
/obj/effect/step_trigger/sound_effect
/obj/effect/step_trigger/sound_effect/Trigger(var/atom/movable/A)
/obj/effect/step_trigger/stopper
/obj/effect/step_trigger/teleport_fancy
/obj/effect/step_trigger/teleport_fancy/Trigger(mob/M as mob)
/obj/effect/step_trigger/teleporter
/obj/effect/step_trigger/teleporter/Trigger(var/atom/movable/A)
/obj/effect/step_trigger/teleporter/random
/obj/effect/step_trigger/teleporter/random/Trigger(var/atom/movable/A)
/obj/effect/step_trigger/thrower
/obj/effect/step_trigger/thrower/Trigger(var/atom/A)
/obj/effect/teleport_abductor
/obj/effect/timestop
/obj/effect/timestop/New()
/obj/effect/timestop/timestop()
/obj/effect/vaultspawner
/obj/effect/vaultspawner/New(turf/location as turf,lX = minX,uX = maxX,lY = minY,uY = maxY,var/type = null)
/obj/ex_act(severity, target)
/obj/get_spans()
/obj/handle_internal_lifeform(mob/lifeform_inside_me, breath_request)
/obj/hide(h)
/obj/interact(mob/user)
/obj/item
/obj/item/Adjacent(var/atom/neighbor, var/recurse = 1)
/obj/item/Destroy()
/obj/item/GetAccess()
/obj/item/GetID()
/obj/item/GetJobName()
/obj/item/IsReflect(var/def_zone)
/obj/item/IsShield()
/obj/item/acid_act(var/acidpwr, var/toxpwr, var/acid_volume)
/obj/item/active_uplink_check(mob/user as mob)
/obj/item/add_blood(mob/living/carbon/M)
/obj/item/afterattack(atom/target, mob/user, proximity_flag, click_parameters)
/obj/item/alarm_frame
/obj/item/alarm_frame/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/alarm_frame/try_build(turf/on_wall)
/obj/item/ammo_box
/obj/item/ammo_box/New()
/obj/item/ammo_box/a357
/obj/item/ammo_box/a40mm
/obj/item/ammo_box/a762
/obj/item/ammo_box/attack_self(mob/user as mob)
/obj/item/ammo_box/attackby(var/obj/item/A as obj, mob/user as mob, params, var/silent = 0, var/replace_spent = 0)
/obj/item/ammo_box/c10mm
/obj/item/ammo_box/c38
/obj/item/ammo_box/c45
/obj/item/ammo_box/c9mm
/obj/item/ammo_box/foambox
/obj/item/ammo_box/foambox/riot
/obj/item/ammo_box/get_round(var/keep = 0)
/obj/item/ammo_box/give_round(var/obj/item/ammo_casing/R, var/replace_spent = 0)
/obj/item/ammo_box/magazine/ammo_count()
/obj/item/ammo_box/magazine/internal/boltaction
/obj/item/ammo_box/magazine/internal/cylinder
/obj/item/ammo_box/magazine/internal/cylinder/ammo_count(var/countempties = 1)
/obj/item/ammo_box/magazine/internal/cylinder/dualshot
/obj/item/ammo_box/magazine/internal/cylinder/grenadelauncher
/obj/item/ammo_box/magazine/internal/cylinder/grenadelauncher/multi
/obj/item/ammo_box/magazine/internal/cylinder/improvised
/obj/item/ammo_box/magazine/internal/cylinder/rev38
/obj/item/ammo_box/magazine/internal/cylinder/rus357
/obj/item/ammo_box/magazine/internal/cylinder/rus357/New()
/obj/item/ammo_box/magazine/internal/cylinder/speargun
/obj/item/ammo_box/magazine/internal/give_round(var/obj/item/ammo_casing/R)
/obj/item/ammo_box/magazine/internal/shot
/obj/item/ammo_box/magazine/internal/shot/toy
/obj/item/ammo_box/magazine/internal/shot/toy/crossbow
/obj/item/ammo_box/magazine/internal/shotcom
/obj/item/ammo_box/magazine/internal/shotriot
/obj/item/ammo_box/magazine/m10mm
/obj/item/ammo_box/magazine/m12g
/obj/item/ammo_box/magazine/m12g/bioterror
/obj/item/ammo_box/magazine/m12g/buckshot
/obj/item/ammo_box/magazine/m12g/dragon
/obj/item/ammo_box/magazine/m12g/stun
/obj/item/ammo_box/magazine/m12g/update_icon()
/obj/item/ammo_box/magazine/m45
/obj/item/ammo_box/magazine/m45/update_icon()
/obj/item/ammo_box/magazine/m50
/obj/item/ammo_box/magazine/m556
/obj/item/ammo_box/magazine/m75
/obj/item/ammo_box/magazine/m762
/obj/item/ammo_box/magazine/m762/update_icon()
/obj/item/ammo_box/magazine/smgm45
/obj/item/ammo_box/magazine/smgm45/update_icon()
/obj/item/ammo_box/magazine/smgm9mm
/obj/item/ammo_box/magazine/smgm9mm/update_icon()
/obj/item/ammo_box/magazine/tommygunm45
/obj/item/ammo_box/magazine/toy
/obj/item/ammo_box/magazine/toy/m762
/obj/item/ammo_box/magazine/toy/m762/update_icon()
/obj/item/ammo_box/magazine/toy/pistol
/obj/item/ammo_box/magazine/toy/pistol/riot
/obj/item/ammo_box/magazine/toy/smg
/obj/item/ammo_box/magazine/toy/smg/riot
/obj/item/ammo_box/magazine/toy/smg/update_icon()
/obj/item/ammo_box/magazine/toy/smgm45
/obj/item/ammo_box/magazine/toy/smgm45/update_icon()
/obj/item/ammo_box/magazine/uzim9mm
/obj/item/ammo_box/magazine/uzim9mm/update_icon()
/obj/item/ammo_box/update_icon()
/obj/item/ammo_casing
/obj/item/ammo_casing/New()
/obj/item/ammo_casing/a357
/obj/item/ammo_casing/a40mm
/obj/item/ammo_casing/a50
/obj/item/ammo_casing/a556
/obj/item/ammo_casing/a762
/obj/item/ammo_casing/attackby(obj/item/ammo_box/box as obj, mob/user as mob, params)
/obj/item/ammo_casing/c10mm
/obj/item/ammo_casing/c38
/obj/item/ammo_casing/c45
/obj/item/ammo_casing/c9mm
/obj/item/ammo_casing/caseless
/obj/item/ammo_casing/caseless/a75
/obj/item/ammo_casing/caseless/fire(atom/target as mob|obj|turf, mob/living/user as mob|obj, params, var/distro, var/quiet)
/obj/item/ammo_casing/caseless/foam_dart
/obj/item/ammo_casing/caseless/foam_dart/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/ammo_casing/caseless/foam_dart/riot
/obj/item/ammo_casing/caseless/foam_dart/update_icon()
/obj/item/ammo_casing/caseless/magspear
/obj/item/ammo_casing/caseless/update_icon()
/obj/item/ammo_casing/energy
/obj/item/ammo_casing/energy/bolt
/obj/item/ammo_casing/energy/bolt/large
/obj/item/ammo_casing/energy/c3dbullet
/obj/item/ammo_casing/energy/chrono_beam
/obj/item/ammo_casing/energy/declone
/obj/item/ammo_casing/energy/disabler
/obj/item/ammo_casing/energy/electrode
/obj/item/ammo_casing/energy/electrode/gun
/obj/item/ammo_casing/energy/electrode/hos
/obj/item/ammo_casing/energy/flora
/obj/item/ammo_casing/energy/flora/mut
/obj/item/ammo_casing/energy/flora/yield
/obj/item/ammo_casing/energy/ion
/obj/item/ammo_casing/energy/kinetic
/obj/item/ammo_casing/energy/laser
/obj/item/ammo_casing/energy/laser/bluetag
/obj/item/ammo_casing/energy/laser/heavy
/obj/item/ammo_casing/energy/laser/hos
/obj/item/ammo_casing/energy/laser/practice
/obj/item/ammo_casing/energy/laser/pulse
/obj/item/ammo_casing/energy/laser/redtag
/obj/item/ammo_casing/energy/laser/scatter
/obj/item/ammo_casing/energy/lasergun
/obj/item/ammo_casing/energy/meteor
/obj/item/ammo_casing/energy/mindflayer
/obj/item/ammo_casing/energy/plasma
/obj/item/ammo_casing/energy/plasma/adv
/obj/item/ammo_casing/energy/temp
/obj/item/ammo_casing/energy/temp/hot
/obj/item/ammo_casing/energy/wormhole
/obj/item/ammo_casing/energy/wormhole/New(var/obj/item/weapon/gun/energy/wormhole_projector/wh)
/obj/item/ammo_casing/energy/wormhole/orange
/obj/item/ammo_casing/energy/xray
/obj/item/ammo_casing/fire(atom/target as mob|obj|turf, mob/living/user as mob|obj, params, var/distro, var/quiet)
/obj/item/ammo_casing/magic
/obj/item/ammo_casing/magic/animate
/obj/item/ammo_casing/magic/change
/obj/item/ammo_casing/magic/chaos
/obj/item/ammo_casing/magic/chaos/newshot()
/obj/item/ammo_casing/magic/death
/obj/item/ammo_casing/magic/door
/obj/item/ammo_casing/magic/fireball
/obj/item/ammo_casing/magic/heal
/obj/item/ammo_casing/magic/teleport
/obj/item/ammo_casing/newshot()
/obj/item/ammo_casing/ready_proj(atom/target as mob|obj|turf, mob/living/user, var/quiet)
/obj/item/ammo_casing/shotgun
/obj/item/ammo_casing/shotgun/beanbag
/obj/item/ammo_casing/shotgun/buckshot
/obj/item/ammo_casing/shotgun/dart
/obj/item/ammo_casing/shotgun/dart/New()
/obj/item/ammo_casing/shotgun/dart/attackby()
/obj/item/ammo_casing/shotgun/dart/bioterror
/obj/item/ammo_casing/shotgun/dart/bioterror/New()
/obj/item/ammo_casing/shotgun/frag12
/obj/item/ammo_casing/shotgun/improvised
/obj/item/ammo_casing/shotgun/improvised/overload
/obj/item/ammo_casing/shotgun/improvised/overload/New()
/obj/item/ammo_casing/shotgun/incendiary
/obj/item/ammo_casing/shotgun/incendiary/dragonsbreath
/obj/item/ammo_casing/shotgun/ion
/obj/item/ammo_casing/shotgun/laserslug
/obj/item/ammo_casing/shotgun/meteorshot
/obj/item/ammo_casing/shotgun/pulseslug
/obj/item/ammo_casing/shotgun/stunslug
/obj/item/ammo_casing/shotgun/techshell
/obj/item/ammo_casing/spread(var/turf/target, var/turf/current, var/distro)
/obj/item/ammo_casing/syringegun
/obj/item/ammo_casing/throw_proj(var/turf/targloc, mob/living/user as mob|obj, params)
/obj/item/ammo_casing/update_icon()
/obj/item/apc_frame
/obj/item/apc_frame/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/apc_frame/try_build(turf/on_wall)
/obj/item/areaeditor
/obj/item/areaeditor/Topic(href, href_list)
/obj/item/areaeditor/attack_self(mob/user as mob)
/obj/item/areaeditor/blueprints
/obj/item/areaeditor/blueprints/Topic(href, href_list)
/obj/item/areaeditor/blueprints/attack_self(mob/user as mob)
/obj/item/areaeditor/check_tile_is_border(var/turf/T2,var/dir)
/obj/item/areaeditor/create_area()
/obj/item/areaeditor/detect_room(var/turf/first)
/obj/item/areaeditor/edit_area()
/obj/item/areaeditor/get_area()
/obj/item/areaeditor/get_area_type(var/area/A = get_area())
/obj/item/areaeditor/move_turfs_to_area(var/list/turf/turfs, var/area/A)
/obj/item/areaeditor/permit
/obj/item/areaeditor/permit/attack_self(mob/user as mob)
/obj/item/areaeditor/permit/create_area()
/obj/item/areaeditor/set_area_machinery_title(var/area/A,var/title,var/oldtitle)
/obj/item/assembly/shock_kit
/obj/item/assembly/shock_kit/Destroy()
/obj/item/assembly/shock_kit/attack_self(mob/user as mob)
/obj/item/assembly/shock_kit/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/assembly/shock_kit/receive_signal()
/obj/item/asteroid/goliath_hide
/obj/item/asteroid/goliath_hide/afterattack(atom/target, mob/user, proximity_flag)
/obj/item/asteroid/hivelord_core
/obj/item/asteroid/hivelord_core/New()
/obj/item/asteroid/hivelord_core/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/attack(mob/living/M as mob, mob/living/user as mob, def_zone)
/obj/item/attack_ai(mob/user as mob)
/obj/item/attack_alien(mob/user as mob)
/obj/item/attack_hand(mob/user as mob)
/obj/item/attack_paw(mob/user as mob)
/obj/item/attack_self(mob/user)
/obj/item/attack_self_tk(mob/user)
/obj/item/attack_tk(mob/user)
/obj/item/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/blob_act()
/obj/item/bluespace_crystal
/obj/item/bluespace_crystal/New()
/obj/item/bluespace_crystal/artificial
/obj/item/bluespace_crystal/attack_self(var/mob/user)
/obj/item/bluespace_crystal/blink_mob(var/mob/living/L)
/obj/item/bluespace_crystal/throw_impact(atom/hit_atom)
/obj/item/body_egg
/obj/item/body_egg/AddInfectionImages()
/obj/item/body_egg/Destroy()
/obj/item/body_egg/New()
/obj/item/body_egg/RefreshInfectionImage()
/obj/item/body_egg/RemoveInfectionImages()
/obj/item/body_egg/alien_embryo
/obj/item/body_egg/alien_embryo/AddInfectionImages()
/obj/item/body_egg/alien_embryo/AttemptGrow(var/gib_on_success = 1)
/obj/item/body_egg/alien_embryo/RefreshInfectionImage()
/obj/item/body_egg/alien_embryo/RemoveInfectionImages()
/obj/item/body_egg/alien_embryo/egg_process()
/obj/item/body_egg/changeling_egg
/obj/item/body_egg/changeling_egg/Pop()
/obj/item/body_egg/changeling_egg/egg_process()
/obj/item/body_egg/egg_process()
/obj/item/body_egg/process()
/obj/item/bodybag
/obj/item/bodybag/attack_self(mob/user)
/obj/item/bodybag/bluespace
/obj/item/borg/overdrive
/obj/item/borg/sight
/obj/item/borg/sight/hud
/obj/item/borg/sight/hud/med
/obj/item/borg/sight/hud/med/New()
/obj/item/borg/sight/hud/sec
/obj/item/borg/sight/hud/sec/New()
/obj/item/borg/sight/meson
/obj/item/borg/sight/thermal
/obj/item/borg/sight/xray
/obj/item/borg/stun
/obj/item/borg/stun/attack(mob/M as mob, mob/living/silicon/robot/user as mob)
/obj/item/borg/upgrade
/obj/item/borg/upgrade/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/ddrill
/obj/item/borg/upgrade/ddrill/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/disablercooler
/obj/item/borg/upgrade/disablercooler/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/jetpack
/obj/item/borg/upgrade/jetpack/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/rename
/obj/item/borg/upgrade/rename/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/rename/attack_self(mob/user as mob)
/obj/item/borg/upgrade/reset
/obj/item/borg/upgrade/reset/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/restart
/obj/item/borg/upgrade/restart/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/soh
/obj/item/borg/upgrade/soh/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/syndicate/
/obj/item/borg/upgrade/syndicate/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/vtec
/obj/item/borg/upgrade/vtec/action(var/mob/living/silicon/robot/R)
/obj/item/candle
/obj/item/candle/attack_self(mob/user as mob)
/obj/item/candle/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/candle/dropped(mob/user)
/obj/item/candle/light(var/flavor_text = "<span class='danger'>[usr] lights the [name].</span>")
/obj/item/candle/pickup(mob/user)
/obj/item/candle/process()
/obj/item/candle/update_icon()
/obj/item/check_allowed_items(atom/target, not_inside)
/obj/item/clean_blood()
/obj/item/clothing
/obj/item/clothing/can_use(mob/user)
/obj/item/clothing/cloak
/obj/item/clothing/cloak/cap
/obj/item/clothing/cloak/ce
/obj/item/clothing/cloak/cmo
/obj/item/clothing/cloak/hos
/obj/item/clothing/cloak/qm
/obj/item/clothing/cloak/rd
/obj/item/clothing/cloak/suicide_act(mob/user)
/obj/item/clothing/ears
/obj/item/clothing/ears/earmuffs
/obj/item/clothing/glasses
/obj/item/clothing/glasses/cold
/obj/item/clothing/glasses/eyepatch
/obj/item/clothing/glasses/gglasses
/obj/item/clothing/glasses/heat
/obj/item/clothing/glasses/hud
/obj/item/clothing/glasses/hud/dropped(mob/living/carbon/human/user)
/obj/item/clothing/glasses/hud/emag_act(mob/user)
/obj/item/clothing/glasses/hud/emp_act(severity)
/obj/item/clothing/glasses/hud/equipped(mob/living/carbon/human/user, slot)
/obj/item/clothing/glasses/hud/health
/obj/item/clothing/glasses/hud/health/night
/obj/item/clothing/glasses/hud/security
/obj/item/clothing/glasses/hud/security/night
/obj/item/clothing/glasses/hud/security/sunglasses
/obj/item/clothing/glasses/hud/security/sunglasses/eyepatch
/obj/item/clothing/glasses/hud/security/sunglasses/gars
/obj/item/clothing/glasses/hud/security/sunglasses/gars/supergars
/obj/item/clothing/glasses/hud/toggle
/obj/item/clothing/glasses/hud/toggle/attack_self(mob/user)
/obj/item/clothing/glasses/hud/toggle/thermal
/obj/item/clothing/glasses/hud/toggle/thermal/attack_self(mob/user)
/obj/item/clothing/glasses/hud/toggle/thermal/emp_act(severity)
/obj/item/clothing/glasses/material
/obj/item/clothing/glasses/meson
/obj/item/clothing/glasses/meson/engine
/obj/item/clothing/glasses/meson/engine/attack_self()
/obj/item/clothing/glasses/meson/engine/invis_update()
/obj/item/clothing/glasses/meson/engine/process()
/obj/item/clothing/glasses/meson/engine/scan()
/obj/item/clothing/glasses/meson/engine/t_ray_on()
/obj/item/clothing/glasses/meson/engine/ui_action_click()
/obj/item/clothing/glasses/meson/engine/update_icon()
/obj/item/clothing/glasses/meson/gar
/obj/item/clothing/glasses/meson/night
/obj/item/clothing/glasses/meson/truesight
/obj/item/clothing/glasses/monocle
/obj/item/clothing/glasses/night
/obj/item/clothing/glasses/night/shadowling
/obj/item/clothing/glasses/orange
/obj/item/clothing/glasses/red
/obj/item/clothing/glasses/regular
/obj/item/clothing/glasses/regular/hipster
/obj/item/clothing/glasses/science
/obj/item/clothing/glasses/sunglasses
/obj/item/clothing/glasses/sunglasses/big
/obj/item/clothing/glasses/sunglasses/blindfold
/obj/item/clothing/glasses/sunglasses/gar
/obj/item/clothing/glasses/sunglasses/gar/supergar
/obj/item/clothing/glasses/sunglasses/garb
/obj/item/clothing/glasses/sunglasses/garb/supergarb
/obj/item/clothing/glasses/thermal
/obj/item/clothing/glasses/thermal/emp_act(severity)
/obj/item/clothing/glasses/thermal/eyepatch
/obj/item/clothing/glasses/thermal/monocle
/obj/item/clothing/glasses/thermal/syndi
/obj/item/clothing/glasses/welding
/obj/item/clothing/glasses/welding/attack_self()
/obj/item/clothing/glasses/welding/verb/toggle()
/obj/item/clothing/gloves
/obj/item/clothing/gloves/Touch(var/atom/A, var/proximity)
/obj/item/clothing/gloves/add_blood(mob/living/carbon/M)
/obj/item/clothing/gloves/botanic_leather
/obj/item/clothing/gloves/boxing
/obj/item/clothing/gloves/boxing/blue
/obj/item/clothing/gloves/boxing/dropped(mob/user)
/obj/item/clothing/gloves/boxing/equipped(mob/user, slot)
/obj/item/clothing/gloves/boxing/green
/obj/item/clothing/gloves/boxing/yellow
/obj/item/clothing/gloves/clean_blood()
/obj/item/clothing/gloves/color/black
/obj/item/clothing/gloves/color/black/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/clothing/gloves/color/black/ce
/obj/item/clothing/gloves/color/black/hos
/obj/item/clothing/gloves/color/blue
/obj/item/clothing/gloves/color/brown
/obj/item/clothing/gloves/color/brown/cargo
/obj/item/clothing/gloves/color/captain
/obj/item/clothing/gloves/color/fyellow
/obj/item/clothing/gloves/color/fyellow/New()
/obj/item/clothing/gloves/color/green
/obj/item/clothing/gloves/color/grey
/obj/item/clothing/gloves/color/grey/hop
/obj/item/clothing/gloves/color/grey/rd
/obj/item/clothing/gloves/color/latex
/obj/item/clothing/gloves/color/latex/nitrile
/obj/item/clothing/gloves/color/light_brown
/obj/item/clothing/gloves/color/orange
/obj/item/clothing/gloves/color/purple
/obj/item/clothing/gloves/color/rainbow
/obj/item/clothing/gloves/color/rainbow/clown
/obj/item/clothing/gloves/color/red
/obj/item/clothing/gloves/color/white
/obj/item/clothing/gloves/color/white/redcoat
/obj/item/clothing/gloves/color/yellow
/obj/item/clothing/gloves/color/yellow/fake
/obj/item/clothing/gloves/combat
/obj/item/clothing/gloves/fingerless
/obj/item/clothing/gloves/golem
/obj/item/clothing/gloves/shadowling
/obj/item/clothing/gloves/space_ninja
/obj/item/clothing/gloves/space_ninja/Touch(var/atom/A,var/proximity)
/obj/item/clothing/gloves/space_ninja/examine(mob/user)
/obj/item/clothing/gloves/space_ninja/toggled()
/obj/item/clothing/head
/obj/item/clothing/head/HoS
/obj/item/clothing/head/HoS/beret
/obj/item/clothing/head/bandana
/obj/item/clothing/head/bearpelt
/obj/item/clothing/head/beret
/obj/item/clothing/head/beret/sec
/obj/item/clothing/head/beret/sec/navyhos
/obj/item/clothing/head/beret/sec/navyofficer
/obj/item/clothing/head/beret/sec/navywarden
/obj/item/clothing/head/bio_hood
/obj/item/clothing/head/bio_hood/cmo
/obj/item/clothing/head/bio_hood/general
/obj/item/clothing/head/bio_hood/janitor
/obj/item/clothing/head/bio_hood/scientist
/obj/item/clothing/head/bio_hood/security
/obj/item/clothing/head/bio_hood/virology
/obj/item/clothing/head/bomb_hood
/obj/item/clothing/head/bomb_hood/security
/obj/item/clothing/head/bowler
/obj/item/clothing/head/bunnyhead
/obj/item/clothing/head/cakehat
/obj/item/clothing/head/cakehat/attack_self(mob/user as mob)
/obj/item/clothing/head/cakehat/process()
/obj/item/clothing/head/caphat
/obj/item/clothing/head/caphat/parade
/obj/item/clothing/head/cardborg
/obj/item/clothing/head/centhat
/obj/item/clothing/head/chaplain_hood
/obj/item/clothing/head/chefhat
/obj/item/clothing/head/chefhat/suicide_act(mob/user)
/obj/item/clothing/head/chicken
/obj/item/clothing/head/collectable
/obj/item/clothing/head/collectable/HoS
/obj/item/clothing/head/collectable/beret
/obj/item/clothing/head/collectable/captain
/obj/item/clothing/head/collectable/chef
/obj/item/clothing/head/collectable/flatcap
/obj/item/clothing/head/collectable/hardhat
/obj/item/clothing/head/collectable/kitty
/obj/item/clothing/head/collectable/paper
/obj/item/clothing/head/collectable/petehat
/obj/item/clothing/head/collectable/pirate
/obj/item/clothing/head/collectable/police
/obj/item/clothing/head/collectable/rabbitears
/obj/item/clothing/head/collectable/slime
/obj/item/clothing/head/collectable/swat
/obj/item/clothing/head/collectable/thunderdome
/obj/item/clothing/head/collectable/tophat
/obj/item/clothing/head/collectable/welding
/obj/item/clothing/head/collectable/wizard
/obj/item/clothing/head/collectable/xenom
/obj/item/clothing/head/cone
/obj/item/clothing/head/culthood
/obj/item/clothing/head/culthood/alt
/obj/item/clothing/head/det_hat
/obj/item/clothing/head/drone_holder
/obj/item/clothing/head/drone_holder/container_resist()
/obj/item/clothing/head/drone_holder/relaymove()
/obj/item/clothing/head/drone_holder/uncurl()
/obj/item/clothing/head/drone_holder/updateVisualAppearence(var/mob/living/simple_animal/drone/D)
/obj/item/clothing/head/fedora
/obj/item/clothing/head/fedora/suicide_act(mob/user)
/obj/item/clothing/head/festive
/obj/item/clothing/head/flatcap
/obj/item/clothing/head/griffin
/obj/item/clothing/head/hardhat
/obj/item/clothing/head/hardhat/atmos
/obj/item/clothing/head/hardhat/attack_self(mob/user)
/obj/item/clothing/head/hardhat/dblue
/obj/item/clothing/head/hardhat/dropped(mob/user)
/obj/item/clothing/head/hardhat/orange
/obj/item/clothing/head/hardhat/pickup(mob/user)
/obj/item/clothing/head/hardhat/pumpkinhead
/obj/item/clothing/head/hardhat/red
/obj/item/clothing/head/hardhat/reindeer
/obj/item/clothing/head/hardhat/white
/obj/item/clothing/head/hasturhood
/obj/item/clothing/head/helmet
/obj/item/clothing/head/helmet/New()
/obj/item/clothing/head/helmet/abductor
/obj/item/clothing/head/helmet/alt
/obj/item/clothing/head/helmet/attack_self()
/obj/item/clothing/head/helmet/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/clothing/head/helmet/attackby(var/obj/item/device/assembly/signaler/S, mob/user as mob, params)
/obj/item/clothing/head/helmet/bluetaghelm
/obj/item/clothing/head/helmet/changeling
/obj/item/clothing/head/helmet/changeling/dropped()
/obj/item/clothing/head/helmet/dropped(mob/user)
/obj/item/clothing/head/helmet/emp_act(severity)
/obj/item/clothing/head/helmet/equipped(mob/user)
/obj/item/clothing/head/helmet/gladiator
/obj/item/clothing/head/helmet/justice
/obj/item/clothing/head/helmet/justice/escape
/obj/item/clothing/head/helmet/pickup(mob/user)
/obj/item/clothing/head/helmet/redtaghelm
/obj/item/clothing/head/helmet/riot
/obj/item/clothing/head/helmet/roman
/obj/item/clothing/head/helmet/roman/legionaire
/obj/item/clothing/head/helmet/sec
/obj/item/clothing/head/helmet/space
/obj/item/clothing/head/helmet/space/beret
/obj/item/clothing/head/helmet/space/captain
/obj/item/clothing/head/helmet/space/changeling
/obj/item/clothing/head/helmet/space/changeling/dropped()
/obj/item/clothing/head/helmet/space/chronos
/obj/item/clothing/head/helmet/space/chronos/Destroy()
/obj/item/clothing/head/helmet/space/chronos/dropped()
/obj/item/clothing/head/helmet/space/cult
/obj/item/clothing/head/helmet/space/eva
/obj/item/clothing/head/helmet/space/freedom
/obj/item/clothing/head/helmet/space/hardsuit
/obj/item/clothing/head/helmet/space/hardsuit/attack_self(mob/user)
/obj/item/clothing/head/helmet/space/hardsuit/deathsquad
/obj/item/clothing/head/helmet/space/hardsuit/deathsquad/attack_self(mob/user)
/obj/item/clothing/head/helmet/space/hardsuit/dropped(mob/user)
/obj/item/clothing/head/helmet/space/hardsuit/engine
/obj/item/clothing/head/helmet/space/hardsuit/engine/atmos
/obj/item/clothing/head/helmet/space/hardsuit/engine/elite
/obj/item/clothing/head/helmet/space/hardsuit/ert
/obj/item/clothing/head/helmet/space/hardsuit/ert/engi
/obj/item/clothing/head/helmet/space/hardsuit/ert/med
/obj/item/clothing/head/helmet/space/hardsuit/ert/sec
/obj/item/clothing/head/helmet/space/hardsuit/medical
/obj/item/clothing/head/helmet/space/hardsuit/mining
/obj/item/clothing/head/helmet/space/hardsuit/pickup(mob/user)
/obj/item/clothing/head/helmet/space/hardsuit/plasmaman
/obj/item/clothing/head/helmet/space/hardsuit/security
/obj/item/clothing/head/helmet/space/hardsuit/security/hos
/obj/item/clothing/head/helmet/space/hardsuit/syndi
/obj/item/clothing/head/helmet/space/hardsuit/syndi/New()
/obj/item/clothing/head/helmet/space/hardsuit/syndi/attack_self(mob/user)
/obj/item/clothing/head/helmet/space/hardsuit/syndi/owl
/obj/item/clothing/head/helmet/space/hardsuit/syndi/toggle_hardsuit_mode(mob/user)
/obj/item/clothing/head/helmet/space/hardsuit/syndi/update_icon()
/obj/item/clothing/head/helmet/space/hardsuit/wizard
/obj/item/clothing/head/helmet/space/nasavoid
/obj/item/clothing/head/helmet/space/pirate
/obj/item/clothing/head/helmet/space/santahat
/obj/item/clothing/head/helmet/space/space_ninja
/obj/item/clothing/head/helmet/space/syndicate
/obj/item/clothing/head/helmet/space/syndicate/black
/obj/item/clothing/head/helmet/space/syndicate/black/blue
/obj/item/clothing/head/helmet/space/syndicate/black/engie
/obj/item/clothing/head/helmet/space/syndicate/black/green
/obj/item/clothing/head/helmet/space/syndicate/black/med
/obj/item/clothing/head/helmet/space/syndicate/black/orange
/obj/item/clothing/head/helmet/space/syndicate/black/red
/obj/item/clothing/head/helmet/space/syndicate/blue
/obj/item/clothing/head/helmet/space/syndicate/green
/obj/item/clothing/head/helmet/space/syndicate/green/dark
/obj/item/clothing/head/helmet/space/syndicate/orange
/obj/item/clothing/head/helmet/swat
/obj/item/clothing/head/helmet/thunderdome
/obj/item/clothing/head/helmet/toggle_helmlight()
/obj/item/clothing/head/helmet/ui_action_click()
/obj/item/clothing/head/helmet/update_helmlight(var/mob/user = null)
/obj/item/clothing/head/helmet/update_icon()
/obj/item/clothing/head/hgpiratecap
/obj/item/clothing/head/hopcap
/obj/item/clothing/head/jester
/obj/item/clothing/head/justice
/obj/item/clothing/head/justice/blue
/obj/item/clothing/head/justice/green
/obj/item/clothing/head/justice/pink
/obj/item/clothing/head/justice/yellow
/obj/item/clothing/head/kitty
/obj/item/clothing/head/kitty/equipped(mob/user, slot)
/obj/item/clothing/head/kitty/update_icon(mob/living/carbon/human/user)
/obj/item/clothing/head/magus
/obj/item/clothing/head/mailman
/obj/item/clothing/head/nun_hood
/obj/item/clothing/head/nursehat
/obj/item/clothing/head/pirate
/obj/item/clothing/head/plaguedoctorhat
/obj/item/clothing/head/powdered_wig
/obj/item/clothing/head/rabbitears
/obj/item/clothing/head/radiation
/obj/item/clothing/head/redcoat
/obj/item/clothing/head/santa
/obj/item/clothing/head/shadowling
/obj/item/clothing/head/soft
/obj/item/clothing/head/soft/AltClick(var/mob/user)
/obj/item/clothing/head/soft/black
/obj/item/clothing/head/soft/blue
/obj/item/clothing/head/soft/dropped()
/obj/item/clothing/head/soft/emt
/obj/item/clothing/head/soft/examine(mob/user)
/obj/item/clothing/head/soft/flip(var/mob/user)
/obj/item/clothing/head/soft/green
/obj/item/clothing/head/soft/grey
/obj/item/clothing/head/soft/mime
/obj/item/clothing/head/soft/orange
/obj/item/clothing/head/soft/purple
/obj/item/clothing/head/soft/rainbow
/obj/item/clothing/head/soft/red
/obj/item/clothing/head/soft/sec
/obj/item/clothing/head/soft/verb/flipcap()
/obj/item/clothing/head/soft/yellow
/obj/item/clothing/head/sombrero
/obj/item/clothing/head/sombrero/green
/obj/item/clothing/head/sombrero/shamebrero
/obj/item/clothing/head/space/golem
/obj/item/clothing/head/syndicatefake
/obj/item/clothing/head/that
/obj/item/clothing/head/ushanka
/obj/item/clothing/head/ushanka/attack_self(mob/user as mob)
/obj/item/clothing/head/warden
/obj/item/clothing/head/welding
/obj/item/clothing/head/welding/attack_self()
/obj/item/clothing/head/welding/verb/toggle()
/obj/item/clothing/head/winterhood
/obj/item/clothing/head/witchwig
/obj/item/clothing/head/wizard
/obj/item/clothing/head/wizard/black
/obj/item/clothing/head/wizard/fake
/obj/item/clothing/head/wizard/magus
/obj/item/clothing/head/wizard/marisa
/obj/item/clothing/head/wizard/marisa/fake
/obj/item/clothing/head/wizard/red
/obj/item/clothing/head/wizard/santa
/obj/item/clothing/head/wizard/yellow
/obj/item/clothing/head/xenos
/obj/item/clothing/mask
/obj/item/clothing/mask/adjustmask(var/mob/user)
/obj/item/clothing/mask/balaclava
/obj/item/clothing/mask/balaclava/attack_self(var/mob/user)
/obj/item/clothing/mask/bandana
/obj/item/clothing/mask/bandana/attack_self(var/mob/user)
/obj/item/clothing/mask/bandana/black
/obj/item/clothing/mask/bandana/blue
/obj/item/clothing/mask/bandana/gold
/obj/item/clothing/mask/bandana/green
/obj/item/clothing/mask/bandana/red
/obj/item/clothing/mask/bandana/skull
/obj/item/clothing/mask/breath
/obj/item/clothing/mask/breath/AltClick(var/mob/user)
/obj/item/clothing/mask/breath/attack_self(var/mob/user)
/obj/item/clothing/mask/breath/examine(mob/user)
/obj/item/clothing/mask/breath/golem
/obj/item/clothing/mask/breath/medical
/obj/item/clothing/mask/cigarette
/obj/item/clothing/mask/cigarette/New()
/obj/item/clothing/mask/cigarette/afterattack(obj/item/weapon/reagent_containers/glass/glass, mob/user as mob, proximity)
/obj/item/clothing/mask/cigarette/attack(mob/living/carbon/M, mob/living/carbon/user)
/obj/item/clothing/mask/cigarette/attack_self(mob/user as mob)
/obj/item/clothing/mask/cigarette/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/clothing/mask/cigarette/cigar
/obj/item/clothing/mask/cigarette/cigar/cohiba
/obj/item/clothing/mask/cigarette/cigar/havana
/obj/item/clothing/mask/cigarette/fire_act()
/obj/item/clothing/mask/cigarette/handle_reagents()
/obj/item/clothing/mask/cigarette/is_lighter(obj/O, mob/user)
/obj/item/clothing/mask/cigarette/light(var/flavor_text = null)
/obj/item/clothing/mask/cigarette/pipe
/obj/item/clothing/mask/cigarette/pipe/attack_self(mob/user as mob)
/obj/item/clothing/mask/cigarette/pipe/attackby(var/obj/item/O, var/mob/user, params)
/obj/item/clothing/mask/cigarette/pipe/cobpipe
/obj/item/clothing/mask/cigarette/pipe/cobpipe/New()
/obj/item/clothing/mask/cigarette/pipe/process()
/obj/item/clothing/mask/cigarette/process()
/obj/item/clothing/mask/cigarette/rollie
/obj/item/clothing/mask/cigarette/rollie/New()
/obj/item/clothing/mask/cigarette/rollie/trippy/New()
/obj/item/clothing/mask/cigarette/suicide_act(mob/user)
/obj/item/clothing/mask/cowmask
/obj/item/clothing/mask/cowmask/speechModification(message)
/obj/item/clothing/mask/facehugger
/obj/item/clothing/mask/facehugger/Attach(M as mob)
/obj/item/clothing/mask/facehugger/Crossed(atom/target)
/obj/item/clothing/mask/facehugger/Die()
/obj/item/clothing/mask/facehugger/GoActive()
/obj/item/clothing/mask/facehugger/GoIdle()
/obj/item/clothing/mask/facehugger/HasProximity(atom/movable/AM as mob|obj)
/obj/item/clothing/mask/facehugger/Impregnate(mob/living/target as mob)
/obj/item/clothing/mask/facehugger/attack(mob/living/M as mob, mob/user as mob)
/obj/item/clothing/mask/facehugger/attack_alien(user as mob)
/obj/item/clothing/mask/facehugger/attack_hand(user as mob)
/obj/item/clothing/mask/facehugger/attackby(var/obj/item/O,var/mob/m, params)
/obj/item/clothing/mask/facehugger/bullet_act(var/obj/item/projectile/P)
/obj/item/clothing/mask/facehugger/equipped(mob/M)
/obj/item/clothing/mask/facehugger/examine(mob/user)
/obj/item/clothing/mask/facehugger/on_found(mob/finder as mob)
/obj/item/clothing/mask/facehugger/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/item/clothing/mask/facehugger/throw_at(atom/target, range, speed)
/obj/item/clothing/mask/facehugger/throw_impact(atom/hit_atom)
/obj/item/clothing/mask/facehugger/toy
/obj/item/clothing/mask/facehugger/toy/Die()
/obj/item/clothing/mask/fakemoustache
/obj/item/clothing/mask/gas
/obj/item/clothing/mask/gas/clown_hat
/obj/item/clothing/mask/gas/clown_hat/attack_self(mob/user)
/obj/item/clothing/mask/gas/cyborg
/obj/item/clothing/mask/gas/death_commando
/obj/item/clothing/mask/gas/mime
/obj/item/clothing/mask/gas/monkeymask
/obj/item/clothing/mask/gas/owl_mask
/obj/item/clothing/mask/gas/plaguedoctor
/obj/item/clothing/mask/gas/sechailer
/obj/item/clothing/mask/gas/sechailer/attack_self()
/obj/item/clothing/mask/gas/sechailer/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/clothing/mask/gas/sechailer/cyborg
/obj/item/clothing/mask/gas/sechailer/cyborg/New()
/obj/item/clothing/mask/gas/sechailer/swat
/obj/item/clothing/mask/gas/sechailer/verb/adjust()
/obj/item/clothing/mask/gas/sechailer/verb/halt()
/obj/item/clothing/mask/gas/sexyclown
/obj/item/clothing/mask/gas/sexymime
/obj/item/clothing/mask/gas/shadowling
/obj/item/clothing/mask/gas/syndicate
/obj/item/clothing/mask/gas/voice
/obj/item/clothing/mask/gas/voice/attack_self(mob/user)
/obj/item/clothing/mask/gas/voice/space_ninja
/obj/item/clothing/mask/gas/voice/space_ninja/New()
/obj/item/clothing/mask/gas/voice/space_ninja/assess_targets(list/target_list, mob/living/carbon/U)
/obj/item/clothing/mask/gas/voice/space_ninja/examine(mob/user)
/obj/item/clothing/mask/gas/voice/space_ninja/speechModification(message)
/obj/item/clothing/mask/gas/voice/space_ninja/togglev()
/obj/item/clothing/mask/gas/welding
/obj/item/clothing/mask/gas/welding/attack_self()
/obj/item/clothing/mask/gas/welding/verb/toggle()
/obj/item/clothing/mask/horsehead
/obj/item/clothing/mask/horsehead/speechModification(message)
/obj/item/clothing/mask/luchador
/obj/item/clothing/mask/luchador/rudos
/obj/item/clothing/mask/luchador/speechModification(message)
/obj/item/clothing/mask/luchador/tecnicos
/obj/item/clothing/mask/muzzle
/obj/item/clothing/mask/muzzle/attack_paw(mob/user)
/obj/item/clothing/mask/pig
/obj/item/clothing/mask/pig/attack_self(mob/user)
/obj/item/clothing/mask/pig/speechModification(message)
/obj/item/clothing/mask/speechModification(message)
/obj/item/clothing/mask/spig
/obj/item/clothing/mask/spig/speechModification(message)
/obj/item/clothing/mask/surgical
/obj/item/clothing/mask/surgical/attack_self(var/mob/user)
/obj/item/clothing/shoes
/obj/item/clothing/shoes/clown_shoes
/obj/item/clothing/shoes/clown_shoes/banana_shoes
/obj/item/clothing/shoes/clown_shoes/banana_shoes/attack_self(mob/user)
/obj/item/clothing/shoes/clown_shoes/banana_shoes/attackby(obj/item/O, mob/user, params)
/obj/item/clothing/shoes/clown_shoes/banana_shoes/examine(mob/user)
/obj/item/clothing/shoes/clown_shoes/banana_shoes/step_action()
/obj/item/clothing/shoes/clown_shoes/banana_shoes/ui_action_click()
/obj/item/clothing/shoes/clown_shoes/banana_shoes/update_icon()
/obj/item/clothing/shoes/clown_shoes/step_action()
/obj/item/clothing/shoes/combat
/obj/item/clothing/shoes/combat/swat
/obj/item/clothing/shoes/cult
/obj/item/clothing/shoes/cyborg
/obj/item/clothing/shoes/galoshes
/obj/item/clothing/shoes/golem
/obj/item/clothing/shoes/griffin
/obj/item/clothing/shoes/jackboots
/obj/item/clothing/shoes/laceup
/obj/item/clothing/shoes/magboots
/obj/item/clothing/shoes/magboots/advance
/obj/item/clothing/shoes/magboots/attack_self(mob/user)
/obj/item/clothing/shoes/magboots/examine(mob/user)
/obj/item/clothing/shoes/magboots/negates_gravity()
/obj/item/clothing/shoes/magboots/syndie
/obj/item/clothing/shoes/magboots/verb/toggle()
/obj/item/clothing/shoes/roman
/obj/item/clothing/shoes/sandal
/obj/item/clothing/shoes/sandal/marisa
/obj/item/clothing/shoes/shadowling
/obj/item/clothing/shoes/sneakers
/obj/item/clothing/shoes/sneakers/black
/obj/item/clothing/shoes/sneakers/black/redcoat
/obj/item/clothing/shoes/sneakers/blue
/obj/item/clothing/shoes/sneakers/brown
/obj/item/clothing/shoes/sneakers/brown/captain
/obj/item/clothing/shoes/sneakers/brown/ce
/obj/item/clothing/shoes/sneakers/brown/cmo
/obj/item/clothing/shoes/sneakers/brown/hop
/obj/item/clothing/shoes/sneakers/brown/rd
/obj/item/clothing/shoes/sneakers/green
/obj/item/clothing/shoes/sneakers/mime
/obj/item/clothing/shoes/sneakers/orange
/obj/item/clothing/shoes/sneakers/orange/attack_hand(mob/user)
/obj/item/clothing/shoes/sneakers/orange/attack_self(mob/user as mob)
/obj/item/clothing/shoes/sneakers/orange/attackby(H as obj, loc, params)
/obj/item/clothing/shoes/sneakers/purple
/obj/item/clothing/shoes/sneakers/rainbow
/obj/item/clothing/shoes/sneakers/red
/obj/item/clothing/shoes/sneakers/syndigaloshes
/obj/item/clothing/shoes/sneakers/white
/obj/item/clothing/shoes/sneakers/yellow
/obj/item/clothing/shoes/space_ninja
/obj/item/clothing/shoes/step_action()
/obj/item/clothing/shoes/suicide_act(mob/user)
/obj/item/clothing/shoes/winterboots
/obj/item/clothing/shoes/workboots
/obj/item/clothing/suit
/obj/item/clothing/suit/apron
/obj/item/clothing/suit/apron/chef
/obj/item/clothing/suit/apron/overalls
/obj/item/clothing/suit/apron/surgical
/obj/item/clothing/suit/armor
/obj/item/clothing/suit/armor/abductor/vest
/obj/item/clothing/suit/armor/abductor/vest/ActivateStealth()
/obj/item/clothing/suit/armor/abductor/vest/Adrenaline()
/obj/item/clothing/suit/armor/abductor/vest/DeactivateStealth()
/obj/item/clothing/suit/armor/abductor/vest/IsReflect()
/obj/item/clothing/suit/armor/abductor/vest/IsShield()
/obj/item/clothing/suit/armor/abductor/vest/SetDisguise(var/datum/icon_snapshot/entry)
/obj/item/clothing/suit/armor/abductor/vest/flip_mode()
/obj/item/clothing/suit/armor/abductor/vest/process()
/obj/item/clothing/suit/armor/abductor/vest/ui_action_click()
/obj/item/clothing/suit/armor/bulletproof
/obj/item/clothing/suit/armor/centcom
/obj/item/clothing/suit/armor/changeling
/obj/item/clothing/suit/armor/changeling/New()
/obj/item/clothing/suit/armor/changeling/dropped()
/obj/item/clothing/suit/armor/heavy
/obj/item/clothing/suit/armor/hos
/obj/item/clothing/suit/armor/hos/trenchcoat
/obj/item/clothing/suit/armor/laserproof
/obj/item/clothing/suit/armor/laserproof/IsReflect(var/def_zone)
/obj/item/clothing/suit/armor/reactive
/obj/item/clothing/suit/armor/reactive/IsShield()
/obj/item/clothing/suit/armor/reactive/attack_self(mob/user as mob)
/obj/item/clothing/suit/armor/reactive/emp_act(severity)
/obj/item/clothing/suit/armor/riot
/obj/item/clothing/suit/armor/tdome
/obj/item/clothing/suit/armor/tdome/green
/obj/item/clothing/suit/armor/tdome/red
/obj/item/clothing/suit/armor/vest
/obj/item/clothing/suit/armor/vest/capcarapace
/obj/item/clothing/suit/armor/vest/det_suit
/obj/item/clothing/suit/armor/vest/leather
/obj/item/clothing/suit/armor/vest/warden
/obj/item/clothing/suit/armor/vest/warden/alt
/obj/item/clothing/suit/bio_suit
/obj/item/clothing/suit/bio_suit/cmo
/obj/item/clothing/suit/bio_suit/general
/obj/item/clothing/suit/bio_suit/janitor
/obj/item/clothing/suit/bio_suit/plaguedoctorsuit
/obj/item/clothing/suit/bio_suit/scientist
/obj/item/clothing/suit/bio_suit/security
/obj/item/clothing/suit/bio_suit/virology
/obj/item/clothing/suit/bluetag
/obj/item/clothing/suit/bomb_suit
/obj/item/clothing/suit/bomb_suit/security
/obj/item/clothing/suit/bunnysuit
/obj/item/clothing/suit/captunic
/obj/item/clothing/suit/cardborg
/obj/item/clothing/suit/chickensuit
/obj/item/clothing/suit/cultrobes
/obj/item/clothing/suit/cultrobes/alt
/obj/item/clothing/suit/cyborg_suit
/obj/item/clothing/suit/det_suit
/obj/item/clothing/suit/det_suit/grey
/obj/item/clothing/suit/fire
/obj/item/clothing/suit/fire/atmos
/obj/item/clothing/suit/fire/firefighter
/obj/item/clothing/suit/fire/heavy
/obj/item/clothing/suit/golem
/obj/item/clothing/suit/hastur
/obj/item/clothing/suit/hazardvest
/obj/item/clothing/suit/hgpirate
/obj/item/clothing/suit/holidaypriest
/obj/item/clothing/suit/hooded
/obj/item/clothing/suit/hooded/MakeHood()
/obj/item/clothing/suit/hooded/New()
/obj/item/clothing/suit/hooded/RemoveHood()
/obj/item/clothing/suit/hooded/ToggleHood()
/obj/item/clothing/suit/hooded/chaplain_hoodie
/obj/item/clothing/suit/hooded/dropped()
/obj/item/clothing/suit/hooded/equipped(mob/user, slot)
/obj/item/clothing/suit/hooded/ui_action_click()
/obj/item/clothing/suit/hooded/wintercoat
/obj/item/clothing/suit/hooded/wintercoat/captain
/obj/item/clothing/suit/hooded/wintercoat/cargo
/obj/item/clothing/suit/hooded/wintercoat/engineering
/obj/item/clothing/suit/hooded/wintercoat/engineering/atmos
/obj/item/clothing/suit/hooded/wintercoat/hydro
/obj/item/clothing/suit/hooded/wintercoat/medical
/obj/item/clothing/suit/hooded/wintercoat/miner
/obj/item/clothing/suit/hooded/wintercoat/science
/obj/item/clothing/suit/hooded/wintercoat/security
/obj/item/clothing/suit/ianshirt
/obj/item/clothing/suit/imperium_monk
/obj/item/clothing/suit/jacket
/obj/item/clothing/suit/jacket/leather
/obj/item/clothing/suit/jacket/leather/overcoat
/obj/item/clothing/suit/judgerobe
/obj/item/clothing/suit/justice
/obj/item/clothing/suit/magusred
/obj/item/clothing/suit/monkeysuit
/obj/item/clothing/suit/nerdshirt
/obj/item/clothing/suit/nun
/obj/item/clothing/suit/pirate
/obj/item/clothing/suit/poncho
/obj/item/clothing/suit/poncho/green
/obj/item/clothing/suit/poncho/ponchoshame
/obj/item/clothing/suit/poncho/red
/obj/item/clothing/suit/radiation
/obj/item/clothing/suit/redtag
/obj/item/clothing/suit/security/hos
/obj/item/clothing/suit/security/officer
/obj/item/clothing/suit/security/warden
/obj/item/clothing/suit/space
/obj/item/clothing/suit/space/captain
/obj/item/clothing/suit/space/changeling
/obj/item/clothing/suit/space/changeling/New()
/obj/item/clothing/suit/space/changeling/dropped()
/obj/item/clothing/suit/space/changeling/process()
/obj/item/clothing/suit/space/chronos
/obj/item/clothing/suit/space/chronos/Destroy()
/obj/item/clothing/suit/space/chronos/activate()
/obj/item/clothing/suit/space/chronos/chronowalk(var/mob/living/carbon/human/user)
/obj/item/clothing/suit/space/chronos/deactivate()
/obj/item/clothing/suit/space/chronos/dropped()
/obj/item/clothing/suit/space/chronos/emp_act(severity)
/obj/item/clothing/suit/space/chronos/new_camera(var/mob/user)
/obj/item/clothing/suit/space/chronos/process()
/obj/item/clothing/suit/space/chronos/ui_action_click()
/obj/item/clothing/suit/space/cult
/obj/item/clothing/suit/space/eva
/obj/item/clothing/suit/space/eva/plasmaman
/obj/item/clothing/suit/space/eva/plasmaman/Extinguish(var/mob/living/carbon/human/H)
/obj/item/clothing/suit/space/eva/plasmaman/examine(mob/user)
/obj/item/clothing/suit/space/freedom
/obj/item/clothing/suit/space/hardsuit
/obj/item/clothing/suit/space/hardsuit/MakeHelmet()
/obj/item/clothing/suit/space/hardsuit/New()
/obj/item/clothing/suit/space/hardsuit/RemoveHelmet()
/obj/item/clothing/suit/space/hardsuit/ToggleHelmet()
/obj/item/clothing/suit/space/hardsuit/deathsquad
/obj/item/clothing/suit/space/hardsuit/dropped()
/obj/item/clothing/suit/space/hardsuit/engine
/obj/item/clothing/suit/space/hardsuit/engine/New()
/obj/item/clothing/suit/space/hardsuit/engine/atmos
/obj/item/clothing/suit/space/hardsuit/engine/elite
/obj/item/clothing/suit/space/hardsuit/equipped(mob/user, slot)
/obj/item/clothing/suit/space/hardsuit/ert
/obj/item/clothing/suit/space/hardsuit/ert/engi
/obj/item/clothing/suit/space/hardsuit/ert/med
/obj/item/clothing/suit/space/hardsuit/ert/sec
/obj/item/clothing/suit/space/hardsuit/medical
/obj/item/clothing/suit/space/hardsuit/mining
/obj/item/clothing/suit/space/hardsuit/security
/obj/item/clothing/suit/space/hardsuit/security/hos
/obj/item/clothing/suit/space/hardsuit/syndi
/obj/item/clothing/suit/space/hardsuit/syndi/New()
/obj/item/clothing/suit/space/hardsuit/syndi/ToggleHelmet()
/obj/item/clothing/suit/space/hardsuit/syndi/owl
/obj/item/clothing/suit/space/hardsuit/ui_action_click()
/obj/item/clothing/suit/space/hardsuit/verb/Jetpack()
/obj/item/clothing/suit/space/hardsuit/verb/Jetpack_Rockets()
/obj/item/clothing/suit/space/hardsuit/wizard
/obj/item/clothing/suit/space/nasavoid
/obj/item/clothing/suit/space/officer
/obj/item/clothing/suit/space/pirate
/obj/item/clothing/suit/space/santa
/obj/item/clothing/suit/space/shadowling
/obj/item/clothing/suit/space/space_ninja
/obj/item/clothing/suit/space/space_ninja/Destroy()
/obj/item/clothing/suit/space/space_ninja/New()
/obj/item/clothing/suit/space/space_ninja/attackby(obj/item/I, mob/U, params)
/obj/item/clothing/suit/space/space_ninja/cancel_stealth()
/obj/item/clothing/suit/space/space_ninja/deinit()
/obj/item/clothing/suit/space/space_ninja/deinitialize(delay = s_delay)
/obj/item/clothing/suit/space/space_ninja/examine(mob/user)
/obj/item/clothing/suit/space/space_ninja/grant_equip_verbs()
/obj/item/clothing/suit/space/space_ninja/grant_ninja_verbs()
/obj/item/clothing/suit/space/space_ninja/handle_teleport_grab(turf/T, mob/living/H)
/obj/item/clothing/suit/space/space_ninja/init()
/obj/item/clothing/suit/space/space_ninja/lock_suit(mob/living/carbon/human/H, var/checkIcons = 0)
/obj/item/clothing/suit/space/space_ninja/ninitialize(delay = s_delay, mob/living/carbon/human/U = loc)
/obj/item/clothing/suit/space/space_ninja/ninja_sword_recall()
/obj/item/clothing/suit/space/space_ninja/ninjaboost()
/obj/item/clothing/suit/space/space_ninja/ninjacost(cost = 0, specificCheck = 0)
/obj/item/clothing/suit/space/space_ninja/ninjajaunt()
/obj/item/clothing/suit/space/space_ninja/ninjanet(mob/living/carbon/C in oview())
/obj/item/clothing/suit/space/space_ninja/ninjapulse()
/obj/item/clothing/suit/space/space_ninja/ninjashift(turf/T in oview())
/obj/item/clothing/suit/space/space_ninja/ninjasmoke()
/obj/item/clothing/suit/space/space_ninja/ninjastar()
/obj/item/clothing/suit/space/space_ninja/ntick(mob/living/carbon/human/U = affecting)
/obj/item/clothing/suit/space/space_ninja/randomize_param()
/obj/item/clothing/suit/space/space_ninja/remove_equip_verbs()
/obj/item/clothing/suit/space/space_ninja/remove_ninja_verbs()
/obj/item/clothing/suit/space/space_ninja/stealth()
/obj/item/clothing/suit/space/space_ninja/terminate()
/obj/item/clothing/suit/space/space_ninja/toggle_stealth()
/obj/item/clothing/suit/space/space_ninja/unlock_suit()
/obj/item/clothing/suit/space/syndicate
/obj/item/clothing/suit/space/syndicate/black
/obj/item/clothing/suit/space/syndicate/black/blue
/obj/item/clothing/suit/space/syndicate/black/engie
/obj/item/clothing/suit/space/syndicate/black/green
/obj/item/clothing/suit/space/syndicate/black/med
/obj/item/clothing/suit/space/syndicate/black/orange
/obj/item/clothing/suit/space/syndicate/black/red
/obj/item/clothing/suit/space/syndicate/blue
/obj/item/clothing/suit/space/syndicate/green
/obj/item/clothing/suit/space/syndicate/green/dark
/obj/item/clothing/suit/space/syndicate/orange
/obj/item/clothing/suit/straight_jacket
/obj/item/clothing/suit/suspenders
/obj/item/clothing/suit/syndicatefake
/obj/item/clothing/suit/toggle/AltClick(var/mob/user)
/obj/item/clothing/suit/toggle/chef
/obj/item/clothing/suit/toggle/examine(mob/user)
/obj/item/clothing/suit/toggle/labcoat
/obj/item/clothing/suit/toggle/labcoat/chemist
/obj/item/clothing/suit/toggle/labcoat/cmo
/obj/item/clothing/suit/toggle/labcoat/emt
/obj/item/clothing/suit/toggle/labcoat/genetics
/obj/item/clothing/suit/toggle/labcoat/mad
/obj/item/clothing/suit/toggle/labcoat/science
/obj/item/clothing/suit/toggle/labcoat/virologist
/obj/item/clothing/suit/toggle/lawyer
/obj/item/clothing/suit/toggle/lawyer/black
/obj/item/clothing/suit/toggle/lawyer/purple
/obj/item/clothing/suit/toggle/owlwings
/obj/item/clothing/suit/toggle/owlwings/griffinwings
/obj/item/clothing/suit/toggle/suit_toggle()
/obj/item/clothing/suit/toggle/ui_action_click()
/obj/item/clothing/suit/whitedress
/obj/item/clothing/suit/wizrobe
/obj/item/clothing/suit/wizrobe/black
/obj/item/clothing/suit/wizrobe/fake
/obj/item/clothing/suit/wizrobe/magusblue
/obj/item/clothing/suit/wizrobe/magusred
/obj/item/clothing/suit/wizrobe/marisa
/obj/item/clothing/suit/wizrobe/marisa/fake
/obj/item/clothing/suit/wizrobe/red
/obj/item/clothing/suit/wizrobe/santa
/obj/item/clothing/suit/wizrobe/yellow
/obj/item/clothing/suit/xenos
/obj/item/clothing/tie
/obj/item/clothing/tie/armband
/obj/item/clothing/tie/armband/cargo
/obj/item/clothing/tie/armband/deputy
/obj/item/clothing/tie/armband/engine
/obj/item/clothing/tie/armband/hydro
/obj/item/clothing/tie/armband/med
/obj/item/clothing/tie/armband/medblue
/obj/item/clothing/tie/armband/science
/obj/item/clothing/tie/black
/obj/item/clothing/tie/blue
/obj/item/clothing/tie/horrible
/obj/item/clothing/tie/medal
/obj/item/clothing/tie/medal/attack(mob/living/carbon/human/M, mob/living/user)
/obj/item/clothing/tie/medal/bronze_heart
/obj/item/clothing/tie/medal/conduct
/obj/item/clothing/tie/medal/gold
/obj/item/clothing/tie/medal/gold/captain
/obj/item/clothing/tie/medal/gold/heroism
/obj/item/clothing/tie/medal/nobel_science
/obj/item/clothing/tie/medal/silver
/obj/item/clothing/tie/medal/silver/security
/obj/item/clothing/tie/medal/silver/valor
/obj/item/clothing/tie/petcollar
/obj/item/clothing/tie/petcollar/attack_self(mob/user as mob)
/obj/item/clothing/tie/red
/obj/item/clothing/tie/scarf
/obj/item/clothing/tie/scarf/black
/obj/item/clothing/tie/scarf/christmas
/obj/item/clothing/tie/scarf/darkblue
/obj/item/clothing/tie/scarf/green
/obj/item/clothing/tie/scarf/lightblue
/obj/item/clothing/tie/scarf/orange
/obj/item/clothing/tie/scarf/purple
/obj/item/clothing/tie/scarf/red
/obj/item/clothing/tie/scarf/white
/obj/item/clothing/tie/scarf/yellow
/obj/item/clothing/tie/scarf/zebra
/obj/item/clothing/tie/stethoscope
/obj/item/clothing/tie/stethoscope/attack(mob/living/carbon/human/M, mob/living/user)
/obj/item/clothing/tie/stripedbluescarf
/obj/item/clothing/tie/stripedgreenscarf
/obj/item/clothing/tie/stripedredscarf
/obj/item/clothing/tie/waistcoat
/obj/item/clothing/under
/obj/item/clothing/under/AltClick(var/mob/user)
/obj/item/clothing/under/New()
/obj/item/clothing/under/acj
/obj/item/clothing/under/assistantformal
/obj/item/clothing/under/attachTie(obj/item/I, mob/user, notifyAttach = 1)
/obj/item/clothing/under/attackby(obj/item/I, mob/user, params)
/obj/item/clothing/under/blackskirt
/obj/item/clothing/under/blacktango
/obj/item/clothing/under/captainparade
/obj/item/clothing/under/chameleon
/obj/item/clothing/under/chameleon/New()
/obj/item/clothing/under/chameleon/all/New()
/obj/item/clothing/under/chameleon/attack_self()
/obj/item/clothing/under/chameleon/attackby(obj/item/clothing/under/U as obj, mob/user as mob, params)
/obj/item/clothing/under/chameleon/emp_act(severity)
/obj/item/clothing/under/cloud
/obj/item/clothing/under/color
/obj/item/clothing/under/color/aqua
/obj/item/clothing/under/color/black
/obj/item/clothing/under/color/blue
/obj/item/clothing/under/color/brown
/obj/item/clothing/under/color/darkblue
/obj/item/clothing/under/color/darkred
/obj/item/clothing/under/color/green
/obj/item/clothing/under/color/grey
/obj/item/clothing/under/color/lightblue
/obj/item/clothing/under/color/lightbrown
/obj/item/clothing/under/color/lightgreen
/obj/item/clothing/under/color/lightpurple
/obj/item/clothing/under/color/lightred
/obj/item/clothing/under/color/maroon
/obj/item/clothing/under/color/orange
/obj/item/clothing/under/color/pink
/obj/item/clothing/under/color/purple
/obj/item/clothing/under/color/rainbow
/obj/item/clothing/under/color/random/New()
/obj/item/clothing/under/color/red
/obj/item/clothing/under/color/white
/obj/item/clothing/under/color/yellow
/obj/item/clothing/under/color/yellowgreen
/obj/item/clothing/under/examine(mob/user)
/obj/item/clothing/under/gimmick/rank/captain/suit
/obj/item/clothing/under/gimmick/rank/head_of_personnel/suit
/obj/item/clothing/under/gladiator
/obj/item/clothing/under/golem
/obj/item/clothing/under/griffin
/obj/item/clothing/under/hosparadefem
/obj/item/clothing/under/hosparademale
/obj/item/clothing/under/janimaid
/obj/item/clothing/under/jester
/obj/item/clothing/under/kilt
/obj/item/clothing/under/lawyer
/obj/item/clothing/under/lawyer/black
/obj/item/clothing/under/lawyer/blacksuit
/obj/item/clothing/under/lawyer/blue
/obj/item/clothing/under/lawyer/bluesuit
/obj/item/clothing/under/lawyer/female
/obj/item/clothing/under/lawyer/purpsuit
/obj/item/clothing/under/lawyer/red
/obj/item/clothing/under/maid
/obj/item/clothing/under/overalls
/obj/item/clothing/under/owl
/obj/item/clothing/under/pants
/obj/item/clothing/under/pants/black
/obj/item/clothing/under/pants/blackjeans
/obj/item/clothing/under/pants/camo
/obj/item/clothing/under/pants/classicjeans
/obj/item/clothing/under/pants/jeans
/obj/item/clothing/under/pants/khaki
/obj/item/clothing/under/pants/mustangjeans
/obj/item/clothing/under/pants/red
/obj/item/clothing/under/pants/tan
/obj/item/clothing/under/pants/track
/obj/item/clothing/under/pants/white
/obj/item/clothing/under/pants/youngfolksjeans
/obj/item/clothing/under/patriotsuit
/obj/item/clothing/under/pirate
/obj/item/clothing/under/pj/blue
/obj/item/clothing/under/pj/red
/obj/item/clothing/under/plaid_skirt
/obj/item/clothing/under/plaid_skirt/blue
/obj/item/clothing/under/plaid_skirt/purple
/obj/item/clothing/under/rank/atmospheric_technician
/obj/item/clothing/under/rank/bartender
/obj/item/clothing/under/rank/captain
/obj/item/clothing/under/rank/cargo
/obj/item/clothing/under/rank/cargotech
/obj/item/clothing/under/rank/centcom_commander
/obj/item/clothing/under/rank/centcom_officer
/obj/item/clothing/under/rank/chaplain
/obj/item/clothing/under/rank/chef
/obj/item/clothing/under/rank/chemist
/obj/item/clothing/under/rank/chief_engineer
/obj/item/clothing/under/rank/chief_medical_officer
/obj/item/clothing/under/rank/clown
/obj/item/clothing/under/rank/det
/obj/item/clothing/under/rank/det/grey
/obj/item/clothing/under/rank/engineer
/obj/item/clothing/under/rank/geneticist
/obj/item/clothing/under/rank/head_of_personnel
/obj/item/clothing/under/rank/head_of_security
/obj/item/clothing/under/rank/head_of_security/alt
/obj/item/clothing/under/rank/head_of_security/navyblue
/obj/item/clothing/under/rank/hydroponics
/obj/item/clothing/under/rank/janitor
/obj/item/clothing/under/rank/librarian
/obj/item/clothing/under/rank/mailman
/obj/item/clothing/under/rank/medical
/obj/item/clothing/under/rank/medical/blue
/obj/item/clothing/under/rank/medical/green
/obj/item/clothing/under/rank/medical/purple
/obj/item/clothing/under/rank/mime
/obj/item/clothing/under/rank/miner
/obj/item/clothing/under/rank/nursesuit
/obj/item/clothing/under/rank/prisoner
/obj/item/clothing/under/rank/psyche
/obj/item/clothing/under/rank/research_director
/obj/item/clothing/under/rank/research_director/alt
/obj/item/clothing/under/rank/research_director/turtleneck
/obj/item/clothing/under/rank/roboticist
/obj/item/clothing/under/rank/scientist
/obj/item/clothing/under/rank/security
/obj/item/clothing/under/rank/security/navyblue
/obj/item/clothing/under/rank/vice
/obj/item/clothing/under/rank/virologist
/obj/item/clothing/under/rank/warden
/obj/item/clothing/under/rank/warden/navyblue
/obj/item/clothing/under/redcoat
/obj/item/clothing/under/redeveninggown
/obj/item/clothing/under/rolldown()
/obj/item/clothing/under/roman
/obj/item/clothing/under/sailordress
/obj/item/clothing/under/schoolgirl
/obj/item/clothing/under/schoolgirl/green
/obj/item/clothing/under/schoolgirl/orange
/obj/item/clothing/under/schoolgirl/red
/obj/item/clothing/under/sexyclown
/obj/item/clothing/under/sexymime
/obj/item/clothing/under/shadowling
/obj/item/clothing/under/shorts
/obj/item/clothing/under/shorts/black
/obj/item/clothing/under/shorts/blue
/obj/item/clothing/under/shorts/green
/obj/item/clothing/under/shorts/grey
/obj/item/clothing/under/shorts/purple
/obj/item/clothing/under/shorts/red
/obj/item/clothing/under/sl_suit
/obj/item/clothing/under/soviet
/obj/item/clothing/under/space
/obj/item/clothing/under/stripeddress
/obj/item/clothing/under/suit_jacket
/obj/item/clothing/under/suit_jacket/burgundy
/obj/item/clothing/under/suit_jacket/charcoal
/obj/item/clothing/under/suit_jacket/checkered
/obj/item/clothing/under/suit_jacket/female
/obj/item/clothing/under/suit_jacket/navy
/obj/item/clothing/under/suit_jacket/really_black
/obj/item/clothing/under/suit_jacket/red
/obj/item/clothing/under/suit_jacket/tan
/obj/item/clothing/under/suit_jacket/white
/obj/item/clothing/under/sundress
/obj/item/clothing/under/syndicate
/obj/item/clothing/under/syndicate/tacticool
/obj/item/clothing/under/verb/jumpsuit_adjust()
/obj/item/clothing/under/verb/removetie()
/obj/item/clothing/under/verb/toggle()
/obj/item/clothing/under/waiter
/obj/item/clothing/weldingvisortoggle()
/obj/item/conveyor_construct
/obj/item/conveyor_construct/afterattack(atom/A, mob/user, proximity)
/obj/item/conveyor_construct/attackby(obj/item/I, mob/user, params)
/obj/item/conveyor_switch_construct
/obj/item/conveyor_switch_construct/New()
/obj/item/conveyor_switch_construct/afterattack(atom/A, mob/user, proximity)
/obj/item/cybernetic_implant
/obj/item/cybernetic_implant/New(var/mob/M = null)
/obj/item/cybernetic_implant/brain
/obj/item/cybernetic_implant/brain/New()
/obj/item/cybernetic_implant/brain/anti_drop
/obj/item/cybernetic_implant/brain/anti_drop/emp_act(severity)
/obj/item/cybernetic_implant/brain/anti_drop/function()
/obj/item/cybernetic_implant/brain/anti_drop/release_items()
/obj/item/cybernetic_implant/brain/anti_drop/ui_action_click()
/obj/item/cybernetic_implant/brain/anti_stun
/obj/item/cybernetic_implant/brain/anti_stun/emp_act(severity)
/obj/item/cybernetic_implant/brain/anti_stun/function()
/obj/item/cybernetic_implant/brain/anti_stun/process()
/obj/item/cybernetic_implant/brain/emp_act(severity)
/obj/item/cybernetic_implant/chest
/obj/item/cybernetic_implant/chest/New()
/obj/item/cybernetic_implant/chest/nutriment
/obj/item/cybernetic_implant/chest/nutriment/emp_act(severity)
/obj/item/cybernetic_implant/chest/nutriment/function()
/obj/item/cybernetic_implant/chest/nutriment/plus
/obj/item/cybernetic_implant/chest/nutriment/process()
/obj/item/cybernetic_implant/eyes
/obj/item/cybernetic_implant/eyes/New()
/obj/item/cybernetic_implant/eyes/emp_act(severity)
/obj/item/cybernetic_implant/eyes/hud/medical
/obj/item/cybernetic_implant/eyes/hud/medical/function()
/obj/item/cybernetic_implant/eyes/hud/security
/obj/item/cybernetic_implant/eyes/hud/security/function()
/obj/item/cybernetic_implant/eyes/thermals
/obj/item/cybernetic_implant/eyes/thermals/function()
/obj/item/cybernetic_implant/eyes/update_eye_color(fluff_message)
/obj/item/cybernetic_implant/eyes/xray
/obj/item/cybernetic_implant/eyes/xray/function()
/obj/item/cybernetic_implant/function()
/obj/item/device
/obj/item/device/abductor/AbductorCheck(var/user)
/obj/item/device/abductor/IsAbductor(var/user)
/obj/item/device/abductor/ScientistCheck(var/user)
/obj/item/device/abductor/gizmo
/obj/item/device/abductor/gizmo/afterattack(var/atom/target, var/mob/living/user, flag, params)
/obj/item/device/abductor/gizmo/attack(mob/living/M, mob/user)
/obj/item/device/abductor/gizmo/attack_self(mob/user)
/obj/item/device/abductor/gizmo/mark(var/atom/target, var/mob/living/user)
/obj/item/device/abductor/gizmo/prepare(var/atom/target, var/mob/living/user)
/obj/item/device/abductor/gizmo/scan(var/atom/target, var/mob/living/user)
/obj/item/device/abductor/silencer
/obj/item/device/abductor/silencer/afterattack(var/atom/target, var/mob/living/user, flag, params)
/obj/item/device/abductor/silencer/attack(mob/living/M, mob/user)
/obj/item/device/abductor/silencer/radio_off(var/atom/target, var/mob/living/user)
/obj/item/device/abductor/silencer/radio_off_mob(var/mob/living/carbon/human/M)
/obj/item/device/aicard
/obj/item/device/aicard/Topic(href, href_list)
/obj/item/device/aicard/afterattack(atom/target, mob/user, proximity)
/obj/item/device/aicard/attack_self(mob/user)
/obj/item/device/aicard/update_state()
/obj/item/device/am_shielding_container
/obj/item/device/am_shielding_container/attackby(var/obj/item/I, var/mob/user, params)
/obj/item/device/analyzer
/obj/item/device/analyzer/attack_self(mob/user as mob)
/obj/item/device/analyzer/plant_analyzer
/obj/item/device/analyzer/plant_analyzer/attack_self(mob/user as mob)
/obj/item/device/assembly
/obj/item/device/assembly/activate()
/obj/item/device/assembly/attack_self(mob/user as mob)
/obj/item/device/assembly/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/device/assembly/describe()
/obj/item/device/assembly/examine(mob/user)
/obj/item/device/assembly/holder_movement()
/obj/item/device/assembly/igniter
/obj/item/device/assembly/igniter/New()
/obj/item/device/assembly/igniter/activate()
/obj/item/device/assembly/igniter/attack_self(mob/user as mob)
/obj/item/device/assembly/infra
/obj/item/device/assembly/infra/Move()
/obj/item/device/assembly/infra/Topic(href, href_list)
/obj/item/device/assembly/infra/activate()
/obj/item/device/assembly/infra/attack_hand()
/obj/item/device/assembly/infra/describe()
/obj/item/device/assembly/infra/holder_movement()
/obj/item/device/assembly/infra/interact(mob/user as mob)
/obj/item/device/assembly/infra/process()
/obj/item/device/assembly/infra/toggle_secure()
/obj/item/device/assembly/infra/trigger_beam()
/obj/item/device/assembly/infra/update_icon()
/obj/item/device/assembly/infra/verb/rotate()
/obj/item/device/assembly/interact(mob/user as mob)
/obj/item/device/assembly/is_secured(mob/user)
/obj/item/device/assembly/mousetrap
/obj/item/device/assembly/mousetrap/Crossed(var/atom/movable/AM as mob|obj)
/obj/item/device/assembly/mousetrap/activate()
/obj/item/device/assembly/mousetrap/armed
/obj/item/device/assembly/mousetrap/attack_hand(mob/living/carbon/human/user as mob)
/obj/item/device/assembly/mousetrap/attack_self(mob/living/carbon/human/user as mob)
/obj/item/device/assembly/mousetrap/describe()
/obj/item/device/assembly/mousetrap/examine(mob/user)
/obj/item/device/assembly/mousetrap/hitby(A as mob|obj)
/obj/item/device/assembly/mousetrap/on_found(mob/finder as mob)
/obj/item/device/assembly/mousetrap/triggered(mob/target as mob, var/type = "feet")
/obj/item/device/assembly/mousetrap/update_icon()
/obj/item/device/assembly/process()
/obj/item/device/assembly/process_cooldown()
/obj/item/device/assembly/prox_sensor
/obj/item/device/assembly/prox_sensor/HasProximity(atom/movable/AM as mob|obj)
/obj/item/device/assembly/prox_sensor/Move()
/obj/item/device/assembly/prox_sensor/Topic(href, href_list)
/obj/item/device/assembly/prox_sensor/activate()
/obj/item/device/assembly/prox_sensor/describe()
/obj/item/device/assembly/prox_sensor/dropped()
/obj/item/device/assembly/prox_sensor/interact(mob/user as mob)
/obj/item/device/assembly/prox_sensor/process()
/obj/item/device/assembly/prox_sensor/sense()
/obj/item/device/assembly/prox_sensor/toggle_scan()
/obj/item/device/assembly/prox_sensor/toggle_secure()
/obj/item/device/assembly/prox_sensor/update_icon()
/obj/item/device/assembly/pulse(var/radio = 0)
/obj/item/device/assembly/pulsed(var/radio = 0)
/obj/item/device/assembly/signaler
/obj/item/device/assembly/signaler/Destroy()
/obj/item/device/assembly/signaler/New()
/obj/item/device/assembly/signaler/Topic(href, href_list)
/obj/item/device/assembly/signaler/activate()
/obj/item/device/assembly/signaler/anomaly
/obj/item/device/assembly/signaler/anomaly/attack_self()
/obj/item/device/assembly/signaler/anomaly/receive_signal(datum/signal/signal)
/obj/item/device/assembly/signaler/interact(mob/user as mob, flag1)
/obj/item/device/assembly/signaler/receive_signal(datum/signal/signal)
/obj/item/device/assembly/signaler/reciever
/obj/item/device/assembly/signaler/reciever/activate()
/obj/item/device/assembly/signaler/reciever/describe()
/obj/item/device/assembly/signaler/reciever/receive_signal(datum/signal/signal)
/obj/item/device/assembly/signaler/reciever/toggle_safety()
/obj/item/device/assembly/signaler/set_frequency(new_frequency)
/obj/item/device/assembly/signaler/signal()
/obj/item/device/assembly/signaler/update_icon()
/obj/item/device/assembly/timer
/obj/item/device/assembly/timer/Topic(href, href_list)
/obj/item/device/assembly/timer/activate()
/obj/item/device/assembly/timer/describe()
/obj/item/device/assembly/timer/interact(mob/user as mob)
/obj/item/device/assembly/timer/process()
/obj/item/device/assembly/timer/timer_end()
/obj/item/device/assembly/timer/toggle_secure()
/obj/item/device/assembly/timer/update_icon()
/obj/item/device/assembly/toggle_secure()
/obj/item/device/assembly/voice
/obj/item/device/assembly/voice/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/obj/item/device/assembly/voice/activate()
/obj/item/device/assembly/voice/attack_self(mob/user)
/obj/item/device/assembly/voice/toggle_secure()
/obj/item/device/assembly_holder
/obj/item/device/assembly_holder/Crossed(atom/movable/AM as mob|obj)
/obj/item/device/assembly_holder/HasProximity(atom/movable/AM as mob|obj)
/obj/item/device/assembly_holder/IsAssemblyHolder()
/obj/item/device/assembly_holder/Move()
/obj/item/device/assembly_holder/assemble(var/obj/item/device/assembly/A, var/obj/item/device/assembly/A2, var/mob/user)
/obj/item/device/assembly_holder/attach(var/obj/item/device/assembly/A, var/mob/user)
/obj/item/device/assembly_holder/attack_hand()
/obj/item/device/assembly_holder/attack_self(mob/user as mob)
/obj/item/device/assembly_holder/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/device/assembly_holder/on_found(mob/finder as mob)
/obj/item/device/assembly_holder/process_activation(var/obj/D, var/normal = 1, var/special = 1)
/obj/item/device/assembly_holder/update_icon()
/obj/item/device/batterer
/obj/item/device/batterer/attack_self(mob/living/carbon/user as mob, flag = 0, emp = 0)
/obj/item/device/camera
/obj/item/device/camera/afterattack(atom/target, mob/user, flag)
/obj/item/device/camera/aipicture(mob/user, icon/temp, mobs, isAi)
/obj/item/device/camera/attack(mob/living/carbon/human/M, mob/user)
/obj/item/device/camera/attackby(obj/item/I, mob/user, params)
/obj/item/device/camera/camera_get_icon(list/turfs, turf/center)
/obj/item/device/camera/camera_get_mobs(turf/the_turf)
/obj/item/device/camera/captureimage(atom/target, mob/user, flag)
/obj/item/device/camera/examine(mob/user)
/obj/item/device/camera/injectaialbum(var/icon, var/img, var/desc, var/pixel_x, var/pixel_y, var/blueprintsinject)
/obj/item/device/camera/injectmasteralbum(var/icon, var/img, var/desc, var/pixel_x, var/pixel_y, var/blueprintsinject)
/obj/item/device/camera/printpicture(mob/user, icon/temp, mobs, flag)
/obj/item/device/camera/siliconcam
/obj/item/device/camera/siliconcam/ai_camera
/obj/item/device/camera/siliconcam/camera_mode_off()
/obj/item/device/camera/siliconcam/camera_mode_on()
/obj/item/device/camera/siliconcam/robot_camera
/obj/item/device/camera/siliconcam/robot_camera/borgprint()
/obj/item/device/camera/siliconcam/robot_camera/verb/borgprinting()
/obj/item/device/camera/siliconcam/selectpicture(var/obj/item/device/camera/siliconcam/targetloc)
/obj/item/device/camera/siliconcam/toggle_camera_mode()
/obj/item/device/camera/siliconcam/viewpichelper(var/obj/item/device/camera/siliconcam/targetloc)
/obj/item/device/camera/siliconcam/viewpictures(user)
/obj/item/device/camera_bug
/obj/item/device/camera_bug/Destroy()
/obj/item/device/camera_bug/New()
/obj/item/device/camera_bug/Topic(var/href,var/list/href_list)
/obj/item/device/camera_bug/attack_self(mob/user as mob)
/obj/item/device/camera_bug/attackby(var/obj/item/W as obj,var/mob/living/user as mob, params)
/obj/item/device/camera_bug/camera_report()
/obj/item/device/camera_bug/check_eye(var/mob/user as mob)
/obj/item/device/camera_bug/get_cameras()
/obj/item/device/camera_bug/interact(var/mob/user = usr)
/obj/item/device/camera_bug/menu(var/list/cameras)
/obj/item/device/camera_bug/process()
/obj/item/device/camera_film
/obj/item/device/chameleon
/obj/item/device/chameleon/afterattack(atom/target, mob/user , proximity)
/obj/item/device/chameleon/attack_self()
/obj/item/device/chameleon/disrupt(var/delete_dummy = 1)
/obj/item/device/chameleon/dropped()
/obj/item/device/chameleon/eject_all()
/obj/item/device/chameleon/equipped()
/obj/item/device/chameleon/toggle()
/obj/item/device/destTagger
/obj/item/device/destTagger/Topic(href, href_list)
/obj/item/device/destTagger/attack_self(mob/user as mob)
/obj/item/device/destTagger/openwindow(mob/user as mob)
/obj/item/device/detective_scanner
/obj/item/device/detective_scanner/add_log(var/msg, var/broadcast = 1)
/obj/item/device/detective_scanner/afterattack(atom/A, mob/user as mob, proximity)
/obj/item/device/detective_scanner/attack(mob/living/M as mob, mob/user as mob)
/obj/item/device/detective_scanner/attack_self(var/mob/user)
/obj/item/device/detective_scanner/scan(var/atom/A, var/mob/user)
/obj/item/device/doorCharge
/obj/item/device/doorCharge/ex_act(severity, target)
/obj/item/device/doorCharge/examine(mob/user)
/obj/item/device/electropack
/obj/item/device/electropack/Destroy()
/obj/item/device/electropack/Topic(href, href_list)
/obj/item/device/electropack/attack_hand(mob/user)
/obj/item/device/electropack/attack_self(mob/user)
/obj/item/device/electropack/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/device/electropack/initialize()
/obj/item/device/electropack/receive_signal(datum/signal/signal)
/obj/item/device/encryptionkey/
/obj/item/device/encryptionkey/New()
/obj/item/device/encryptionkey/ai
/obj/item/device/encryptionkey/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/device/encryptionkey/binary
/obj/item/device/encryptionkey/heads/captain
/obj/item/device/encryptionkey/heads/ce
/obj/item/device/encryptionkey/heads/cmo
/obj/item/device/encryptionkey/heads/hop
/obj/item/device/encryptionkey/heads/hos
/obj/item/device/encryptionkey/heads/rd
/obj/item/device/encryptionkey/headset_cargo
/obj/item/device/encryptionkey/headset_cent
/obj/item/device/encryptionkey/headset_com
/obj/item/device/encryptionkey/headset_eng
/obj/item/device/encryptionkey/headset_med
/obj/item/device/encryptionkey/headset_medsci
/obj/item/device/encryptionkey/headset_rob
/obj/item/device/encryptionkey/headset_sci
/obj/item/device/encryptionkey/headset_sec
/obj/item/device/encryptionkey/headset_service
/obj/item/device/encryptionkey/syndicate
/obj/item/device/firing_pin
/obj/item/device/firing_pin/New(newloc)
/obj/item/device/firing_pin/afterattack(atom/target, mob/user, proximity_flag)
/obj/item/device/firing_pin/alien
/obj/item/device/firing_pin/alien/pin_auth(mob/living/user)
/obj/item/device/firing_pin/auth_fail(mob/living/user)
/obj/item/device/firing_pin/clown
/obj/item/device/firing_pin/clown/pin_auth(mob/living/user)
/obj/item/device/firing_pin/clown/ultra/gun_insert(mob/living/user, var/obj/item/weapon/gun/G)
/obj/item/device/firing_pin/clown/ultra/gun_remove(mob/living/user)
/obj/item/device/firing_pin/clown/ultra/pin_auth(mob/living/user)
/obj/item/device/firing_pin/clown/ultra/selfdestruct
/obj/item/device/firing_pin/dna
/obj/item/device/firing_pin/dna/afterattack(atom/target, mob/user, proximity_flag)
/obj/item/device/firing_pin/dna/auth_fail(mob/living/carbon/user)
/obj/item/device/firing_pin/dna/dredd
/obj/item/device/firing_pin/dna/pin_auth(mob/living/carbon/user)
/obj/item/device/firing_pin/emag_act(mob/user)
/obj/item/device/firing_pin/gun_insert(mob/living/user, var/obj/item/weapon/gun/G)
/obj/item/device/firing_pin/gun_remove(mob/living/user)
/obj/item/device/firing_pin/implant
/obj/item/device/firing_pin/implant/loyalty
/obj/item/device/firing_pin/implant/pin_auth(mob/living/user)
/obj/item/device/firing_pin/implant/pindicate
/obj/item/device/firing_pin/magic
/obj/item/device/firing_pin/pin_auth(mob/living/user)
/obj/item/device/firing_pin/tag
/obj/item/device/firing_pin/tag/blue
/obj/item/device/firing_pin/tag/pin_auth(mob/living/user)
/obj/item/device/firing_pin/tag/red
/obj/item/device/firing_pin/test_range
/obj/item/device/firing_pin/test_range/pin_auth(mob/living/user)
/obj/item/device/flash
/obj/item/device/flash/attack(mob/living/M, mob/user)
/obj/item/device/flash/attack_self(mob/living/carbon/user, flag = 0, emp = 0)
/obj/item/device/flash/burn_out()
/obj/item/device/flash/clown_check(mob/living/carbon/human/user)
/obj/item/device/flash/cyborg
/obj/item/device/flash/cyborg/attack(mob/living/M, mob/user)
/obj/item/device/flash/cyborg/attack_self(mob/user)
/obj/item/device/flash/cyborg/cyborg_flash_animation(var/mob/living/user)
/obj/item/device/flash/emp_act(severity)
/obj/item/device/flash/flash_carbon(var/mob/living/carbon/M, var/mob/user = null, var/power = 5, targeted = 1)
/obj/item/device/flash/flash_recharge(var/mob/user)
/obj/item/device/flash/handheld
/obj/item/device/flash/memorizer
/obj/item/device/flash/terrible_conversion_proc(var/mob/M, var/mob/user)
/obj/item/device/flash/try_use_flash(var/mob/user = null)
/obj/item/device/flashlight
/obj/item/device/flashlight/attack(mob/living/carbon/human/M as mob, mob/living/carbon/human/user as mob)
/obj/item/device/flashlight/attack_self(mob/user)
/obj/item/device/flashlight/dropped(mob/user)
/obj/item/device/flashlight/emp
/obj/item/device/flashlight/emp/Destroy()
/obj/item/device/flashlight/emp/New()
/obj/item/device/flashlight/emp/afterattack(atom/A as mob|obj, mob/user, proximity)
/obj/item/device/flashlight/emp/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/device/flashlight/emp/process()
/obj/item/device/flashlight/flare
/obj/item/device/flashlight/flare/New()
/obj/item/device/flashlight/flare/attack_self(mob/user)
/obj/item/device/flashlight/flare/process()
/obj/item/device/flashlight/flare/torch
/obj/item/device/flashlight/flare/turn_off()
/obj/item/device/flashlight/flare/update_brightness(var/mob/user = null)
/obj/item/device/flashlight/initialize()
/obj/item/device/flashlight/lamp
/obj/item/device/flashlight/lamp/bananalamp
/obj/item/device/flashlight/lamp/green
/obj/item/device/flashlight/lamp/verb/toggle_light()
/obj/item/device/flashlight/lantern
/obj/item/device/flashlight/pen
/obj/item/device/flashlight/pen/CreateHolo(var/tturf,var/creator)
/obj/item/device/flashlight/pen/afterattack(atom/target, mob/user, proximity_flag)
/obj/item/device/flashlight/pickup(mob/user)
/obj/item/device/flashlight/seclite
/obj/item/device/flashlight/slime
/obj/item/device/flashlight/update_brightness(var/mob/user = null)
/obj/item/device/gangtool
/obj/item/device/gangtool/New()
/obj/item/device/gangtool/Topic(href, href_list)
/obj/item/device/gangtool/attack_self(mob/user)
/obj/item/device/gangtool/can_use(mob/living/carbon/human/user)
/obj/item/device/gangtool/lt
/obj/item/device/gangtool/ping_gang(var/mob/user)
/obj/item/device/gangtool/recall(mob/user)
/obj/item/device/gangtool/register_device(var/mob/user)
/obj/item/device/gps
/obj/item/device/gps/Destroy()
/obj/item/device/gps/New()
/obj/item/device/gps/Topic(href, href_list)
/obj/item/device/gps/attack_self(mob/user as mob)
/obj/item/device/gps/emp_act(severity)
/obj/item/device/gps/engineering
/obj/item/device/gps/mining
/obj/item/device/gps/science
/obj/item/device/healthanalyzer
/obj/item/device/healthanalyzer/attack(mob/living/M as mob, mob/living/carbon/human/user as mob)
/obj/item/device/healthanalyzer/attack_self(mob/user)
/obj/item/device/healthanalyzer/verb/toggle_mode()
/obj/item/device/instrument
/obj/item/device/instrument/Destroy()
/obj/item/device/instrument/New()
/obj/item/device/instrument/attack_self(mob/user as mob)
/obj/item/device/instrument/guitar
/obj/item/device/instrument/initialize()
/obj/item/device/instrument/interact(mob/user as mob)
/obj/item/device/instrument/violin
/obj/item/device/laser_pointer
/obj/item/device/laser_pointer/New()
/obj/item/device/laser_pointer/afterattack(var/atom/target, var/mob/living/user, flag, params)
/obj/item/device/laser_pointer/attack(mob/living/M, mob/user)
/obj/item/device/laser_pointer/attackby(obj/item/W, mob/user, params)
/obj/item/device/laser_pointer/blue
/obj/item/device/laser_pointer/green
/obj/item/device/laser_pointer/laser_act(var/atom/target, var/mob/living/user)
/obj/item/device/laser_pointer/process()
/obj/item/device/laser_pointer/purple
/obj/item/device/laser_pointer/red
/obj/item/device/laser_pointer/upgraded/New()
/obj/item/device/lightreplacer
/obj/item/device/lightreplacer/AddUses(var/amount = 1)
/obj/item/device/lightreplacer/CanUse(var/mob/living/user)
/obj/item/device/lightreplacer/Charge(var/mob/user)
/obj/item/device/lightreplacer/Emag()
/obj/item/device/lightreplacer/New()
/obj/item/device/lightreplacer/ReplaceLight(var/obj/machinery/light/target, var/mob/living/U)
/obj/item/device/lightreplacer/Use(var/mob/user)
/obj/item/device/lightreplacer/attack_self(mob/user)
/obj/item/device/lightreplacer/attackby(obj/item/W, mob/user, params)
/obj/item/device/lightreplacer/cyborg
/obj/item/device/lightreplacer/cyborg/janicart_insert(mob/user, obj/structure/janitorialcart/J)
/obj/item/device/lightreplacer/emag_act()
/obj/item/device/lightreplacer/examine(mob/user)
/obj/item/device/lightreplacer/janicart_insert(mob/user, obj/structure/janitorialcart/J)
/obj/item/device/lightreplacer/update_icon()
/obj/item/device/mass_spectrometer
/obj/item/device/mass_spectrometer/New()
/obj/item/device/mass_spectrometer/adv
/obj/item/device/mass_spectrometer/attack_self(mob/user as mob)
/obj/item/device/mass_spectrometer/on_reagent_change()
/obj/item/device/megaphone
/obj/item/device/megaphone/attack_self(mob/living/carbon/human/user as mob)
/obj/item/device/megaphone/cargo
/obj/item/device/megaphone/command
/obj/item/device/megaphone/emag_act(mob/user)
/obj/item/device/megaphone/sec
/obj/item/device/mining_scanner
/obj/item/device/mining_scanner/admin
/obj/item/device/mining_scanner/admin/attack_self(mob/user)
/obj/item/device/mining_scanner/attack_self(mob/user)
/obj/item/device/mmi
/obj/item/device/mmi/Destroy()
/obj/item/device/mmi/attack_self(mob/user as mob)
/obj/item/device/mmi/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/device/mmi/emp_act(severity)
/obj/item/device/mmi/examine(mob/user)
/obj/item/device/mmi/posibrain
/obj/item/device/mmi/posibrain/New()
/obj/item/device/mmi/posibrain/Topic(href, href_list)
/obj/item/device/mmi/posibrain/activate(mob/user)
/obj/item/device/mmi/posibrain/attack_ghost(mob/user)
/obj/item/device/mmi/posibrain/attack_self(mob/user as mob)
/obj/item/device/mmi/posibrain/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/device/mmi/posibrain/examine()
/obj/item/device/mmi/posibrain/ping_ghosts(var/msg)
/obj/item/device/mmi/posibrain/transfer_identity(var/mob/living/carbon/H)
/obj/item/device/mmi/posibrain/transfer_personality(var/mob/candidate)
/obj/item/device/mmi/posibrain/update_icon()
/obj/item/device/mmi/radio_enabled
/obj/item/device/mmi/radio_enabled/New()
/obj/item/device/mmi/radio_enabled/verb/Toggle_Listening()
/obj/item/device/mmi/transfer_identity(var/mob/living/carbon/human/H)
/obj/item/device/mmi/update_icon()
/obj/item/device/multitool
/obj/item/device/multitool/ai_detect
/obj/item/device/multitool/ai_detect/Destroy()
/obj/item/device/multitool/ai_detect/New()
/obj/item/device/multitool/ai_detect/process()
/obj/item/device/multitool/uplink/New()
/obj/item/device/multitool/uplink/attack_self(mob/user as mob)
/obj/item/device/necromantic_stone
/obj/item/device/necromantic_stone/attack(mob/living/carbon/human/M, mob/living/carbon/human/user)
/obj/item/device/necromantic_stone/check_spooky()
/obj/item/device/necromantic_stone/equip_roman_skeleton(var/mob/living/carbon/human/H)
/obj/item/device/necromantic_stone/unlimited
/obj/item/device/onetankbomb
/obj/item/device/onetankbomb/Crossed(atom/movable/AM as mob|obj)
/obj/item/device/onetankbomb/HasProximity(atom/movable/AM as mob|obj)
/obj/item/device/onetankbomb/attack_self(mob/user as mob)
/obj/item/device/onetankbomb/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/device/onetankbomb/examine(mob/user)
/obj/item/device/onetankbomb/on_found(mob/finder as mob)
/obj/item/device/onetankbomb/receive_signal()
/obj/item/device/onetankbomb/update_icon()
/obj/item/device/paicard
/obj/item/device/paicard/Destroy()
/obj/item/device/paicard/New()
/obj/item/device/paicard/Topic(href, href_list)
/obj/item/device/paicard/alertUpdate()
/obj/item/device/paicard/attack_self(mob/user)
/obj/item/device/paicard/emp_act(severity)
/obj/item/device/paicard/removePersonality()
/obj/item/device/paicard/setEmotion(var/emotion)
/obj/item/device/paicard/setPersonality(mob/living/silicon/pai/personality)
/obj/item/device/pda
/obj/item/device/pda/AltClick()
/obj/item/device/pda/Destroy()
/obj/item/device/pda/GetAccess()
/obj/item/device/pda/GetID()
/obj/item/device/pda/MouseDrop(obj/over_object as obj, src_location, over_location)
/obj/item/device/pda/New()
/obj/item/device/pda/Topic(href, href_list)
/obj/item/device/pda/afterattack(atom/A as mob|obj|turf|area, mob/user as mob, proximity)
/obj/item/device/pda/ai
/obj/item/device/pda/ai/attack_self(mob/user as mob)
/obj/item/device/pda/ai/pai
/obj/item/device/pda/atmos
/obj/item/device/pda/attack(mob/living/carbon/C, mob/living/user as mob)
/obj/item/device/pda/attack_self(mob/user as mob)
/obj/item/device/pda/attackby(obj/item/C as obj, mob/user as mob, params)
/obj/item/device/pda/bar
/obj/item/device/pda/botanist
/obj/item/device/pda/can_use(mob/user)
/obj/item/device/pda/captain
/obj/item/device/pda/cargo
/obj/item/device/pda/chaplain
/obj/item/device/pda/chemist
/obj/item/device/pda/clear
/obj/item/device/pda/clown
/obj/item/device/pda/clown/Crossed(AM as mob|obj)
/obj/item/device/pda/cook
/obj/item/device/pda/create_message(var/mob/living/U = usr, var/obj/item/device/pda/P)
/obj/item/device/pda/detective
/obj/item/device/pda/dropped(mob/user)
/obj/item/device/pda/emp_act(severity)
/obj/item/device/pda/engineering
/obj/item/device/pda/explode()
/obj/item/device/pda/geneticist
/obj/item/device/pda/heads
/obj/item/device/pda/heads/ce
/obj/item/device/pda/heads/cmo
/obj/item/device/pda/heads/hop
/obj/item/device/pda/heads/hos
/obj/item/device/pda/heads/rd
/obj/item/device/pda/id_check(mob/user as mob, choice as num)
/obj/item/device/pda/janitor
/obj/item/device/pda/lawyer
/obj/item/device/pda/librarian
/obj/item/device/pda/medical
/obj/item/device/pda/mime
/obj/item/device/pda/msg_chat(channel as text, sender as text, message as text)
/obj/item/device/pda/msg_input(var/mob/living/U = usr)
/obj/item/device/pda/pickup(mob/user)
/obj/item/device/pda/quartermaster
/obj/item/device/pda/remove_id()
/obj/item/device/pda/roboticist
/obj/item/device/pda/security
/obj/item/device/pda/setup_chatrooms()
/obj/item/device/pda/shaftminer
/obj/item/device/pda/syndicate
/obj/item/device/pda/toxins
/obj/item/device/pda/update_label()
/obj/item/device/pda/verb/verb_remove_id()
/obj/item/device/pda/verb/verb_remove_pen()
/obj/item/device/pda/viro
/obj/item/device/pda/warden
/obj/item/device/pipe_painter
/obj/item/device/pipe_painter/afterattack(atom/A, mob/user as mob, proximity_flag)
/obj/item/device/pipe_painter/attack_self(mob/user as mob)
/obj/item/device/pipe_painter/examine()
/obj/item/device/pizza_bomb
/obj/item/device/pizza_bomb/New()
/obj/item/device/pizza_bomb/attack_self(mob/user)
/obj/item/device/pizza_bomb/attackby(var/obj/item/I, var/mob/user, params)
/obj/item/device/pizza_bomb/go_boom()
/obj/item/device/pizza_bomb/suicide_act(mob/user)
/obj/item/device/powersink
/obj/item/device/powersink/attack_ai()
/obj/item/device/powersink/attack_hand(var/mob/user)
/obj/item/device/powersink/attack_paw()
/obj/item/device/powersink/attackby(var/obj/item/I, var/mob/user, params)
/obj/item/device/powersink/process()
/obj/item/device/powersink/set_mode(value)
/obj/item/device/powersink/update_icon()
/obj/item/device/rad_laser
/obj/item/device/rad_laser/Topic(href, href_list)
/obj/item/device/rad_laser/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/device/rad_laser/attack_self(mob/user as mob)
/obj/item/device/rad_laser/handle_cooldown(var/cooldown)
/obj/item/device/rad_laser/interact(mob/user as mob)
/obj/item/device/radio
/obj/item/device/radio/Destroy()
/obj/item/device/radio/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/obj/item/device/radio/MouseDrop(obj/over_object as obj, src_location, over_location)
/obj/item/device/radio/New()
/obj/item/device/radio/Topic(href, href_list)
/obj/item/device/radio/attack_self(mob/user as mob)
/obj/item/device/radio/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/device/radio/beacon
/obj/item/device/radio/beacon/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/obj/item/device/radio/beacon/send_hear()
/obj/item/device/radio/beacon/verb/alter_signal(t as text)
/obj/item/device/radio/borg
/obj/item/device/radio/borg/Topic(href, href_list)
/obj/item/device/radio/borg/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/device/radio/borg/interact(mob/user as mob)
/obj/item/device/radio/borg/syndicate
/obj/item/device/radio/borg/syndicate/New()
/obj/item/device/radio/emp_act(severity)
/obj/item/device/radio/examine(mob/user)
/obj/item/device/radio/headset
/obj/item/device/radio/headset/Destroy()
/obj/item/device/radio/headset/New()
/obj/item/device/radio/headset/ai
/obj/item/device/radio/headset/ai/receive_range(freq, level)
/obj/item/device/radio/headset/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/device/radio/headset/binary
/obj/item/device/radio/headset/binary/New()
/obj/item/device/radio/headset/heads/captain
/obj/item/device/radio/headset/heads/captain/alt
/obj/item/device/radio/headset/heads/ce
/obj/item/device/radio/headset/heads/cmo
/obj/item/device/radio/headset/heads/hop
/obj/item/device/radio/headset/heads/hos
/obj/item/device/radio/headset/heads/hos/alt
/obj/item/device/radio/headset/heads/rd
/obj/item/device/radio/headset/headset_cargo
/obj/item/device/radio/headset/headset_cent
/obj/item/device/radio/headset/headset_cent/alt
/obj/item/device/radio/headset/headset_cent/commander
/obj/item/device/radio/headset/headset_com
/obj/item/device/radio/headset/headset_eng
/obj/item/device/radio/headset/headset_med
/obj/item/device/radio/headset/headset_medsci
/obj/item/device/radio/headset/headset_rob
/obj/item/device/radio/headset/headset_sci
/obj/item/device/radio/headset/headset_sec
/obj/item/device/radio/headset/headset_sec/alt
/obj/item/device/radio/headset/headset_sec/alt/department/engi
/obj/item/device/radio/headset/headset_sec/alt/department/med
/obj/item/device/radio/headset/headset_sec/alt/department/sci
/obj/item/device/radio/headset/headset_sec/alt/department/supply
/obj/item/device/radio/headset/headset_sec/department/New()
/obj/item/device/radio/headset/headset_srv
/obj/item/device/radio/headset/recalculateChannels()
/obj/item/device/radio/headset/receive_range(freq, level, var/AIuser)
/obj/item/device/radio/headset/syndicate
/obj/item/device/radio/headset/syndicate/New()
/obj/item/device/radio/headset/syndicate/alt
/obj/item/device/radio/headset/talk_into(mob/living/M, message, channel, list/spans)
/obj/item/device/radio/headset/uplink
/obj/item/device/radio/headset/uplink/New()
/obj/item/device/radio/initialize()
/obj/item/device/radio/interact(mob/user as mob)
/obj/item/device/radio/intercom
/obj/item/device/radio/intercom/Destroy()
/obj/item/device/radio/intercom/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/obj/item/device/radio/intercom/New()
/obj/item/device/radio/intercom/attack_ai(mob/user as mob)
/obj/item/device/radio/intercom/attack_hand(mob/user as mob)
/obj/item/device/radio/intercom/attack_paw(mob/user as mob)
/obj/item/device/radio/intercom/process()
/obj/item/device/radio/intercom/receive_range(freq, level)
/obj/item/device/radio/intercom/rejects_blood()
/obj/item/device/radio/isWireCut(var/index)
/obj/item/device/radio/make_syndie()
/obj/item/device/radio/off
/obj/item/device/radio/recalculateChannels()
/obj/item/device/radio/receive_range(freq, level)
/obj/item/device/radio/send_hear(freq, level)
/obj/item/device/radio/set_frequency(new_frequency)
/obj/item/device/radio/talk_into(atom/movable/M, message, channel, list/spans)
/obj/item/device/radio/text_sec_channel(var/chan_name, var/chan_stat)
/obj/item/device/radio/text_wires()
/obj/item/device/radio/uplink/New()
/obj/item/device/radio/uplink/attack_self(mob/user as mob)
/obj/item/device/radio/uplink/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/device/sbeacondrop
/obj/item/device/sbeacondrop/attack_self(mob/user as mob)
/obj/item/device/sbeacondrop/bomb
/obj/item/device/sensor_device
/obj/item/device/sensor_device/attack_self(mob/user as mob)
/obj/item/device/slime_scanner
/obj/item/device/slime_scanner/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/device/soulstone
/obj/item/device/soulstone/Topic(href, href_list)
/obj/item/device/soulstone/anybody
/obj/item/device/soulstone/attack(mob/living/carbon/human/M as mob, mob/user as mob)
/obj/item/device/soulstone/attack_self(mob/user)
/obj/item/device/soulstone/init_shade(var/obj/item/device/soulstone/C, var/mob/living/carbon/human/T, var/mob/U as mob, var/vic = 0)
/obj/item/device/soulstone/pickup(mob/living/user as mob)
/obj/item/device/syndicatedetonator
/obj/item/device/syndicatedetonator/attack_self(mob/user as mob)
/obj/item/device/t_scanner
/obj/item/device/t_scanner/adv_mining_scanner
/obj/item/device/t_scanner/adv_mining_scanner/scan()
/obj/item/device/t_scanner/attack_self(mob/user)
/obj/item/device/t_scanner/process()
/obj/item/device/t_scanner/scan()
/obj/item/device/tape
/obj/item/device/tape/attack_self(mob/user)
/obj/item/device/tape/attackby(obj/item/I, mob/user, params)
/obj/item/device/tape/fix()
/obj/item/device/tape/random/New()
/obj/item/device/tape/ruin()
/obj/item/device/taperecorder
/obj/item/device/taperecorder/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, spans)
/obj/item/device/taperecorder/New()
/obj/item/device/taperecorder/attack_hand(mob/user)
/obj/item/device/taperecorder/attack_self(mob/user)
/obj/item/device/taperecorder/attackby(obj/item/I, mob/user, params)
/obj/item/device/taperecorder/can_use(mob/user)
/obj/item/device/taperecorder/eject(mob/user)
/obj/item/device/taperecorder/empty/New()
/obj/item/device/taperecorder/examine(mob/user)
/obj/item/device/taperecorder/update_icon()
/obj/item/device/taperecorder/verb/ejectverb()
/obj/item/device/taperecorder/verb/play()
/obj/item/device/taperecorder/verb/print_transcript()
/obj/item/device/taperecorder/verb/record()
/obj/item/device/taperecorder/verb/stop()
/obj/item/device/telepad_beacon
/obj/item/device/telepad_beacon/attack_self(mob/user as mob)
/obj/item/device/toner
/obj/item/device/transfer_valve
/obj/item/device/transfer_valve/HasProximity(atom/movable/AM as mob|obj)
/obj/item/device/transfer_valve/IsAssemblyHolder()
/obj/item/device/transfer_valve/Topic(href, href_list)
/obj/item/device/transfer_valve/attack_self(mob/user as mob)
/obj/item/device/transfer_valve/attackby(obj/item/item, mob/user, params)
/obj/item/device/transfer_valve/c_state()
/obj/item/device/transfer_valve/merge_gases()
/obj/item/device/transfer_valve/process_activation(var/obj/item/device/D)
/obj/item/device/transfer_valve/split_gases()
/obj/item/device/transfer_valve/toggle_valve()
/obj/item/device/transfer_valve/update_icon()
/obj/item/device/uplink
/obj/item/device/uplink/Destroy()
/obj/item/device/uplink/New()
/obj/item/device/uplink/Topic(href, href_list)
/obj/item/device/uplink/generate_menu()
/obj/item/device/uplink/hidden
/obj/item/device/uplink/hidden/Topic(href, href_list)
/obj/item/device/uplink/hidden/check_trigger(mob/user as mob, var/value, var/target)
/obj/item/device/uplink/hidden/toggle()
/obj/item/device/uplink/hidden/trigger(mob/user as mob)
/obj/item/device/uplink/interact(mob/user as mob)
/obj/item/device/wormhole_jaunter
/obj/item/device/wormhole_jaunter/attack_self(mob/user as mob)
/obj/item/documents
/obj/item/documents/nanotrasen
/obj/item/documents/syndicate
/obj/item/documents/syndicate/blue
/obj/item/documents/syndicate/red
/obj/item/drone_shell
/obj/item/drone_shell/attack_ghost(mob/user)
/obj/item/drone_shell/syndrone
/obj/item/dropped(mob/user as mob)
/obj/item/effect/kinetic_blast
/obj/item/effect/kinetic_blast/New()
/obj/item/equipped(mob/user, slot)
/obj/item/ex_act(severity, target)
/obj/item/examine(mob/user)
/obj/item/eyestab(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/firealarm_frame
/obj/item/firealarm_frame/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/firealarm_frame/try_build(turf/on_wall)
/obj/item/get_clamped_volume()
/obj/item/gland/
/obj/item/gland/HostCheck()
/obj/item/gland/Inject(var/mob/living/carbon/human/target)
/obj/item/gland/Start()
/obj/item/gland/activate()
/obj/item/gland/bloody
/obj/item/gland/bloody/activate()
/obj/item/gland/bodysnatch
/obj/item/gland/bodysnatch/activate()
/obj/item/gland/egg
/obj/item/gland/egg/activate()
/obj/item/gland/emp
/obj/item/gland/emp/activate()
/obj/item/gland/heals
/obj/item/gland/heals/activate()
/obj/item/gland/mindshock
/obj/item/gland/mindshock/activate()
/obj/item/gland/plasma
/obj/item/gland/plasma/activate()
/obj/item/gland/pop
/obj/item/gland/pop/activate()
/obj/item/gland/process()
/obj/item/gland/slime
/obj/item/gland/slime/activate()
/obj/item/gland/spiderman
/obj/item/gland/spiderman/activate()
/obj/item/gland/ventcrawling
/obj/item/gland/ventcrawling/activate()
/obj/item/gland/viral
/obj/item/gland/viral/activate()
/obj/item/hand_labeler_refill
/obj/item/help_light_cig(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/holotape
/obj/item/holotape/Bumped(var/mob/M)
/obj/item/holotape/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/item/holotape/attack_hand(mob/living/user)
/obj/item/holotape/attack_paw(mob/living/user)
/obj/item/holotape/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/holotape/blob_act()
/obj/item/holotape/breaktape()
/obj/item/holotape/bullet_act(var/obj/item/projectile/Proj)
/obj/item/holotape/engineering
/obj/item/holotape/ex_act(severity, target)
/obj/item/holotape/healthcheck()
/obj/item/holotape/hitby(AM as mob|obj)
/obj/item/holotape/security
/obj/item/janiupgrade
/obj/item/key
/obj/item/key/janitor
/obj/item/key/security
/obj/item/latexballon
/obj/item/latexballon/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/latexballon/blow(obj/item/weapon/tank/tank, mob/user as mob)
/obj/item/latexballon/bullet_act()
/obj/item/latexballon/burst()
/obj/item/latexballon/ex_act(severity, target)
/obj/item/latexballon/temperature_expose(datum/gas_mixture/air, temperature, volume)
/obj/item/light_fixture_frame
/obj/item/light_fixture_frame/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/light_fixture_frame/small
/obj/item/light_fixture_frame/try_build(turf/on_wall)
/obj/item/mecha_parts
/obj/item/mecha_parts/chassis
/obj/item/mecha_parts/chassis/attack_hand()
/obj/item/mecha_parts/chassis/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/mecha_parts/chassis/durand
/obj/item/mecha_parts/chassis/durand/New()
/obj/item/mecha_parts/chassis/firefighter
/obj/item/mecha_parts/chassis/firefighter/New()
/obj/item/mecha_parts/chassis/gygax
/obj/item/mecha_parts/chassis/gygax/New()
/obj/item/mecha_parts/chassis/honker
/obj/item/mecha_parts/chassis/honker/New()
/obj/item/mecha_parts/chassis/odysseus
/obj/item/mecha_parts/chassis/odysseus/New()
/obj/item/mecha_parts/chassis/phazon
/obj/item/mecha_parts/chassis/phazon/New()
/obj/item/mecha_parts/chassis/ripley
/obj/item/mecha_parts/chassis/ripley/New()
/obj/item/mecha_parts/mecha_equipment
/obj/item/mecha_parts/mecha_equipment/New()
/obj/item/mecha_parts/mecha_equipment/Topic(href,href_list)
/obj/item/mecha_parts/mecha_equipment/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/action_checks(atom/target)
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster/detach()
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster/dynattackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/detach()
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/dynbulletdamage(var/obj/item/projectile/Proj)
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/dynhitby(atom/movable/A)
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/critfail()
/obj/item/mecha_parts/mecha_equipment/destroy()
/obj/item/mecha_parts/mecha_equipment/detach(atom/moveto=null)
/obj/item/mecha_parts/mecha_equipment/do_after_cooldown(target=1)
/obj/item/mecha_parts/mecha_equipment/generator
/obj/item/mecha_parts/mecha_equipment/generator/Destroy()
/obj/item/mecha_parts/mecha_equipment/generator/New()
/obj/item/mecha_parts/mecha_equipment/generator/Topic(href, href_list)
/obj/item/mecha_parts/mecha_equipment/generator/action(target)
/obj/item/mecha_parts/mecha_equipment/generator/attackby(weapon,mob/user, params)
/obj/item/mecha_parts/mecha_equipment/generator/critfail()
/obj/item/mecha_parts/mecha_equipment/generator/detach()
/obj/item/mecha_parts/mecha_equipment/generator/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/generator/init()
/obj/item/mecha_parts/mecha_equipment/generator/load_fuel(var/obj/item/stack/sheet/P)
/obj/item/mecha_parts/mecha_equipment/generator/nuclear
/obj/item/mecha_parts/mecha_equipment/generator/nuclear/critfail()
/obj/item/mecha_parts/mecha_equipment/generator/nuclear/init()
/obj/item/mecha_parts/mecha_equipment/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/gravcatapult
/obj/item/mecha_parts/mecha_equipment/gravcatapult/Topic(href, href_list)
/obj/item/mecha_parts/mecha_equipment/gravcatapult/action(atom/movable/target)
/obj/item/mecha_parts/mecha_equipment/gravcatapult/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/is_melee()
/obj/item/mecha_parts/mecha_equipment/is_ranged()
/obj/item/mecha_parts/mecha_equipment/log_message(message)
/obj/item/mecha_parts/mecha_equipment/occupant_message(message)
/obj/item/mecha_parts/mecha_equipment/repair_droid
/obj/item/mecha_parts/mecha_equipment/repair_droid/Destroy()
/obj/item/mecha_parts/mecha_equipment/repair_droid/New()
/obj/item/mecha_parts/mecha_equipment/repair_droid/Topic(href, href_list)
/obj/item/mecha_parts/mecha_equipment/repair_droid/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/repair_droid/destroy()
/obj/item/mecha_parts/mecha_equipment/repair_droid/detach()
/obj/item/mecha_parts/mecha_equipment/repair_droid/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/set_ready_state(state)
/obj/item/mecha_parts/mecha_equipment/teleporter
/obj/item/mecha_parts/mecha_equipment/teleporter/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/Destroy()
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/New()
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/Topic(href, href_list)
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/attach(obj/mecha/M)
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/can_attach(obj/mecha/M)
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/detach()
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/dyngetcharge()
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/get_power_channel(var/area/A)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/New()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/Topic(href,href_list)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/action(var/obj/item/stack/cable_coil/target)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/attach()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/can_attach(obj/mecha/working/M)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/destroy()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/detach()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/dismantleFloor(var/turf/new_turf)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/layCable(var/turf/new_turf)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/load_cable(var/obj/item/stack/cable_coil/CC)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/reset()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/use_cable(amount)
/obj/item/mecha_parts/mecha_equipment/tool/drill
/obj/item/mecha_parts/mecha_equipment/tool/drill/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/drill/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/drill/diamonddrill
/obj/item/mecha_parts/mecha_equipment/tool/drill/diamonddrill/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/drill/drill_mob(mob/living/target, mob/user, var/drill_damage=80)
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher/New()
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher/can_attach(obj/mecha/working/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher/on_reagent_change()
/obj/item/mecha_parts/mecha_equipment/tool/hydraulic_clamp
/obj/item/mecha_parts/mecha_equipment/tool/hydraulic_clamp/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/hydraulic_clamp/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/hydraulic_clamp/can_attach(obj/mecha/working/ripley/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/hydraulic_clamp/detach(atom/moveto = null)
/obj/item/mecha_parts/mecha_equipment/tool/mining_scanner
/obj/item/mecha_parts/mecha_equipment/tool/mining_scanner/New()
/obj/item/mecha_parts/mecha_equipment/tool/mining_scanner/process()
/obj/item/mecha_parts/mecha_equipment/tool/rcd
/obj/item/mecha_parts/mecha_equipment/tool/rcd/Topic(href,href_list)
/obj/item/mecha_parts/mecha_equipment/tool/rcd/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/rcd/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/safety_clamp
/obj/item/mecha_parts/mecha_equipment/tool/safety_clamp/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/safety_clamp/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/safety_clamp/can_attach(obj/mecha/working/ripley/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/Exit(atom/movable/O)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/New()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/Topic(href,href_list)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/action(var/mob/living/carbon/target)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/allow_drop()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/can_attach(obj/mecha/medical/M)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/container_resist()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/destroy()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/detach()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/get_available_reagents()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/get_occupant_dam()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/get_occupant_reagents()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/get_occupant_stats()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/go_out()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/inject_reagent(var/datum/reagent/R,var/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/SG)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/update_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/New()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/Topic(href,href_list)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/action(atom/movable/target)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/add_known_reagent(r_id,r_name)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/analyze_reagents(atom/A)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/can_attach(obj/mecha/medical/M)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/critfail()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/detach()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/get_current_reagents()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/get_reagents_form()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/get_reagents_list()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/get_reagents_page()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/load_syringe(obj/item/weapon/reagent_containers/syringe/S)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/on_reagent_change()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/update_equip_info()
/obj/item/mecha_parts/mecha_equipment/update_chassis_page()
/obj/item/mecha_parts/mecha_equipment/update_equip_info()
/obj/item/mecha_parts/mecha_equipment/weapon
/obj/item/mecha_parts/mecha_equipment/weapon/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/Topic(href, href_list)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/action_checks(target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/carbine
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/get_shot_amount()
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/lmg
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/banana_mortar
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/banana_mortar/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/banana_mortar/can_attach(obj/mecha/combat/honker/M as obj)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/flashbang
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/flashbang/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/flashbang/clusterbang
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/mousetrap_mortar
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/mousetrap_mortar/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/mousetrap_mortar/can_attach(obj/mecha/combat/honker/M as obj)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/rearm()
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/scattershot
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/silenced
/obj/item/mecha_parts/mecha_equipment/weapon/can_attach(var/obj/mecha/combat/M as obj)
/obj/item/mecha_parts/mecha_equipment/weapon/energy
/obj/item/mecha_parts/mecha_equipment/weapon/energy/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/weapon/energy/get_shot_amount()
/obj/item/mecha_parts/mecha_equipment/weapon/energy/ion
/obj/item/mecha_parts/mecha_equipment/weapon/energy/laser
/obj/item/mecha_parts/mecha_equipment/weapon/energy/laser/heavy
/obj/item/mecha_parts/mecha_equipment/weapon/energy/plasma
/obj/item/mecha_parts/mecha_equipment/weapon/energy/plasma/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/weapon/energy/pulse
/obj/item/mecha_parts/mecha_equipment/weapon/energy/taser
/obj/item/mecha_parts/mecha_equipment/weapon/get_shot_amount()
/obj/item/mecha_parts/mecha_equipment/weapon/honker
/obj/item/mecha_parts/mecha_equipment/weapon/honker/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/honker/can_attach(obj/mecha/combat/honker/M as obj)
/obj/item/mecha_parts/mecha_equipment/wormhole_generator
/obj/item/mecha_parts/mecha_equipment/wormhole_generator/action(atom/target)
/obj/item/mecha_parts/mecha_tracking
/obj/item/mecha_parts/mecha_tracking/emp_act()
/obj/item/mecha_parts/mecha_tracking/ex_act()
/obj/item/mecha_parts/mecha_tracking/get_mecha_info()
/obj/item/mecha_parts/mecha_tracking/get_mecha_log()
/obj/item/mecha_parts/mecha_tracking/in_mecha()
/obj/item/mecha_parts/mecha_tracking/shock()
/obj/item/mecha_parts/part/durand_armor
/obj/item/mecha_parts/part/durand_head
/obj/item/mecha_parts/part/durand_left_arm
/obj/item/mecha_parts/part/durand_left_leg
/obj/item/mecha_parts/part/durand_right_arm
/obj/item/mecha_parts/part/durand_right_leg
/obj/item/mecha_parts/part/durand_torso
/obj/item/mecha_parts/part/gygax_armor
/obj/item/mecha_parts/part/gygax_head
/obj/item/mecha_parts/part/gygax_left_arm
/obj/item/mecha_parts/part/gygax_left_leg
/obj/item/mecha_parts/part/gygax_right_arm
/obj/item/mecha_parts/part/gygax_right_leg
/obj/item/mecha_parts/part/gygax_torso
/obj/item/mecha_parts/part/honker_head
/obj/item/mecha_parts/part/honker_left_arm
/obj/item/mecha_parts/part/honker_left_leg
/obj/item/mecha_parts/part/honker_right_arm
/obj/item/mecha_parts/part/honker_right_leg
/obj/item/mecha_parts/part/honker_torso
/obj/item/mecha_parts/part/odysseus_head
/obj/item/mecha_parts/part/odysseus_left_arm
/obj/item/mecha_parts/part/odysseus_left_leg
/obj/item/mecha_parts/part/odysseus_right_arm
/obj/item/mecha_parts/part/odysseus_right_leg
/obj/item/mecha_parts/part/odysseus_torso
/obj/item/mecha_parts/part/phazon_armor
/obj/item/mecha_parts/part/phazon_head
/obj/item/mecha_parts/part/phazon_left_arm
/obj/item/mecha_parts/part/phazon_left_leg
/obj/item/mecha_parts/part/phazon_right_arm
/obj/item/mecha_parts/part/phazon_right_leg
/obj/item/mecha_parts/part/phazon_torso
/obj/item/mecha_parts/part/ripley_left_arm
/obj/item/mecha_parts/part/ripley_left_leg
/obj/item/mecha_parts/part/ripley_right_arm
/obj/item/mecha_parts/part/ripley_right_leg
/obj/item/mecha_parts/part/ripley_torso
/obj/item/missile
/obj/item/missile/throw_impact(atom/hit_atom)
/obj/item/mob_can_equip(mob/M, slot, disable_warning = 0)
/obj/item/negates_gravity()
/obj/item/newscaster_frame
/obj/item/newscaster_frame/try_build(turf/on_wall)
/obj/item/on_enter_storage(obj/item/weapon/storage/S as obj)
/obj/item/on_exit_storage(obj/item/weapon/storage/S as obj)
/obj/item/on_found(mob/finder as mob)
/obj/item/organ
/obj/item/organ/appendix
/obj/item/organ/appendix/update_icon()
/obj/item/organ/brain
/obj/item/organ/brain/Destroy()
/obj/item/organ/brain/New()
/obj/item/organ/brain/alien
/obj/item/organ/brain/attack(mob/living/carbon/M, mob/user)
/obj/item/organ/brain/examine(mob/user)
/obj/item/organ/brain/transfer_identity(mob/living/carbon/H)
/obj/item/organ/heart
/obj/item/organ/heart/update_icon()
/obj/item/organ/limb
/obj/item/organ/limb/chest
/obj/item/organ/limb/getDisplayName()
/obj/item/organ/limb/get_damage()
/obj/item/organ/limb/head
/obj/item/organ/limb/heal_damage(brute, burn, var/robotic)
/obj/item/organ/limb/l_arm
/obj/item/organ/limb/l_leg
/obj/item/organ/limb/r_arm
/obj/item/organ/limb/r_leg
/obj/item/organ/limb/robot
/obj/item/organ/limb/robot/chest
/obj/item/organ/limb/robot/head
/obj/item/organ/limb/robot/l_arm
/obj/item/organ/limb/robot/l_leg
/obj/item/organ/limb/robot/r_arm
/obj/item/organ/limb/robot/r_leg
/obj/item/organ/limb/take_damage(brute, burn)
/obj/item/organ/limb/update_organ_icon()
/obj/item/pickup(mob/user)
/obj/item/pipe
/obj/item/pipe/Move()
/obj/item/pipe/New(loc, pipe_type, dir, obj/machinery/atmospherics/make_from)
/obj/item/pipe/attack_self(mob/user as mob)
/obj/item/pipe/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob, params)
/obj/item/pipe/fixdir()
/obj/item/pipe/get_hdir()
/obj/item/pipe/get_pdir()
/obj/item/pipe/get_pipe_dir()
/obj/item/pipe/unflip(var/direction)
/obj/item/pipe/update()
/obj/item/pipe/verb/flip()
/obj/item/pipe/verb/rotate()
/obj/item/pipe_meter
/obj/item/pipe_meter/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob, params)
/obj/item/pizzabox
/obj/item/pizzabox/attack_hand(mob/user)
/obj/item/pizzabox/attack_self(mob/user)
/obj/item/pizzabox/attackby(obj/item/I, mob/user, params)
/obj/item/pizzabox/margherita/New()
/obj/item/pizzabox/meat/New()
/obj/item/pizzabox/mushroom/New()
/obj/item/pizzabox/update_icon()
/obj/item/pizzabox/vegetable/New()
/obj/item/projectile
/obj/item/projectile/Bump(atom/A, yes)
/obj/item/projectile/Crossed(atom/movable/AM as mob)
/obj/item/projectile/New()
/obj/item/projectile/Process_Spacemove(var/movement_dir = 0)
/obj/item/projectile/Range()
/obj/item/projectile/beam
/obj/item/projectile/beam/disabler
/obj/item/projectile/beam/emitter
/obj/item/projectile/beam/emitter/Destroy()
/obj/item/projectile/beam/emitter/singularity_pull()
/obj/item/projectile/beam/heavylaser
/obj/item/projectile/beam/mindflayer
/obj/item/projectile/beam/mindflayer/on_hit(atom/target, blocked = 0)
/obj/item/projectile/beam/practice
/obj/item/projectile/beam/pulse
/obj/item/projectile/beam/pulse/heavy
/obj/item/projectile/beam/pulse/heavy/Bump(atom/A)
/obj/item/projectile/beam/pulse/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/beam/pulse/shot
/obj/item/projectile/beam/scatter
/obj/item/projectile/beam/wormhole
/obj/item/projectile/beam/wormhole/New(var/obj/item/ammo_casing/energy/wormhole/casing)
/obj/item/projectile/beam/wormhole/on_hit(var/atom/target)
/obj/item/projectile/beam/wormhole/orange
/obj/item/projectile/beam/xray
/obj/item/projectile/bullet
/obj/item/projectile/bullet/a40mm
/obj/item/projectile/bullet/a40mm/on_hit(atom/target, blocked = 0)
/obj/item/projectile/bullet/dart
/obj/item/projectile/bullet/dart/New()
/obj/item/projectile/bullet/dart/metalfoam
/obj/item/projectile/bullet/dart/metalfoam/New()
/obj/item/projectile/bullet/dart/on_hit(var/atom/target, var/blocked = 0, var/hit_zone)
/obj/item/projectile/bullet/dart/syringe
/obj/item/projectile/bullet/frag12
/obj/item/projectile/bullet/frag12/on_hit(atom/target, blocked = 0)
/obj/item/projectile/bullet/gyro
/obj/item/projectile/bullet/gyro/on_hit(atom/target, blocked = 0)
/obj/item/projectile/bullet/heavybullet
/obj/item/projectile/bullet/incendiary/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/bullet/incendiary/shell
/obj/item/projectile/bullet/incendiary/shell/Move()
/obj/item/projectile/bullet/incendiary/shell/dragonsbreath
/obj/item/projectile/bullet/meteorshot
/obj/item/projectile/bullet/meteorshot/New()
/obj/item/projectile/bullet/meteorshot/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/bullet/midbullet
/obj/item/projectile/bullet/midbullet2
/obj/item/projectile/bullet/midbullet3
/obj/item/projectile/bullet/mime
/obj/item/projectile/bullet/mime/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/bullet/neurotoxin
/obj/item/projectile/bullet/neurotoxin/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/bullet/pellet
/obj/item/projectile/bullet/pellet/random/New()
/obj/item/projectile/bullet/pellet/weak
/obj/item/projectile/bullet/reusable
/obj/item/projectile/bullet/reusable/foam_dart
/obj/item/projectile/bullet/reusable/foam_dart/riot
/obj/item/projectile/bullet/reusable/magspear
/obj/item/projectile/bullet/reusable/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/bullet/reusable/on_range()
/obj/item/projectile/bullet/stunshot
/obj/item/projectile/bullet/weakbullet
/obj/item/projectile/bullet/weakbullet2
/obj/item/projectile/bullet/weakbullet3
/obj/item/projectile/disposalEnterTry()
/obj/item/projectile/energy
/obj/item/projectile/energy/bolt
/obj/item/projectile/energy/bolt/large
/obj/item/projectile/energy/chrono_beam
/obj/item/projectile/energy/chrono_beam/fire()
/obj/item/projectile/energy/chrono_beam/on_hit(var/atom/target)
/obj/item/projectile/energy/dart
/obj/item/projectile/energy/declone
/obj/item/projectile/energy/electrode
/obj/item/projectile/energy/electrode/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/energy/electrode/on_range()
/obj/item/projectile/energy/floramut
/obj/item/projectile/energy/florayield
/obj/item/projectile/fire()
/obj/item/projectile/hivebotbullet
/obj/item/projectile/ion
/obj/item/projectile/ion/on_hit(atom/target, blocked = 0)
/obj/item/projectile/ion/weak
/obj/item/projectile/ion/weak/on_hit(atom/target, blocked = 0)
/obj/item/projectile/kinetic
/obj/item/projectile/kinetic/New()
/obj/item/projectile/kinetic/Range()
/obj/item/projectile/kinetic/on_hit(atom/target)
/obj/item/projectile/lasertag
/obj/item/projectile/lasertag/bluetag
/obj/item/projectile/lasertag/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/lasertag/redtag
/obj/item/projectile/magic
/obj/item/projectile/magic/animate
/obj/item/projectile/magic/animate/Bump(var/atom/change)
/obj/item/projectile/magic/change
/obj/item/projectile/magic/change/on_hit(var/atom/change)
/obj/item/projectile/magic/death
/obj/item/projectile/magic/death/on_hit(var/target)
/obj/item/projectile/magic/door
/obj/item/projectile/magic/door/CreateDoor(var/turf/T)
/obj/item/projectile/magic/door/on_hit(var/atom/target)
/obj/item/projectile/magic/fireball
/obj/item/projectile/magic/fireball/Range()
/obj/item/projectile/magic/fireball/on_hit(var/target)
/obj/item/projectile/magic/resurrection
/obj/item/projectile/magic/resurrection/on_hit(var/mob/living/carbon/target)
/obj/item/projectile/magic/teleport
/obj/item/projectile/magic/teleport/on_hit(var/mob/target)
/obj/item/projectile/meteor
/obj/item/projectile/meteor/Bump(atom/A, yes)
/obj/item/projectile/neurotox
/obj/item/projectile/on_hit(atom/target, blocked = 0, hit_zone)
/obj/item/projectile/on_range()
/obj/item/projectile/plasma
/obj/item/projectile/plasma/New()
/obj/item/projectile/plasma/adv
/obj/item/projectile/plasma/adv/mech
/obj/item/projectile/plasma/on_hit(var/atom/target)
/obj/item/projectile/temp
/obj/item/projectile/temp/basilisk
/obj/item/projectile/temp/hot
/obj/item/projectile/temp/on_hit(atom/target, blocked = 0)
/obj/item/projectile/vol_by_damage()
/obj/item/radio/integrated
/obj/item/radio/integrated/New()
/obj/item/radio/integrated/signal
/obj/item/radio/integrated/signal/Destroy()
/obj/item/radio/integrated/signal/New()
/obj/item/radio/integrated/signal/initialize()
/obj/item/radio/integrated/signal/send_signal(message="ACTIVATE")
/obj/item/radio/integrated/signal/set_frequency(new_frequency)
/obj/item/remove_item_from_storage(atom/newLoc)
/obj/item/robot_parts
/obj/item/robot_parts/chest
/obj/item/robot_parts/chest/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/robot_parts/head
/obj/item/robot_parts/head/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/robot_parts/l_arm
/obj/item/robot_parts/l_leg
/obj/item/robot_parts/r_arm
/obj/item/robot_parts/r_leg
/obj/item/robot_parts/robot_suit
/obj/item/robot_parts/robot_suit/Interact(mob/user)
/obj/item/robot_parts/robot_suit/New()
/obj/item/robot_parts/robot_suit/Topic(href, href_list)
/obj/item/robot_parts/robot_suit/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/robot_parts/robot_suit/check_completion()
/obj/item/robot_parts/robot_suit/updateicon()
/obj/item/roller
/obj/item/roller/attack_self(mob/user)
/obj/item/roller/robo
/obj/item/roller/robo/New()
/obj/item/roller/robo/afterattack(obj/target, mob/user , proximity)
/obj/item/roller/robo/attack_self(mob/user)
/obj/item/roller/robo/examine(mob/user)
/obj/item/seeds
/obj/item/seeds/New(loc, parent)
/obj/item/seeds/amanitamycelium
/obj/item/seeds/ambrosiadeusseed
/obj/item/seeds/ambrosiavulgarisseed
/obj/item/seeds/angelmycelium
/obj/item/seeds/appleseed
/obj/item/seeds/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/seeds/bananaseed
/obj/item/seeds/berryseed
/obj/item/seeds/bloodtomatoseed
/obj/item/seeds/bluecherryseed
/obj/item/seeds/bluespacetomatoseed
/obj/item/seeds/bluetomatoseed
/obj/item/seeds/blumpkinseed
/obj/item/seeds/cabbageseed
/obj/item/seeds/carpetseed
/obj/item/seeds/carrotseed
/obj/item/seeds/cashseed
/obj/item/seeds/chantermycelium
/obj/item/seeds/cherryseed
/obj/item/seeds/chilighost
/obj/item/seeds/chiliseed
/obj/item/seeds/cocoapodseed
/obj/item/seeds/coffee_arabica_seed
/obj/item/seeds/coffee_robusta_seed
/obj/item/seeds/cornseed
/obj/item/seeds/deathberryseed
/obj/item/seeds/deathnettleseed
/obj/item/seeds/eggplantseed
/obj/item/seeds/eggyseed
/obj/item/seeds/gatfruit
/obj/item/seeds/geraniumseed
/obj/item/seeds/getYield()
/obj/item/seeds/get_analyzer_text()
/obj/item/seeds/glowberryseed
/obj/item/seeds/glowshroom
/obj/item/seeds/goldappleseed
/obj/item/seeds/grapeseed
/obj/item/seeds/grassseed
/obj/item/seeds/greengrapeseed
/obj/item/seeds/harebell
/obj/item/seeds/harvest(mob/user = usr)
/obj/item/seeds/holymelonseed
/obj/item/seeds/icepepperseed
/obj/item/seeds/killertomatoseed
/obj/item/seeds/koiseed
/obj/item/seeds/kudzuseed
/obj/item/seeds/kudzuseed/New(loc, obj/item/weapon/reagent_containers/food/snacks/grown/kudzupod/parent)
/obj/item/seeds/kudzuseed/attack_self(mob/user as mob)
/obj/item/seeds/kudzuseed/get_analyzer_text()
/obj/item/seeds/kudzuseed/harvest()
/obj/item/seeds/kudzuseed/on_chem_reaction(var/datum/reagents/S)
/obj/item/seeds/lemonseed
/obj/item/seeds/libertymycelium
/obj/item/seeds/lilyseed
/obj/item/seeds/limeseed
/obj/item/seeds/mimanaseed
/obj/item/seeds/moonflowerseed
/obj/item/seeds/nettleseed
/obj/item/seeds/novaflowerseed
/obj/item/seeds/oatseed
/obj/item/seeds/on_chem_reaction(var/datum/reagents/S)
/obj/item/seeds/orangeseed
/obj/item/seeds/parsnipseed
/obj/item/seeds/plumpmycelium
/obj/item/seeds/poisonberryseed
/obj/item/seeds/poisonedappleseed
/obj/item/seeds/poppyseed
/obj/item/seeds/potatoseed
/obj/item/seeds/pumpkinseed
/obj/item/seeds/redbeetseed
/obj/item/seeds/reishimycelium
/obj/item/seeds/replicapod
/obj/item/seeds/replicapod/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/seeds/replicapod/harvest(mob/user = usr)
/obj/item/seeds/riceseed
/obj/item/seeds/snapcornseed
/obj/item/seeds/soyaseed
/obj/item/seeds/steelmycelium
/obj/item/seeds/sugarcaneseed
/obj/item/seeds/sunflowerseed
/obj/item/seeds/sweetpotatoseed
/obj/item/seeds/tea_aspera_seed
/obj/item/seeds/tea_astra_seed
/obj/item/seeds/tobacco_seed
/obj/item/seeds/tobacco_space_seed
/obj/item/seeds/tomatoseed
/obj/item/seeds/towermycelium
/obj/item/seeds/vanillapodseed
/obj/item/seeds/walkingmushroommycelium
/obj/item/seeds/watermelonseed
/obj/item/seeds/weeds
/obj/item/seeds/wheatseed
/obj/item/seeds/whitebeetseed
/obj/item/singularity_pull(S, current_size)
/obj/item/slime_extract
/obj/item/slime_extract/New()
/obj/item/slime_extract/adamantine
/obj/item/slime_extract/attackby(obj/item/O as obj, mob/user as mob)
/obj/item/slime_extract/black
/obj/item/slime_extract/blue
/obj/item/slime_extract/bluespace
/obj/item/slime_extract/cerulean
/obj/item/slime_extract/darkblue
/obj/item/slime_extract/darkpurple
/obj/item/slime_extract/gold
/obj/item/slime_extract/green
/obj/item/slime_extract/grey
/obj/item/slime_extract/lightpink
/obj/item/slime_extract/metal
/obj/item/slime_extract/oil
/obj/item/slime_extract/orange
/obj/item/slime_extract/pink
/obj/item/slime_extract/purple
/obj/item/slime_extract/pyrite
/obj/item/slime_extract/rainbow
/obj/item/slime_extract/red
/obj/item/slime_extract/sepia
/obj/item/slime_extract/silver
/obj/item/slime_extract/yellow
/obj/item/slimepotion
/obj/item/slimepotion/attack(mob/living/simple_animal/slime/M as mob, mob/user as mob)
/obj/item/slimepotion2
/obj/item/slimepotion2/afterattack(mob/living/M as mob, mob/user as mob)
/obj/item/smallDelivery
/obj/item/smallDelivery/attack_self(mob/user as mob)
/obj/item/smallDelivery/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/solar_assembly
/obj/item/solar_assembly/attack_hand(var/mob/user)
/obj/item/solar_assembly/attackby(var/obj/item/weapon/W, var/mob/user, params)
/obj/item/solar_assembly/give_glass()
/obj/item/stack
/obj/item/stack/Destroy()
/obj/item/stack/New(var/loc, var/amount=null)
/obj/item/stack/Topic(href, href_list)
/obj/item/stack/add(var/amount)
/obj/item/stack/add_to_stacks(mob/usr as mob)
/obj/item/stack/attack_hand(mob/user as mob)
/obj/item/stack/attack_self(mob/user as mob)
/obj/item/stack/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/stack/building_checks(datum/stack_recipe/R, multiplier)
/obj/item/stack/cable_coil
/obj/item/stack/cable_coil/New(loc, amount = 30, var/param_color = null)
/obj/item/stack/cable_coil/attack(mob/living/carbon/human/H, mob/user)
/obj/item/stack/cable_coil/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/stack/cable_coil/blue
/obj/item/stack/cable_coil/cable_join(obj/structure/cable/C, mob/user)
/obj/item/stack/cable_coil/cut
/obj/item/stack/cable_coil/cut/New(loc)
/obj/item/stack/cable_coil/cyan
/obj/item/stack/cable_coil/cyborg
/obj/item/stack/cable_coil/cyborg/attack_self(mob/user)
/obj/item/stack/cable_coil/get_new_cable(var/location)
/obj/item/stack/cable_coil/give(var/extra)
/obj/item/stack/cable_coil/green
/obj/item/stack/cable_coil/orange
/obj/item/stack/cable_coil/pink
/obj/item/stack/cable_coil/place_turf(turf/T, mob/user)
/obj/item/stack/cable_coil/random/New()
/obj/item/stack/cable_coil/suicide_act(mob/user)
/obj/item/stack/cable_coil/update_icon()
/obj/item/stack/cable_coil/use(var/used)
/obj/item/stack/cable_coil/white
/obj/item/stack/cable_coil/yellow
/obj/item/stack/copy_evidences(obj/item/stack/from as obj)
/obj/item/stack/examine(mob/user)
/obj/item/stack/get_amount()
/obj/item/stack/interact(mob/user as mob)
/obj/item/stack/light_w
/obj/item/stack/light_w/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/stack/medical
/obj/item/stack/medical/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/stack/medical/bruise_pack
/obj/item/stack/medical/gauze
/obj/item/stack/medical/gauze/cyborg/
/obj/item/stack/medical/gauze/improvised
/obj/item/stack/medical/ointment
/obj/item/stack/packageWrap
/obj/item/stack/packageWrap/afterattack(var/obj/target as obj, mob/user as mob, proximity)
/obj/item/stack/rods
/obj/item/stack/rods/New(var/loc, var/amount=null)
/obj/item/stack/rods/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/stack/rods/cyborg/
/obj/item/stack/rods/cyborg/update_icon()
/obj/item/stack/rods/update_icon()
/obj/item/stack/sheet
/obj/item/stack/sheet/animalhide/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/stack/sheet/animalhide/cat
/obj/item/stack/sheet/animalhide/corgi
/obj/item/stack/sheet/animalhide/human
/obj/item/stack/sheet/animalhide/lizard
/obj/item/stack/sheet/animalhide/monkey
/obj/item/stack/sheet/animalhide/monkey/New(var/loc, var/amount=null)
/obj/item/stack/sheet/animalhide/xeno
/obj/item/stack/sheet/animalhide/xeno/New(var/loc, var/amount=null)
/obj/item/stack/sheet/cardboard
/obj/item/stack/sheet/cardboard/New(var/loc, var/amount=null)
/obj/item/stack/sheet/cloth
/obj/item/stack/sheet/glass
/obj/item/stack/sheet/glass/attack_self(mob/user as mob)
/obj/item/stack/sheet/glass/attackby(obj/item/W, mob/user, params)
/obj/item/stack/sheet/glass/construct_window(mob/user as mob)
/obj/item/stack/sheet/glass/cyborg
/obj/item/stack/sheet/hairlesshide
/obj/item/stack/sheet/leather
/obj/item/stack/sheet/metal
/obj/item/stack/sheet/metal/New(var/loc, var/amount=null)
/obj/item/stack/sheet/metal/cyborg
/obj/item/stack/sheet/mineral
/obj/item/stack/sheet/mineral/adamantine
/obj/item/stack/sheet/mineral/bananium
/obj/item/stack/sheet/mineral/bananium/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/diamond
/obj/item/stack/sheet/mineral/diamond/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/enruranium
/obj/item/stack/sheet/mineral/gold
/obj/item/stack/sheet/mineral/gold/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/mythril
/obj/item/stack/sheet/mineral/plasma
/obj/item/stack/sheet/mineral/plasma/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/sandstone
/obj/item/stack/sheet/mineral/sandstone/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/silver
/obj/item/stack/sheet/mineral/silver/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/uranium
/obj/item/stack/sheet/mineral/uranium/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/wood
/obj/item/stack/sheet/mineral/wood/New(var/loc, var/amount=null)
/obj/item/stack/sheet/plasteel
/obj/item/stack/sheet/plasteel/New(var/loc, var/amount=null)
/obj/item/stack/sheet/rglass
/obj/item/stack/sheet/rglass/attack_self(mob/user as mob)
/obj/item/stack/sheet/rglass/construct_window(mob/user as mob)
/obj/item/stack/sheet/rglass/cyborg
/obj/item/stack/sheet/rglass/cyborg/add(var/amount)
/obj/item/stack/sheet/rglass/cyborg/get_amount()
/obj/item/stack/sheet/rglass/cyborg/use(var/amount)
/obj/item/stack/sheet/wetleather
/obj/item/stack/sheet/wetleather/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/item/stack/sheet/xenochitin
/obj/item/stack/spacecash
/obj/item/stack/spacecash/c10
/obj/item/stack/spacecash/c100
/obj/item/stack/spacecash/c1000
/obj/item/stack/spacecash/c20
/obj/item/stack/spacecash/c200
/obj/item/stack/spacecash/c50
/obj/item/stack/spacecash/c500
/obj/item/stack/tile
/obj/item/stack/tile/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/stack/tile/carpet
/obj/item/stack/tile/grass
/obj/item/stack/tile/light
/obj/item/stack/tile/light/New(var/loc, var/amount=null)
/obj/item/stack/tile/light/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/stack/tile/mineral/bananium
/obj/item/stack/tile/mineral/diamond
/obj/item/stack/tile/mineral/gold
/obj/item/stack/tile/mineral/plasma
/obj/item/stack/tile/mineral/silver
/obj/item/stack/tile/mineral/uranium
/obj/item/stack/tile/noslip
/obj/item/stack/tile/plasteel
/obj/item/stack/tile/plasteel/New(var/loc, var/amount=null)
/obj/item/stack/tile/plasteel/cyborg
/obj/item/stack/tile/wood
/obj/item/stack/use(var/used)
/obj/item/stack/wrapping_paper
/obj/item/stack/wrapping_paper/attack_self(mob/user)
/obj/item/stack/zero_amount()
/obj/item/suicide_act(mob/user)
/obj/item/talk_into(mob/M, input, channel, spans)
/obj/item/tapeproj
/obj/item/tapeproj/afterattack(atom/target, mob/user, proximity_flag, click_parameters)
/obj/item/tapeproj/attack_self(var/mob/user)
/obj/item/tapeproj/dropped()
/obj/item/tapeproj/engineering
/obj/item/tapeproj/equipped()
/obj/item/tapeproj/reset()
/obj/item/tapeproj/security
/obj/item/target
/obj/item/target/Destroy()
/obj/item/target/Move()
/obj/item/target/alien
/obj/item/target/attack_hand(mob/user)
/obj/item/target/attackby(obj/item/W, mob/user, params)
/obj/item/target/bullet_act(obj/item/projectile/P)
/obj/item/target/nullPinnedLoc()
/obj/item/target/removeOverlays()
/obj/item/target/syndicate
/obj/item/throw_impact(A)
/obj/item/tk_grab
/obj/item/tk_grab/afterattack(atom/target, mob/living/carbon/user, proximity, params)
/obj/item/tk_grab/apply_focus_overlay()
/obj/item/tk_grab/attack(mob/living/M as mob, mob/living/user as mob, def_zone)
/obj/item/tk_grab/attack_self(mob/user as mob)
/obj/item/tk_grab/dropped(mob/user as mob)
/obj/item/tk_grab/equipped(var/mob/user, var/slot)
/obj/item/tk_grab/focus_object(var/obj/target, var/mob/living/user)
/obj/item/tk_grab/suicide_act(mob/user)
/obj/item/tk_grab/update_icon()
/obj/item/toy
/obj/item/toy/AI
/obj/item/toy/AI/attack_self(mob/user)
/obj/item/toy/ammo/gun
/obj/item/toy/ammo/gun/examine(mob/user)
/obj/item/toy/ammo/gun/update_icon()
/obj/item/toy/balloon
/obj/item/toy/balloon/New()
/obj/item/toy/balloon/afterattack(atom/A as mob|obj, mob/user as mob, proximity)
/obj/item/toy/balloon/attack(mob/living/carbon/human/M as mob, mob/user as mob)
/obj/item/toy/balloon/attackby(obj/O as obj, mob/user as mob, params)
/obj/item/toy/balloon/throw_impact(atom/hit_atom)
/obj/item/toy/balloon/update_icon()
/obj/item/toy/beach_ball
/obj/item/toy/beach_ball/afterattack(atom/target as mob|obj|turf|area, mob/user as mob)
/obj/item/toy/beach_ball/holoball
/obj/item/toy/beach_ball/holoball/dodgeball
/obj/item/toy/beach_ball/holoball/dodgeball/throw_impact(atom/hit_atom)
/obj/item/toy/cards
/obj/item/toy/cards/New()
/obj/item/toy/cards/apply_card_vars(obj/item/toy/cards/newobj, obj/item/toy/cards/sourceobj)
/obj/item/toy/cards/cardhand
/obj/item/toy/cards/cardhand/Topic(href, href_list)
/obj/item/toy/cards/cardhand/apply_card_vars(obj/item/toy/cards/newobj,obj/item/toy/cards/sourceobj)
/obj/item/toy/cards/cardhand/attack_self(mob/user as mob)
/obj/item/toy/cards/cardhand/attackby(obj/item/toy/cards/singlecard/C, mob/living/user, params)
/obj/item/toy/cards/cardhand/interact(mob/user)
/obj/item/toy/cards/deck
/obj/item/toy/cards/deck/MouseDrop(atom/over_object)
/obj/item/toy/cards/deck/New()
/obj/item/toy/cards/deck/attack_hand(mob/user as mob)
/obj/item/toy/cards/deck/attack_self(mob/user as mob)
/obj/item/toy/cards/deck/attackby(obj/item/toy/cards/cardhand/C, mob/living/user, params)
/obj/item/toy/cards/deck/attackby(obj/item/toy/cards/singlecard/C, mob/living/user, params)
/obj/item/toy/cards/deck/syndicate
/obj/item/toy/cards/singlecard
/obj/item/toy/cards/singlecard/apply_card_vars(obj/item/toy/cards/singlecard/newobj,obj/item/toy/cards/sourceobj)
/obj/item/toy/cards/singlecard/attack_self(mob/user)
/obj/item/toy/cards/singlecard/attackby(obj/item/I, mob/living/user, params)
/obj/item/toy/cards/singlecard/examine(mob/user)
/obj/item/toy/cards/singlecard/verb/Flip()
/obj/item/toy/carpplushie
/obj/item/toy/carpplushie/attack(mob/M as mob, mob/user as mob)
/obj/item/toy/carpplushie/attack_self(mob/user as mob)
/obj/item/toy/carpplushie/dehy_carp
/obj/item/toy/carpplushie/dehy_carp/Swell()
/obj/item/toy/carpplushie/dehy_carp/afterattack(obj/O, mob/user,proximity)
/obj/item/toy/carpplushie/dehy_carp/attack_self(mob/user as mob)
/obj/item/toy/crayon
/obj/item/toy/crayon/New()
/obj/item/toy/crayon/Topic(href, href_list, hsrc)
/obj/item/toy/crayon/afterattack(atom/target, mob/user as mob, proximity)
/obj/item/toy/crayon/attack(mob/M as mob, mob/user as mob)
/obj/item/toy/crayon/attack_self(mob/living/user as mob)
/obj/item/toy/crayon/blue
/obj/item/toy/crayon/green
/obj/item/toy/crayon/initialize()
/obj/item/toy/crayon/mime
/obj/item/toy/crayon/mime/Topic(href,href_list)
/obj/item/toy/crayon/mime/attack_self(mob/living/user as mob)
/obj/item/toy/crayon/mime/update_window(mob/living/user as mob)
/obj/item/toy/crayon/orange
/obj/item/toy/crayon/purple
/obj/item/toy/crayon/rainbow
/obj/item/toy/crayon/rainbow/Topic(href,href_list[])
/obj/item/toy/crayon/rainbow/attack_self(mob/living/user as mob)
/obj/item/toy/crayon/rainbow/update_window(mob/living/user as mob)
/obj/item/toy/crayon/red
/obj/item/toy/crayon/spraycan
/obj/item/toy/crayon/spraycan/New()
/obj/item/toy/crayon/spraycan/afterattack(atom/target, mob/user as mob, proximity)
/obj/item/toy/crayon/spraycan/attack_self(mob/living/user as mob)
/obj/item/toy/crayon/spraycan/examine(mob/user)
/obj/item/toy/crayon/spraycan/gang
/obj/item/toy/crayon/spraycan/update_icon()
/obj/item/toy/crayon/suicide_act(mob/user)
/obj/item/toy/crayon/territory_claimed(var/area/territory,mob/user)
/obj/item/toy/crayon/update_window(mob/living/user as mob)
/obj/item/toy/crayon/white
/obj/item/toy/crayon/yellow
/obj/item/toy/foamblade
/obj/item/toy/griffin
/obj/item/toy/griffin/attack_self(mob/user)
/obj/item/toy/gun
/obj/item/toy/gun/afterattack(atom/target as mob|obj|turf|area, mob/user as mob, flag)
/obj/item/toy/gun/attackby(obj/item/toy/ammo/gun/A as obj, mob/user as mob, params)
/obj/item/toy/gun/examine(mob/user)
/obj/item/toy/katana
/obj/item/toy/minimeteor
/obj/item/toy/minimeteor/throw_impact(atom/hit_atom)
/obj/item/toy/nuke
/obj/item/toy/nuke/attack_self(mob/user)
/obj/item/toy/owl
/obj/item/toy/owl/attack_self(mob/user)
/obj/item/toy/prize
/obj/item/toy/prize/attack_hand(mob/user as mob)
/obj/item/toy/prize/attack_self(mob/user as mob)
/obj/item/toy/prize/deathripley
/obj/item/toy/prize/durand
/obj/item/toy/prize/fireripley
/obj/item/toy/prize/gygax
/obj/item/toy/prize/honk
/obj/item/toy/prize/marauder
/obj/item/toy/prize/mauler
/obj/item/toy/prize/odysseus
/obj/item/toy/prize/phazon
/obj/item/toy/prize/reticence
/obj/item/toy/prize/ripley
/obj/item/toy/prize/seraph
/obj/item/toy/redbutton
/obj/item/toy/redbutton/attack_self(mob/user)
/obj/item/toy/snappop
/obj/item/toy/snappop/Crossed(H as mob|obj)
/obj/item/toy/snappop/throw_impact(atom/hit_atom)
/obj/item/toy/spinningtoy
/obj/item/toy/sword
/obj/item/toy/sword/attack_self(mob/user as mob)
/obj/item/toy/sword/attackby(obj/item/weapon/W, mob/living/user, params)
/obj/item/toy/syndicateballoon
/obj/item/trash
/obj/item/trash/attack(mob/M, mob/living/user)
/obj/item/trash/can
/obj/item/trash/candle
/obj/item/trash/candy
/obj/item/trash/cheesie
/obj/item/trash/chips
/obj/item/trash/deadmouse
/obj/item/trash/pistachios
/obj/item/trash/plate
/obj/item/trash/popcorn
/obj/item/trash/raisins
/obj/item/trash/semki
/obj/item/trash/sosjerky
/obj/item/trash/syndi_cakes
/obj/item/trash/tray
/obj/item/trash/waffles
/obj/item/ui_action_click()
/obj/item/updateSelfDialog()
/obj/item/verb/move_to_top()
/obj/item/verb/verb_pickup()
/obj/item/weapon/
/obj/item/weapon/Bump(mob/M as mob)
/obj/item/weapon/New()
/obj/item/weapon/a_gift
/obj/item/weapon/a_gift/New()
/obj/item/weapon/a_gift/attack_self(mob/M as mob)
/obj/item/weapon/abductor_baton
/obj/item/weapon/abductor_baton/CuffAttack(mob/living/L,mob/living/user)
/obj/item/weapon/abductor_baton/IsAbductor(var/mob/living/user)
/obj/item/weapon/abductor_baton/ProbeAttack(mob/living/L,mob/living/user)
/obj/item/weapon/abductor_baton/SleepAttack(mob/living/L,mob/living/user)
/obj/item/weapon/abductor_baton/StunAttack(mob/living/L,mob/living/user)
/obj/item/weapon/abductor_baton/attack(mob/target as mob, mob/living/user as mob)
/obj/item/weapon/abductor_baton/attack_self(mob/living/user)
/obj/item/weapon/abductor_baton/examine(mob/user)
/obj/item/weapon/abductor_baton/toggle(mob/living/user=usr)
/obj/item/weapon/abductor_baton/update_icon()
/obj/item/weapon/aiModule
/obj/item/weapon/aiModule/core/freeformcore
/obj/item/weapon/aiModule/core/freeformcore/attack_self(var/mob/user as mob)
/obj/item/weapon/aiModule/core/freeformcore/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/core/full/antimov
/obj/item/weapon/aiModule/core/full/asimov
/obj/item/weapon/aiModule/core/full/asimovpp
/obj/item/weapon/aiModule/core/full/corp
/obj/item/weapon/aiModule/core/full/custom
/obj/item/weapon/aiModule/core/full/custom/New()
/obj/item/weapon/aiModule/core/full/paladin
/obj/item/weapon/aiModule/core/full/robocop
/obj/item/weapon/aiModule/core/full/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/core/full/tyrant
/obj/item/weapon/aiModule/core/transmitInstructions(var/mob/living/silicon/target, var/mob/sender)
/obj/item/weapon/aiModule/install(var/mob/living/silicon/reciever, var/mob/user)
/obj/item/weapon/aiModule/ion/transmitInstructions(var/mob/living/silicon/target, var/mob/sender)
/obj/item/weapon/aiModule/reset
/obj/item/weapon/aiModule/reset/purge
/obj/item/weapon/aiModule/reset/purge/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/reset/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/supplied
/obj/item/weapon/aiModule/supplied/freeform
/obj/item/weapon/aiModule/supplied/freeform/attack_self(var/mob/user as mob)
/obj/item/weapon/aiModule/supplied/freeform/install(var/mob/living/silicon/S,var/mob/user)
/obj/item/weapon/aiModule/supplied/freeform/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/supplied/oxygen
/obj/item/weapon/aiModule/supplied/protectStation
/obj/item/weapon/aiModule/supplied/quarantine
/obj/item/weapon/aiModule/supplied/safeguard
/obj/item/weapon/aiModule/supplied/safeguard/attack_self(var/mob/user as mob)
/obj/item/weapon/aiModule/supplied/safeguard/install(var/mob/living/silicon/S,var/mob/user)
/obj/item/weapon/aiModule/supplied/safeguard/transmitInstructions(var/mob/living/silicon/target, var/mob/sender)
/obj/item/weapon/aiModule/supplied/transmitInstructions(var/mob/living/silicon/target, var/mob/sender)
/obj/item/weapon/aiModule/syndicate
/obj/item/weapon/aiModule/syndicate/attack_self(var/mob/user as mob)
/obj/item/weapon/aiModule/syndicate/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/toyAI
/obj/item/weapon/aiModule/toyAI/attack_self(mob/user)
/obj/item/weapon/aiModule/toyAI/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/transmitInstructions(var/mob/living/silicon/target, var/mob/sender)
/obj/item/weapon/aiModule/zeroth/oneHuman
/obj/item/weapon/aiModule/zeroth/oneHuman/attack_self(var/mob/user as mob)
/obj/item/weapon/aiModule/zeroth/oneHuman/install(var/mob/living/silicon/S,var/mob/user)
/obj/item/weapon/aiModule/zeroth/oneHuman/transmitInstructions(var/mob/living/silicon/target, var/mob/sender)
/obj/item/weapon/aiModule/zeroth/transmitInstructions(var/mob/living/silicon/target, var/mob/sender)
/obj/item/weapon/airalarm_electronics
/obj/item/weapon/airlock_electronics
/obj/item/weapon/airlock_electronics/Topic(href, href_list)
/obj/item/weapon/airlock_electronics/attack_self(mob/user as mob)
/obj/item/weapon/airlock_electronics/toggle_access(var/acc)
/obj/item/weapon/airlock_painter
/obj/item/weapon/airlock_painter/New()
/obj/item/weapon/airlock_painter/attack_self(mob/user)
/obj/item/weapon/airlock_painter/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/airlock_painter/can_use(mob/user as mob)
/obj/item/weapon/airlock_painter/examine(mob/user)
/obj/item/weapon/airlock_painter/use(mob/user as mob)
/obj/item/weapon/am_containment
/obj/item/weapon/am_containment/ex_act(severity, target)
/obj/item/weapon/am_containment/usefuel(var/wanted)
/obj/item/weapon/antag_spawner
/obj/item/weapon/antag_spawner/borg_tele
/obj/item/weapon/antag_spawner/borg_tele/attack_self(mob/user as mob)
/obj/item/weapon/antag_spawner/borg_tele/spawn_antag(var/client/C, var/turf/T, var/type = "")
/obj/item/weapon/antag_spawner/contract
/obj/item/weapon/antag_spawner/contract/Topic(href, href_list)
/obj/item/weapon/antag_spawner/contract/attack_self(mob/user as mob)
/obj/item/weapon/antag_spawner/contract/equip_antag(mob/target as mob)
/obj/item/weapon/antag_spawner/contract/spawn_antag(var/client/C, var/turf/T, var/type = "")
/obj/item/weapon/antag_spawner/equip_antag(mob/target as mob)
/obj/item/weapon/antag_spawner/slaughter_demon
/obj/item/weapon/antag_spawner/slaughter_demon/attack_self(mob/user as mob)
/obj/item/weapon/antag_spawner/slaughter_demon/spawn_antag(var/client/C, var/turf/T, var/type = "")
/obj/item/weapon/antag_spawner/spawn_antag(var/client/C, var/turf/T, var/type = "")
/obj/item/weapon/banhammer
/obj/item/weapon/banhammer/attack(mob/M, mob/user)
/obj/item/weapon/banhammer/suicide_act(mob/user)
/obj/item/weapon/barcodescanner
/obj/item/weapon/barcodescanner/attack_self(mob/user)
/obj/item/weapon/bedsheet
/obj/item/weapon/bedsheet/attack(mob/living/M, mob/user)
/obj/item/weapon/bedsheet/attack_self(mob/user as mob)
/obj/item/weapon/bedsheet/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/bedsheet/blue
/obj/item/weapon/bedsheet/brown
/obj/item/weapon/bedsheet/captain
/obj/item/weapon/bedsheet/ce
/obj/item/weapon/bedsheet/centcom
/obj/item/weapon/bedsheet/clown
/obj/item/weapon/bedsheet/cmo
/obj/item/weapon/bedsheet/cult
/obj/item/weapon/bedsheet/green
/obj/item/weapon/bedsheet/hop
/obj/item/weapon/bedsheet/hos
/obj/item/weapon/bedsheet/medical
/obj/item/weapon/bedsheet/mime
/obj/item/weapon/bedsheet/orange
/obj/item/weapon/bedsheet/patriot
/obj/item/weapon/bedsheet/purple
/obj/item/weapon/bedsheet/qm
/obj/item/weapon/bedsheet/rainbow
/obj/item/weapon/bedsheet/rd
/obj/item/weapon/bedsheet/red
/obj/item/weapon/bedsheet/syndie
/obj/item/weapon/bedsheet/wiz
/obj/item/weapon/bedsheet/yellow
/obj/item/weapon/bikehorn
/obj/item/weapon/bikehorn/airhorn
/obj/item/weapon/bikehorn/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/bikehorn/attack_self(mob/user as mob)
/obj/item/weapon/bikehorn/rubberducky
/obj/item/weapon/bombcore
/obj/item/weapon/bombcore/badmin
/obj/item/weapon/bombcore/badmin/defuse()
/obj/item/weapon/bombcore/badmin/explosion/
/obj/item/weapon/bombcore/badmin/explosion/detonate()
/obj/item/weapon/bombcore/badmin/summon/
/obj/item/weapon/bombcore/badmin/summon/clown
/obj/item/weapon/bombcore/badmin/summon/clown/defuse()
/obj/item/weapon/bombcore/badmin/summon/detonate()
/obj/item/weapon/bombcore/defuse()
/obj/item/weapon/bombcore/detonate()
/obj/item/weapon/bombcore/ex_act(severity, target)
/obj/item/weapon/bombcore/miniature
/obj/item/weapon/bombcore/miniature/detonate()
/obj/item/weapon/bombcore/training
/obj/item/weapon/bombcore/training/defuse()
/obj/item/weapon/bombcore/training/detonate()
/obj/item/weapon/bombcore/training/reset()
/obj/item/weapon/book
/obj/item/weapon/book/attack_self(mob/user)
/obj/item/weapon/book/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/book/manual
/obj/item/weapon/book/manual/barman_recipes
/obj/item/weapon/book/manual/chef_recipes
/obj/item/weapon/book/manual/detective
/obj/item/weapon/book/manual/engineering_particle_accelerator
/obj/item/weapon/book/manual/engineering_singularity_safety
/obj/item/weapon/book/manual/experimentor
/obj/item/weapon/book/manual/hydroponics_pod_people
/obj/item/weapon/book/manual/medical_cloning
/obj/item/weapon/book/manual/nuclear
/obj/item/weapon/book/manual/research_and_development
/obj/item/weapon/book/manual/ripley_build_and_repair
/obj/item/weapon/book/manual/robotics_cyborgs
/obj/item/weapon/book/manual/wiki
/obj/item/weapon/book/manual/wiki/attack_self()
/obj/item/weapon/book/manual/wiki/engineering_construction
/obj/item/weapon/book/manual/wiki/engineering_guide
/obj/item/weapon/book/manual/wiki/engineering_hacking
/obj/item/weapon/book/manual/wiki/infections
/obj/item/weapon/book/manual/wiki/initialize_wikibook()
/obj/item/weapon/book/manual/wiki/security_space_law
/obj/item/weapon/book/manual/wiki/telescience
/obj/item/weapon/broken_bottle
/obj/item/weapon/bucket_sensor
/obj/item/weapon/bucket_sensor/attackby(var/obj/item/W, mob/user as mob, params)
/obj/item/weapon/c4
/obj/item/weapon/c4/New()
/obj/item/weapon/c4/afterattack(atom/movable/target, mob/user, flag)
/obj/item/weapon/c4/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/c4/attack_self(mob/user as mob)
/obj/item/weapon/c4/attackby(var/obj/item/I, var/mob/user, params)
/obj/item/weapon/c4/explode(var/turf/location)
/obj/item/weapon/c4/suicide_act(var/mob/user)
/obj/item/weapon/c_tube
/obj/item/weapon/camera_assembly
/obj/item/weapon/camera_assembly/attack_hand(mob/user as mob)
/obj/item/weapon/camera_assembly/attackby(obj/item/W as obj, mob/living/user as mob, params)
/obj/item/weapon/camera_assembly/update_icon()
/obj/item/weapon/camera_assembly/weld(var/obj/item/weapon/weldingtool/WT, var/mob/living/user)
/obj/item/weapon/cane
/obj/item/weapon/canvas
/obj/item/weapon/canvas/attack_self(var/mob/user)
/obj/item/weapon/canvas/attackby(var/obj/item/I, var/mob/user, params)
/obj/item/weapon/canvas/getGlobalBackup()
/obj/item/weapon/canvas/nineteenXnineteen
/obj/item/weapon/canvas/twentythreeXnineteen
/obj/item/weapon/canvas/twentythreeXtwentythree
/obj/item/weapon/card
/obj/item/weapon/card/data
/obj/item/weapon/card/data/clown
/obj/item/weapon/card/data/verb/label(t as text)
/obj/item/weapon/card/emag
/obj/item/weapon/card/emag/afterattack(atom/target, mob/user, proximity)
/obj/item/weapon/card/emag/attack()
/obj/item/weapon/card/id
/obj/item/weapon/card/id/GetAccess()
/obj/item/weapon/card/id/GetID()
/obj/item/weapon/card/id/attack_self(mob/user as mob)
/obj/item/weapon/card/id/captains_spare
/obj/item/weapon/card/id/captains_spare/New()
/obj/item/weapon/card/id/centcom
/obj/item/weapon/card/id/centcom/New()
/obj/item/weapon/card/id/ert
/obj/item/weapon/card/id/ert/Engineer
/obj/item/weapon/card/id/ert/Medical
/obj/item/weapon/card/id/ert/Security
/obj/item/weapon/card/id/examine(mob/user)
/obj/item/weapon/card/id/gold
/obj/item/weapon/card/id/prisoner
/obj/item/weapon/card/id/prisoner/attack_self(mob/user as mob)
/obj/item/weapon/card/id/prisoner/five
/obj/item/weapon/card/id/prisoner/four
/obj/item/weapon/card/id/prisoner/one
/obj/item/weapon/card/id/prisoner/seven
/obj/item/weapon/card/id/prisoner/six
/obj/item/weapon/card/id/prisoner/three
/obj/item/weapon/card/id/prisoner/two
/obj/item/weapon/card/id/silver
/obj/item/weapon/card/id/syndicate
/obj/item/weapon/card/id/syndicate/afterattack(var/obj/item/weapon/O as obj, mob/user as mob, proximity)
/obj/item/weapon/card/id/syndicate/attack_self(mob/user as mob)
/obj/item/weapon/card/id/syndicate_command
/obj/item/weapon/card/id/update_label(var/newname, var/newjob)
/obj/item/weapon/card/mining_point_card
/obj/item/weapon/card/mining_point_card/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/item/weapon/card/mining_point_card/examine(mob/user)
/obj/item/weapon/cartridge
/obj/item/weapon/cartridge/Topic(href, href_list)
/obj/item/weapon/cartridge/atmos
/obj/item/weapon/cartridge/bot_control()
/obj/item/weapon/cartridge/captain
/obj/item/weapon/cartridge/captain/New()
/obj/item/weapon/cartridge/ce
/obj/item/weapon/cartridge/chemistry
/obj/item/weapon/cartridge/clown
/obj/item/weapon/cartridge/cmo
/obj/item/weapon/cartridge/detective
/obj/item/weapon/cartridge/engineering
/obj/item/weapon/cartridge/generate_menu(mob/user)
/obj/item/weapon/cartridge/head
/obj/item/weapon/cartridge/hop
/obj/item/weapon/cartridge/hos
/obj/item/weapon/cartridge/janitor
/obj/item/weapon/cartridge/lawyer
/obj/item/weapon/cartridge/librarian
/obj/item/weapon/cartridge/medical
/obj/item/weapon/cartridge/mime
/obj/item/weapon/cartridge/post_status(var/command, var/data1, var/data2)
/obj/item/weapon/cartridge/print_to_host(var/text)
/obj/item/weapon/cartridge/quartermaster
/obj/item/weapon/cartridge/rd
/obj/item/weapon/cartridge/rd/New()
/obj/item/weapon/cartridge/roboticist
/obj/item/weapon/cartridge/security
/obj/item/weapon/cartridge/signal
/obj/item/weapon/cartridge/signal/New()
/obj/item/weapon/cartridge/signal/toxins
/obj/item/weapon/cartridge/syndicate
/obj/item/weapon/cartridge/unlock()
/obj/item/weapon/cautery
/obj/item/weapon/cautery/alien
/obj/item/weapon/caution
/obj/item/weapon/chrono_eraser
/obj/item/weapon/chrono_eraser/Destroy()
/obj/item/weapon/chrono_eraser/dropped()
/obj/item/weapon/chrono_eraser/pass_mind(var/datum/mind/M)
/obj/item/weapon/chrono_eraser/ui_action_click()
/obj/item/weapon/cigbutt
/obj/item/weapon/cigbutt/cigarbutt
/obj/item/weapon/cigbutt/roach
/obj/item/weapon/cigbutt/roach/New()
/obj/item/weapon/circuitboard
/obj/item/weapon/circuitboard/HolodeckControl
/obj/item/weapon/circuitboard/aicore
/obj/item/weapon/circuitboard/aifixer
/obj/item/weapon/circuitboard/air_management
/obj/item/weapon/circuitboard/aiupload
/obj/item/weapon/circuitboard/arcade/battle
/obj/item/weapon/circuitboard/arcade/orion_trail
/obj/item/weapon/circuitboard/area_atmos
/obj/item/weapon/circuitboard/atmos_alert
/obj/item/weapon/circuitboard/autolathe
/obj/item/weapon/circuitboard/biogenerator
/obj/item/weapon/circuitboard/borgupload
/obj/item/weapon/circuitboard/card
/obj/item/weapon/circuitboard/card/centcom
/obj/item/weapon/circuitboard/card/minor
/obj/item/weapon/circuitboard/card/minor/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/item/weapon/circuitboard/chem_dispenser
/obj/item/weapon/circuitboard/chem_heater
/obj/item/weapon/circuitboard/chem_master
/obj/item/weapon/circuitboard/circuit_imprinter
/obj/item/weapon/circuitboard/clonepod
/obj/item/weapon/circuitboard/clonescanner
/obj/item/weapon/circuitboard/cloning
/obj/item/weapon/circuitboard/comm_monitor
/obj/item/weapon/circuitboard/comm_server
/obj/item/weapon/circuitboard/comm_traffic
/obj/item/weapon/circuitboard/communications
/obj/item/weapon/circuitboard/communications/cooldownLeft(deciseconds=600)
/obj/item/weapon/circuitboard/crew
/obj/item/weapon/circuitboard/cryo_tube
/obj/item/weapon/circuitboard/cyborgrecharger
/obj/item/weapon/circuitboard/destructive_analyzer
/obj/item/weapon/circuitboard/emitter
/obj/item/weapon/circuitboard/experimentor
/obj/item/weapon/circuitboard/ferry
/obj/item/weapon/circuitboard/ferry/request
/obj/item/weapon/circuitboard/gibber
/obj/item/weapon/circuitboard/holopad
/obj/item/weapon/circuitboard/hydroponics
/obj/item/weapon/circuitboard/injector_control
/obj/item/weapon/circuitboard/labor_shuttle
/obj/item/weapon/circuitboard/labor_shuttle/one_way
/obj/item/weapon/circuitboard/large_tank_control
/obj/item/weapon/circuitboard/libraryconsole
/obj/item/weapon/circuitboard/libraryconsole/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/item/weapon/circuitboard/mech_bay_power_console
/obj/item/weapon/circuitboard/mech_recharger
/obj/item/weapon/circuitboard/mecha
/obj/item/weapon/circuitboard/mecha/durand
/obj/item/weapon/circuitboard/mecha/durand/main
/obj/item/weapon/circuitboard/mecha/durand/peripherals
/obj/item/weapon/circuitboard/mecha/durand/targeting
/obj/item/weapon/circuitboard/mecha/gygax
/obj/item/weapon/circuitboard/mecha/gygax/main
/obj/item/weapon/circuitboard/mecha/gygax/peripherals
/obj/item/weapon/circuitboard/mecha/gygax/targeting
/obj/item/weapon/circuitboard/mecha/honker
/obj/item/weapon/circuitboard/mecha/honker/main
/obj/item/weapon/circuitboard/mecha/honker/peripherals
/obj/item/weapon/circuitboard/mecha/honker/targeting
/obj/item/weapon/circuitboard/mecha/odysseus
/obj/item/weapon/circuitboard/mecha/odysseus/main
/obj/item/weapon/circuitboard/mecha/odysseus/peripherals
/obj/item/weapon/circuitboard/mecha/phazon
/obj/item/weapon/circuitboard/mecha/phazon/main
/obj/item/weapon/circuitboard/mecha/phazon/peripherals
/obj/item/weapon/circuitboard/mecha/phazon/targeting
/obj/item/weapon/circuitboard/mecha/ripley
/obj/item/weapon/circuitboard/mecha/ripley/main
/obj/item/weapon/circuitboard/mecha/ripley/peripherals
/obj/item/weapon/circuitboard/mecha_control
/obj/item/weapon/circuitboard/mechfab
/obj/item/weapon/circuitboard/med_data
/obj/item/weapon/circuitboard/message_monitor
/obj/item/weapon/circuitboard/microwave
/obj/item/weapon/circuitboard/mining
/obj/item/weapon/circuitboard/mining_equipment_vendor
/obj/item/weapon/circuitboard/mining_shuttle
/obj/item/weapon/circuitboard/monkey_recycler
/obj/item/weapon/circuitboard/olddoor
/obj/item/weapon/circuitboard/operating
/obj/item/weapon/circuitboard/ordercomp
/obj/item/weapon/circuitboard/ore_redemption
/obj/item/weapon/circuitboard/pacman
/obj/item/weapon/circuitboard/pacman/mrs
/obj/item/weapon/circuitboard/pacman/super
/obj/item/weapon/circuitboard/pandemic
/obj/item/weapon/circuitboard/pod
/obj/item/weapon/circuitboard/power_compressor
/obj/item/weapon/circuitboard/power_turbine
/obj/item/weapon/circuitboard/powermonitor
/obj/item/weapon/circuitboard/prisoner
/obj/item/weapon/circuitboard/processor
/obj/item/weapon/circuitboard/protolathe
/obj/item/weapon/circuitboard/rdconsole
/obj/item/weapon/circuitboard/rdconsole/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/item/weapon/circuitboard/rdserver
/obj/item/weapon/circuitboard/rdservercontrol
/obj/item/weapon/circuitboard/recycler
/obj/item/weapon/circuitboard/robotics
/obj/item/weapon/circuitboard/scan_consolenew
/obj/item/weapon/circuitboard/secure_data
/obj/item/weapon/circuitboard/security
/obj/item/weapon/circuitboard/seed_extractor
/obj/item/weapon/circuitboard/shuttle
/obj/item/weapon/circuitboard/shuttle/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/item/weapon/circuitboard/sleeper
/obj/item/weapon/circuitboard/slot_machine
/obj/item/weapon/circuitboard/smartfridge
/obj/item/weapon/circuitboard/smes
/obj/item/weapon/circuitboard/solar_control
/obj/item/weapon/circuitboard/stationalert
/obj/item/weapon/circuitboard/supplycomp
/obj/item/weapon/circuitboard/supplycomp/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/item/weapon/circuitboard/swfdoor
/obj/item/weapon/circuitboard/syndicatedoor
/obj/item/weapon/circuitboard/telecomms/broadcaster
/obj/item/weapon/circuitboard/telecomms/bus
/obj/item/weapon/circuitboard/telecomms/hub
/obj/item/weapon/circuitboard/telecomms/processor
/obj/item/weapon/circuitboard/telecomms/receiver
/obj/item/weapon/circuitboard/telecomms/relay
/obj/item/weapon/circuitboard/telecomms/server
/obj/item/weapon/circuitboard/teleporter
/obj/item/weapon/circuitboard/teleporter_hub
/obj/item/weapon/circuitboard/teleporter_station
/obj/item/weapon/circuitboard/telesci_console
/obj/item/weapon/circuitboard/telesci_pad
/obj/item/weapon/circuitboard/thermomachine
/obj/item/weapon/circuitboard/thermomachine/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/circuitboard/turbine_computer
/obj/item/weapon/circuitboard/turbine_control
/obj/item/weapon/circuitboard/vendor
/obj/item/weapon/circuitboard/vendor/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/circuitboard/vendor/set_type(typepath, mob/user)
/obj/item/weapon/circuitboard/white_ship
/obj/item/weapon/circular_saw
/obj/item/weapon/circular_saw/alien
/obj/item/weapon/claymore
/obj/item/weapon/claymore/IsShield()
/obj/item/weapon/claymore/suicide_act(mob/user)
/obj/item/weapon/clipboard
/obj/item/weapon/clipboard/New()
/obj/item/weapon/clipboard/Topic(href, href_list)
/obj/item/weapon/clipboard/attack_self(mob/user)
/obj/item/weapon/clipboard/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/clipboard/update_icon()
/obj/item/weapon/coin
/obj/item/weapon/coin/New()
/obj/item/weapon/coin/adamantine
/obj/item/weapon/coin/antagtoken
/obj/item/weapon/coin/antagtoken/New()
/obj/item/weapon/coin/attack_self(mob/user as mob)
/obj/item/weapon/coin/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/coin/clown
/obj/item/weapon/coin/diamond
/obj/item/weapon/coin/gold
/obj/item/weapon/coin/iron
/obj/item/weapon/coin/mythril
/obj/item/weapon/coin/plasma
/obj/item/weapon/coin/silver
/obj/item/weapon/coin/twoheaded
/obj/item/weapon/coin/uranium
/obj/item/weapon/contraband
/obj/item/weapon/contraband/poster
/obj/item/weapon/contraband/poster/New(turf/loc, given_serial = 0)
/obj/item/weapon/contraband/poster/legit
/obj/item/weapon/crowbar
/obj/item/weapon/crowbar/large
/obj/item/weapon/crowbar/red
/obj/item/weapon/crowbar/suicide_act(mob/user)
/obj/item/weapon/cultivator
/obj/item/weapon/defibrillator
/obj/item/weapon/defibrillator/CheckParts()
/obj/item/weapon/defibrillator/Destroy()
/obj/item/weapon/defibrillator/MouseDrop(obj/over_object)
/obj/item/weapon/defibrillator/New()
/obj/item/weapon/defibrillator/attack_hand(mob/user as mob)
/obj/item/weapon/defibrillator/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/defibrillator/compact
/obj/item/weapon/defibrillator/compact/combat
/obj/item/weapon/defibrillator/compact/combat/loaded/New()
/obj/item/weapon/defibrillator/compact/combat/loaded/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/defibrillator/compact/loaded/New()
/obj/item/weapon/defibrillator/compact/ui_action_click()
/obj/item/weapon/defibrillator/cooldowncheck(var/mob/user)
/obj/item/weapon/defibrillator/deductcharge(var/chrgdeductamt)
/obj/item/weapon/defibrillator/emag_act(mob/user as mob)
/obj/item/weapon/defibrillator/emp_act(severity)
/obj/item/weapon/defibrillator/equipped(mob/user, slot)
/obj/item/weapon/defibrillator/loaded/New()
/obj/item/weapon/defibrillator/make_paddles()
/obj/item/weapon/defibrillator/remove_paddles(mob/user)
/obj/item/weapon/defibrillator/toggle_paddles()
/obj/item/weapon/defibrillator/ui_action_click()
/obj/item/weapon/defibrillator/update_charge()
/obj/item/weapon/defibrillator/update_icon()
/obj/item/weapon/defibrillator/update_overlays()
/obj/item/weapon/defibrillator/update_power()
/obj/item/weapon/demonheart
/obj/item/weapon/dice
/obj/item/weapon/dice/New()
/obj/item/weapon/dice/attack_self(mob/user as mob)
/obj/item/weapon/dice/d00
/obj/item/weapon/dice/d10
/obj/item/weapon/dice/d12
/obj/item/weapon/dice/d2
/obj/item/weapon/dice/d20
/obj/item/weapon/dice/d4
/obj/item/weapon/dice/d4/Crossed(var/mob/living/carbon/human/H)
/obj/item/weapon/dice/d8
/obj/item/weapon/dice/diceroll(mob/user as mob)
/obj/item/weapon/dice/throw_at(atom/target, range, speed, mob/user as mob)
/obj/item/weapon/dice/update_icon()
/obj/item/weapon/disk/data
/obj/item/weapon/disk/data/New()
/obj/item/weapon/disk/data/attack_self(mob/user as mob)
/obj/item/weapon/disk/data/examine(mob/user)
/obj/item/weapon/disk/design_disk
/obj/item/weapon/disk/design_disk/New()
/obj/item/weapon/disk/nuclear
/obj/item/weapon/disk/nuclear/Destroy()
/obj/item/weapon/disk/nuclear/New()
/obj/item/weapon/disk/nuclear/process()
/obj/item/weapon/disk/tech_disk
/obj/item/weapon/disk/tech_disk/New()
/obj/item/weapon/dnainjector
/obj/item/weapon/dnainjector/antiblind
/obj/item/weapon/dnainjector/antiblind/New()
/obj/item/weapon/dnainjector/antichameleon
/obj/item/weapon/dnainjector/antichameleon/New()
/obj/item/weapon/dnainjector/antichav
/obj/item/weapon/dnainjector/antichav/New()
/obj/item/weapon/dnainjector/anticlumsy
/obj/item/weapon/dnainjector/anticlumsy/New()
/obj/item/weapon/dnainjector/anticough
/obj/item/weapon/dnainjector/anticough/New()
/obj/item/weapon/dnainjector/antideaf
/obj/item/weapon/dnainjector/antideaf/New()
/obj/item/weapon/dnainjector/antielvis
/obj/item/weapon/dnainjector/antielvis/New()
/obj/item/weapon/dnainjector/antiepi
/obj/item/weapon/dnainjector/antiepi/New()
/obj/item/weapon/dnainjector/antifire
/obj/item/weapon/dnainjector/antifire/New()
/obj/item/weapon/dnainjector/antiglasses
/obj/item/weapon/dnainjector/antiglasses/New()
/obj/item/weapon/dnainjector/antihulk
/obj/item/weapon/dnainjector/antihulk/New()
/obj/item/weapon/dnainjector/antimute
/obj/item/weapon/dnainjector/antimute/New()
/obj/item/weapon/dnainjector/antismile
/obj/item/weapon/dnainjector/antismile/New()
/obj/item/weapon/dnainjector/antistealth
/obj/item/weapon/dnainjector/antistealth/New()
/obj/item/weapon/dnainjector/antistutt
/obj/item/weapon/dnainjector/antistutt/New()
/obj/item/weapon/dnainjector/antiswedish
/obj/item/weapon/dnainjector/antiswedish/New()
/obj/item/weapon/dnainjector/antitele
/obj/item/weapon/dnainjector/antitele/New()
/obj/item/weapon/dnainjector/antitour
/obj/item/weapon/dnainjector/antitour/New()
/obj/item/weapon/dnainjector/antiunintelligable
/obj/item/weapon/dnainjector/antiunintelligable/New()
/obj/item/weapon/dnainjector/antiwacky
/obj/item/weapon/dnainjector/antiwacky/New()
/obj/item/weapon/dnainjector/antixray
/obj/item/weapon/dnainjector/antixray/New()
/obj/item/weapon/dnainjector/attack(mob/target, mob/user)
/obj/item/weapon/dnainjector/attack_paw(mob/user)
/obj/item/weapon/dnainjector/blindmut
/obj/item/weapon/dnainjector/blindmut/New()
/obj/item/weapon/dnainjector/chameleonmut
/obj/item/weapon/dnainjector/chameleonmut/New()
/obj/item/weapon/dnainjector/chavmut
/obj/item/weapon/dnainjector/chavmut/New()
/obj/item/weapon/dnainjector/clumsymut
/obj/item/weapon/dnainjector/clumsymut/New()
/obj/item/weapon/dnainjector/coughmut
/obj/item/weapon/dnainjector/coughmut/New()
/obj/item/weapon/dnainjector/deafmut
/obj/item/weapon/dnainjector/deafmut/New()
/obj/item/weapon/dnainjector/elvismut
/obj/item/weapon/dnainjector/elvismut/New()
/obj/item/weapon/dnainjector/epimut
/obj/item/weapon/dnainjector/epimut/New()
/obj/item/weapon/dnainjector/firemut
/obj/item/weapon/dnainjector/firemut/New()
/obj/item/weapon/dnainjector/glassesmut
/obj/item/weapon/dnainjector/glassesmut/New()
/obj/item/weapon/dnainjector/h2m
/obj/item/weapon/dnainjector/h2m/New()
/obj/item/weapon/dnainjector/hulkmut
/obj/item/weapon/dnainjector/hulkmut/New()
/obj/item/weapon/dnainjector/inject(mob/living/carbon/M, mob/user)
/obj/item/weapon/dnainjector/m2h
/obj/item/weapon/dnainjector/m2h/New()
/obj/item/weapon/dnainjector/mutemut
/obj/item/weapon/dnainjector/mutemut/New()
/obj/item/weapon/dnainjector/smilemut
/obj/item/weapon/dnainjector/smilemut/New()
/obj/item/weapon/dnainjector/stealthmut
/obj/item/weapon/dnainjector/stealthmut/New()
/obj/item/weapon/dnainjector/stuttmut
/obj/item/weapon/dnainjector/stuttmut/New()
/obj/item/weapon/dnainjector/swedishmut
/obj/item/weapon/dnainjector/swedishmut/New()
/obj/item/weapon/dnainjector/telemut
/obj/item/weapon/dnainjector/telemut/New()
/obj/item/weapon/dnainjector/telemut/darkbundle
/obj/item/weapon/dnainjector/tourmut
/obj/item/weapon/dnainjector/tourmut/New()
/obj/item/weapon/dnainjector/unintelligablemut
/obj/item/weapon/dnainjector/unintelligablemut/New()
/obj/item/weapon/dnainjector/wackymut
/obj/item/weapon/dnainjector/wackymut/New()
/obj/item/weapon/dnainjector/xraymut
/obj/item/weapon/dnainjector/xraymut/New()
/obj/item/weapon/ectoplasm
/obj/item/weapon/ectoplasm/revenant
/obj/item/weapon/ectoplasm/revenant/New()
/obj/item/weapon/ectoplasm/revenant/attack_hand(mob/user)
/obj/item/weapon/ectoplasm/revenant/attack_self(mob/user)
/obj/item/weapon/ectoplasm/revenant/examine(mob/user)
/obj/item/weapon/ectoplasm/revenant/reform()
/obj/item/weapon/ectoplasm/revenant/throw_impact(atom/hit_atom)
/obj/item/weapon/ectoplasm/suicide_act(mob/user)
/obj/item/weapon/ed209_assembly
/obj/item/weapon/ed209_assembly/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/evidencebag
/obj/item/weapon/evidencebag/afterattack(obj/item/I, mob/user,proximity)
/obj/item/weapon/evidencebag/attack_self(mob/user as mob)
/obj/item/weapon/evidencebag/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/evidencebag/evidencebagEquip(obj/item/I, mob/user)
/obj/item/weapon/extinguisher
/obj/item/weapon/extinguisher/AttemptRefill(atom/target, mob/user)
/obj/item/weapon/extinguisher/New()
/obj/item/weapon/extinguisher/afterattack(atom/target, mob/user , flag)
/obj/item/weapon/extinguisher/attack_self(mob/user as mob)
/obj/item/weapon/extinguisher/examine(mob/user as mob)
/obj/item/weapon/extinguisher/mini
/obj/item/weapon/extinguisher/mini/nozzle
/obj/item/weapon/extinguisher/mini/nozzle/Move()
/obj/item/weapon/extinguisher/mini/nozzle/New(parent_tank)
/obj/item/weapon/extinguisher/mini/nozzle/afterattack(atom/target, mob/user)
/obj/item/weapon/extinguisher/mini/nozzle/attack_self(mob/user as mob)
/obj/item/weapon/extinguisher/mini/nozzle/dropped(mob/user as mob)
/obj/item/weapon/firealarm_electronics
/obj/item/weapon/firstaid_arm_assembly
/obj/item/weapon/firstaid_arm_assembly/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/firstaid_arm_assembly/spawn(5)
/obj/item/weapon/flamethrower
/obj/item/weapon/flamethrower/CheckParts()
/obj/item/weapon/flamethrower/Destroy()
/obj/item/weapon/flamethrower/Topic(href,href_list[])
/obj/item/weapon/flamethrower/afterattack(atom/target, mob/user, flag)
/obj/item/weapon/flamethrower/attack_self(mob/user as mob)
/obj/item/weapon/flamethrower/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/weapon/flamethrower/flame_turf(turflist)
/obj/item/weapon/flamethrower/full/New(var/loc)
/obj/item/weapon/flamethrower/full/tank/New(var/loc)
/obj/item/weapon/flamethrower/ignite_turf(turf/target)
/obj/item/weapon/flamethrower/process()
/obj/item/weapon/flamethrower/update_icon()
/obj/item/weapon/folder
/obj/item/weapon/folder/Topic(href, href_list)
/obj/item/weapon/folder/attack_self(mob/user)
/obj/item/weapon/folder/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/folder/blue
/obj/item/weapon/folder/documents
/obj/item/weapon/folder/documents/New()
/obj/item/weapon/folder/red
/obj/item/weapon/folder/syndicate
/obj/item/weapon/folder/syndicate/blue
/obj/item/weapon/folder/syndicate/blue/New()
/obj/item/weapon/folder/syndicate/red
/obj/item/weapon/folder/syndicate/red/New()
/obj/item/weapon/folder/update_icon()
/obj/item/weapon/folder/white
/obj/item/weapon/folder/yellow
/obj/item/weapon/gavelblock
/obj/item/weapon/gavelblock/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/gavelhammer
/obj/item/weapon/gavelhammer/suicide_act(mob/user)
/obj/item/weapon/grab
/obj/item/weapon/grab/Destroy()
/obj/item/weapon/grab/New(mob/user, mob/victim)
/obj/item/weapon/grab/attack(mob/M, mob/user)
/obj/item/weapon/grab/attack_self(mob/user)
/obj/item/weapon/grab/confirm()
/obj/item/weapon/grab/dropped()
/obj/item/weapon/grab/get_mob_if_throwable()
/obj/item/weapon/grab/process()
/obj/item/weapon/grab/s_click(obj/screen/S)
/obj/item/weapon/grab/synch()
/obj/item/weapon/greentext/
/obj/item/weapon/greentext/Destroy()
/obj/item/weapon/greentext/dropped(mob/living/user as mob)
/obj/item/weapon/greentext/equipped(mob/living/user as mob)
/obj/item/weapon/greentext/process()
/obj/item/weapon/grenade
/obj/item/weapon/grenade/attack_hand()
/obj/item/weapon/grenade/attack_paw(mob/user as mob)
/obj/item/weapon/grenade/attack_self(mob/user as mob)
/obj/item/weapon/grenade/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/grenade/chem_grenade
/obj/item/weapon/grenade/chem_grenade/Crossed(atom/movable/AM)
/obj/item/weapon/grenade/chem_grenade/HasProximity(atom/movable/AM)
/obj/item/weapon/grenade/chem_grenade/New()
/obj/item/weapon/grenade/chem_grenade/antiweed
/obj/item/weapon/grenade/chem_grenade/antiweed/New()
/obj/item/weapon/grenade/chem_grenade/attack_self(mob/user)
/obj/item/weapon/grenade/chem_grenade/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/grenade/chem_grenade/can_flood_from(myloc, maxrange)
/obj/item/weapon/grenade/chem_grenade/cleaner
/obj/item/weapon/grenade/chem_grenade/cleaner/New()
/obj/item/weapon/grenade/chem_grenade/clf3
/obj/item/weapon/grenade/chem_grenade/clf3/New()
/obj/item/weapon/grenade/chem_grenade/colorful
/obj/item/weapon/grenade/chem_grenade/colorful/New()
/obj/item/weapon/grenade/chem_grenade/examine(mob/user)
/obj/item/weapon/grenade/chem_grenade/facid
/obj/item/weapon/grenade/chem_grenade/facid/New()
/obj/item/weapon/grenade/chem_grenade/incendiary
/obj/item/weapon/grenade/chem_grenade/incendiary/New()
/obj/item/weapon/grenade/chem_grenade/large
/obj/item/weapon/grenade/chem_grenade/large/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/grenade/chem_grenade/large/mix_reagents()
/obj/item/weapon/grenade/chem_grenade/metalfoam
/obj/item/weapon/grenade/chem_grenade/metalfoam/New()
/obj/item/weapon/grenade/chem_grenade/mix_reagents()
/obj/item/weapon/grenade/chem_grenade/on_found(mob/finder)
/obj/item/weapon/grenade/chem_grenade/prime()
/obj/item/weapon/grenade/chem_grenade/receive_signal()
/obj/item/weapon/grenade/chem_grenade/stage_change(var/N)
/obj/item/weapon/grenade/chem_grenade/teargas
/obj/item/weapon/grenade/chem_grenade/teargas/New()
/obj/item/weapon/grenade/clown_check(var/mob/living/carbon/human/user)
/obj/item/weapon/grenade/clusterbuster
/obj/item/weapon/grenade/clusterbuster/antiweed
/obj/item/weapon/grenade/clusterbuster/cleaner
/obj/item/weapon/grenade/clusterbuster/emp
/obj/item/weapon/grenade/clusterbuster/facid
/obj/item/weapon/grenade/clusterbuster/inferno
/obj/item/weapon/grenade/clusterbuster/metalfoam
/obj/item/weapon/grenade/clusterbuster/prime()
/obj/item/weapon/grenade/clusterbuster/segment
/obj/item/weapon/grenade/clusterbuster/segment/New(var/loc, var/payload_type = /obj/item/weapon/grenade/flashbang/cluster)
/obj/item/weapon/grenade/clusterbuster/segment/prime()
/obj/item/weapon/grenade/clusterbuster/smoke
/obj/item/weapon/grenade/clusterbuster/spawner_manhacks
/obj/item/weapon/grenade/clusterbuster/spawner_spesscarp
/obj/item/weapon/grenade/clusterbuster/syndieminibomb
/obj/item/weapon/grenade/clusterbuster/teargas
/obj/item/weapon/grenade/empgrenade
/obj/item/weapon/grenade/empgrenade/prime()
/obj/item/weapon/grenade/examine(mob/user)
/obj/item/weapon/grenade/flashbang
/obj/item/weapon/grenade/flashbang/bang(var/turf/T , var/mob/living/M)
/obj/item/weapon/grenade/flashbang/cluster
/obj/item/weapon/grenade/flashbang/prime()
/obj/item/weapon/grenade/iedcasing
/obj/item/weapon/grenade/iedcasing/CheckParts()
/obj/item/weapon/grenade/iedcasing/New(loc)
/obj/item/weapon/grenade/iedcasing/attack_self(mob/user as mob)
/obj/item/weapon/grenade/iedcasing/examine(mob/user)
/obj/item/weapon/grenade/iedcasing/prime()
/obj/item/weapon/grenade/prime()
/obj/item/weapon/grenade/smokebomb
/obj/item/weapon/grenade/smokebomb/Destroy()
/obj/item/weapon/grenade/smokebomb/New()
/obj/item/weapon/grenade/smokebomb/prime()
/obj/item/weapon/grenade/spawnergrenade
/obj/item/weapon/grenade/spawnergrenade/manhacks
/obj/item/weapon/grenade/spawnergrenade/prime()
/obj/item/weapon/grenade/spawnergrenade/spesscarp
/obj/item/weapon/grenade/syndieminibomb
/obj/item/weapon/grenade/syndieminibomb/prime()
/obj/item/weapon/grenade/update_mob()
/obj/item/weapon/grown
/obj/item/weapon/grown/New(newloc, new_potency = 50)
/obj/item/weapon/grown/add_juice()
/obj/item/weapon/grown/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/weapon/grown/bananapeel
/obj/item/weapon/grown/bananapeel/Crossed(AM as mob|obj)
/obj/item/weapon/grown/bananapeel/mimanapeel
/obj/item/weapon/grown/bananapeel/specialpeel
/obj/item/weapon/grown/bananapeel/specialpeel/Crossed(AM)
/obj/item/weapon/grown/bananapeel/suicide_act(mob/user)
/obj/item/weapon/grown/corncob
/obj/item/weapon/grown/corncob/attackby(obj/item/weapon/grown/W as obj, mob/user as mob, params)
/obj/item/weapon/grown/log
/obj/item/weapon/grown/log/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/grown/log/steel
/obj/item/weapon/grown/nettle
/obj/item/weapon/grown/nettle/afterattack(atom/A as mob|obj, mob/user as mob,proximity)
/obj/item/weapon/grown/nettle/basic
/obj/item/weapon/grown/nettle/basic/add_juice()
/obj/item/weapon/grown/nettle/death
/obj/item/weapon/grown/nettle/death/add_juice()
/obj/item/weapon/grown/nettle/death/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/weapon/grown/nettle/death/pickup(mob/living/carbon/user as mob)
/obj/item/weapon/grown/nettle/pickup(mob/living/user as mob)
/obj/item/weapon/grown/nettle/suicide_act(mob/user)
/obj/item/weapon/grown/novaflower
/obj/item/weapon/grown/novaflower/add_juice()
/obj/item/weapon/grown/novaflower/afterattack(atom/A as mob|obj, mob/user as mob,proximity)
/obj/item/weapon/grown/novaflower/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/weapon/grown/novaflower/pickup(mob/living/carbon/human/user as mob)
/obj/item/weapon/grown/snapcorn
/obj/item/weapon/grown/snapcorn/add_juice()
/obj/item/weapon/grown/snapcorn/attack_self(mob/user as mob)
/obj/item/weapon/grown/sunflower
/obj/item/weapon/grown/sunflower/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/gun
/obj/item/weapon/gun/New()
/obj/item/weapon/gun/afterattack(atom/target as mob|obj|turf, mob/living/carbon/human/user as mob|obj, flag, params)
/obj/item/weapon/gun/attack(mob/M as mob, mob/user)
/obj/item/weapon/gun/attack_hand(mob/user as mob)
/obj/item/weapon/gun/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/can_shoot()
/obj/item/weapon/gun/can_trigger_gun(mob/living/carbon/user)
/obj/item/weapon/gun/dropped(mob/user)
/obj/item/weapon/gun/emp_act(severity)
/obj/item/weapon/gun/energy
/obj/item/weapon/gun/energy/New()
/obj/item/weapon/gun/energy/afterattack(atom/target as mob|obj|turf, mob/living/user as mob|obj, params)
/obj/item/weapon/gun/energy/can_shoot()
/obj/item/weapon/gun/energy/chrono_gun
/obj/item/weapon/gun/energy/chrono_gun/Destroy()
/obj/item/weapon/gun/energy/chrono_gun/New(var/obj/item/weapon/chrono_eraser/T)
/obj/item/weapon/gun/energy/chrono_gun/dropped()
/obj/item/weapon/gun/energy/chrono_gun/field_check(var/obj/effect/chrono_field/F)
/obj/item/weapon/gun/energy/chrono_gun/field_connect(var/obj/effect/chrono_field/F)
/obj/item/weapon/gun/energy/chrono_gun/field_disconnect(var/obj/effect/chrono_field/F)
/obj/item/weapon/gun/energy/chrono_gun/pass_mind(var/datum/mind/M)
/obj/item/weapon/gun/energy/chrono_gun/process_fire()
/obj/item/weapon/gun/energy/chrono_gun/update_icon()
/obj/item/weapon/gun/energy/decloner
/obj/item/weapon/gun/energy/decloner/alien
/obj/item/weapon/gun/energy/decloner/alien/update_icon()
/obj/item/weapon/gun/energy/disabler
/obj/item/weapon/gun/energy/disabler/cyborg
/obj/item/weapon/gun/energy/disabler/cyborg/Destroy()
/obj/item/weapon/gun/energy/disabler/cyborg/New()
/obj/item/weapon/gun/energy/disabler/cyborg/process()
/obj/item/weapon/gun/energy/emp_act(severity)
/obj/item/weapon/gun/energy/floragun
/obj/item/weapon/gun/energy/floragun/Destroy()
/obj/item/weapon/gun/energy/floragun/New()
/obj/item/weapon/gun/energy/floragun/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/floragun/process()
/obj/item/weapon/gun/energy/gun
/obj/item/weapon/gun/energy/gun/advtaser
/obj/item/weapon/gun/energy/gun/advtaser/cyborg
/obj/item/weapon/gun/energy/gun/advtaser/cyborg/Destroy()
/obj/item/weapon/gun/energy/gun/advtaser/cyborg/New()
/obj/item/weapon/gun/energy/gun/advtaser/cyborg/process()
/obj/item/weapon/gun/energy/gun/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/gun/hos
/obj/item/weapon/gun/energy/gun/nuclear
/obj/item/weapon/gun/energy/gun/nuclear/Destroy()
/obj/item/weapon/gun/energy/gun/nuclear/New()
/obj/item/weapon/gun/energy/gun/nuclear/emp_act(severity)
/obj/item/weapon/gun/energy/gun/nuclear/failcheck()
/obj/item/weapon/gun/energy/gun/nuclear/process()
/obj/item/weapon/gun/energy/gun/nuclear/update_charge()
/obj/item/weapon/gun/energy/gun/nuclear/update_icon()
/obj/item/weapon/gun/energy/gun/nuclear/update_mode()
/obj/item/weapon/gun/energy/gun/nuclear/update_reactor()
/obj/item/weapon/gun/energy/gun/turret
/obj/item/weapon/gun/energy/gun/turret/update_icon()
/obj/item/weapon/gun/energy/ionrifle
/obj/item/weapon/gun/energy/ionrifle/carbine
/obj/item/weapon/gun/energy/ionrifle/emp_act(severity)
/obj/item/weapon/gun/energy/kinetic_accelerator
/obj/item/weapon/gun/energy/kinetic_accelerator/attack_self(mob/living/user)
/obj/item/weapon/gun/energy/kinetic_accelerator/crossbow
/obj/item/weapon/gun/energy/kinetic_accelerator/crossbow/large
/obj/item/weapon/gun/energy/kinetic_accelerator/emp_act(severity)
/obj/item/weapon/gun/energy/kinetic_accelerator/shoot_live_shot()
/obj/item/weapon/gun/energy/laser
/obj/item/weapon/gun/energy/laser/bluetag
/obj/item/weapon/gun/energy/laser/bluetag/Destroy()
/obj/item/weapon/gun/energy/laser/bluetag/New()
/obj/item/weapon/gun/energy/laser/bluetag/process()
/obj/item/weapon/gun/energy/laser/captain
/obj/item/weapon/gun/energy/laser/captain/Destroy()
/obj/item/weapon/gun/energy/laser/captain/New()
/obj/item/weapon/gun/energy/laser/captain/process()
/obj/item/weapon/gun/energy/laser/cyborg
/obj/item/weapon/gun/energy/laser/cyborg/emp_act()
/obj/item/weapon/gun/energy/laser/cyborg/newshot()
/obj/item/weapon/gun/energy/laser/practice
/obj/item/weapon/gun/energy/laser/practice/sc_laser
/obj/item/weapon/gun/energy/laser/redtag
/obj/item/weapon/gun/energy/laser/redtag/Destroy()
/obj/item/weapon/gun/energy/laser/redtag/New()
/obj/item/weapon/gun/energy/laser/redtag/process()
/obj/item/weapon/gun/energy/laser/retro
/obj/item/weapon/gun/energy/laser/retro/sc_retro
/obj/item/weapon/gun/energy/laser/scatter
/obj/item/weapon/gun/energy/laser/scatter/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/lasercannon
/obj/item/weapon/gun/energy/meteorgun
/obj/item/weapon/gun/energy/meteorgun/Destroy()
/obj/item/weapon/gun/energy/meteorgun/New()
/obj/item/weapon/gun/energy/meteorgun/pen
/obj/item/weapon/gun/energy/meteorgun/process()
/obj/item/weapon/gun/energy/meteorgun/update_icon()
/obj/item/weapon/gun/energy/mindflayer
/obj/item/weapon/gun/energy/newshot()
/obj/item/weapon/gun/energy/plasmacutter
/obj/item/weapon/gun/energy/plasmacutter/adv
/obj/item/weapon/gun/energy/plasmacutter/attackby(var/obj/item/A, var/mob/user)
/obj/item/weapon/gun/energy/plasmacutter/examine(mob/user)
/obj/item/weapon/gun/energy/printer
/obj/item/weapon/gun/energy/printer/Destroy()
/obj/item/weapon/gun/energy/printer/New()
/obj/item/weapon/gun/energy/printer/process()
/obj/item/weapon/gun/energy/printer/update_icon()
/obj/item/weapon/gun/energy/process_chamber()
/obj/item/weapon/gun/energy/pulse
/obj/item/weapon/gun/energy/pulse/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/pulse/carbine
/obj/item/weapon/gun/energy/pulse/carbine/loyalpin
/obj/item/weapon/gun/energy/pulse/destroyer
/obj/item/weapon/gun/energy/pulse/destroyer/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/pulse/emp_act(severity)
/obj/item/weapon/gun/energy/pulse/loyalpin
/obj/item/weapon/gun/energy/pulse/pistol
/obj/item/weapon/gun/energy/pulse/pistol/loyalpin
/obj/item/weapon/gun/energy/pulse/pistol/m1911
/obj/item/weapon/gun/energy/select_fire(mob/living/user as mob)
/obj/item/weapon/gun/energy/stunrevolver
/obj/item/weapon/gun/energy/suicide_act(mob/user)
/obj/item/weapon/gun/energy/taser
/obj/item/weapon/gun/energy/temperature
/obj/item/weapon/gun/energy/temperature/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/ui_action_click()
/obj/item/weapon/gun/energy/update_icon()
/obj/item/weapon/gun/energy/wormhole_projector
/obj/item/weapon/gun/energy/wormhole_projector/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/wormhole_projector/create_portal(var/obj/item/projectile/beam/wormhole/W)
/obj/item/weapon/gun/energy/wormhole_projector/portal_destroyed(var/obj/effect/portal/P)
/obj/item/weapon/gun/energy/wormhole_projector/process_chamber()
/obj/item/weapon/gun/energy/wormhole_projector/update_icon()
/obj/item/weapon/gun/energy/xray
/obj/item/weapon/gun/examine(mob/user)
/obj/item/weapon/gun/grenadelauncher
/obj/item/weapon/gun/grenadelauncher/afterattack(obj/target, mob/user , flag)
/obj/item/weapon/gun/grenadelauncher/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/item/weapon/gun/grenadelauncher/examine(mob/user)
/obj/item/weapon/gun/grenadelauncher/fire_grenade(atom/target, mob/user)
/obj/item/weapon/gun/handle_pins(mob/living/user)
/obj/item/weapon/gun/magic
/obj/item/weapon/gun/magic/Destroy()
/obj/item/weapon/gun/magic/New()
/obj/item/weapon/gun/magic/afterattack(atom/target as mob, mob/living/user as mob, flag)
/obj/item/weapon/gun/magic/can_shoot()
/obj/item/weapon/gun/magic/newshot()
/obj/item/weapon/gun/magic/process()
/obj/item/weapon/gun/magic/process_chamber()
/obj/item/weapon/gun/magic/shoot_with_empty_chamber(mob/living/user as mob|obj)
/obj/item/weapon/gun/magic/staff/
/obj/item/weapon/gun/magic/staff/animate
/obj/item/weapon/gun/magic/staff/change
/obj/item/weapon/gun/magic/staff/chaos
/obj/item/weapon/gun/magic/staff/door
/obj/item/weapon/gun/magic/staff/healing
/obj/item/weapon/gun/magic/suicide_act(mob/user)
/obj/item/weapon/gun/magic/update_icon()
/obj/item/weapon/gun/magic/wand/
/obj/item/weapon/gun/magic/wand/New()
/obj/item/weapon/gun/magic/wand/afterattack(atom/target as mob, mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/attack(atom/target as mob, mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/death
/obj/item/weapon/gun/magic/wand/death/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/door
/obj/item/weapon/gun/magic/wand/door/zap_self()
/obj/item/weapon/gun/magic/wand/examine(mob/user)
/obj/item/weapon/gun/magic/wand/fireball
/obj/item/weapon/gun/magic/wand/fireball/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/polymorph
/obj/item/weapon/gun/magic/wand/polymorph/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/resurrection
/obj/item/weapon/gun/magic/wand/resurrection/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/teleport
/obj/item/weapon/gun/magic/wand/teleport/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/update_icon()
/obj/item/weapon/gun/magic/wand/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/pickup(mob/user)
/obj/item/weapon/gun/process_chamber()
/obj/item/weapon/gun/process_fire(atom/target as mob|obj|turf, mob/living/user as mob|obj, var/message = 1, params)
/obj/item/weapon/gun/projectile
/obj/item/weapon/gun/projectile/New()
/obj/item/weapon/gun/projectile/attack_hand(mob/user as mob)
/obj/item/weapon/gun/projectile/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/projectile/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/automatic
/obj/item/weapon/gun/projectile/automatic/ar
/obj/item/weapon/gun/projectile/automatic/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/automatic/burst_select()
/obj/item/weapon/gun/projectile/automatic/c20r
/obj/item/weapon/gun/projectile/automatic/c20r/New()
/obj/item/weapon/gun/projectile/automatic/c20r/afterattack()
/obj/item/weapon/gun/projectile/automatic/c20r/sc_c20r
/obj/item/weapon/gun/projectile/automatic/c20r/sc_c20r/New()
/obj/item/weapon/gun/projectile/automatic/c20r/toy
/obj/item/weapon/gun/projectile/automatic/c20r/toy/process_chamber(var/eject_casing = 0, var/empty_chamber = 1)
/obj/item/weapon/gun/projectile/automatic/c20r/unrestricted
/obj/item/weapon/gun/projectile/automatic/c20r/update_icon()
/obj/item/weapon/gun/projectile/automatic/can_shoot()
/obj/item/weapon/gun/projectile/automatic/empty_alarm()
/obj/item/weapon/gun/projectile/automatic/gyropistol
/obj/item/weapon/gun/projectile/automatic/gyropistol/process_chamber(var/eject_casing = 0, var/empty_chamber = 1)
/obj/item/weapon/gun/projectile/automatic/gyropistol/update_icon()
/obj/item/weapon/gun/projectile/automatic/l6_saw
/obj/item/weapon/gun/projectile/automatic/l6_saw/afterattack(atom/target as mob|obj|turf, mob/living/user as mob|obj, flag, params)
/obj/item/weapon/gun/projectile/automatic/l6_saw/attack_hand(mob/user as mob)
/obj/item/weapon/gun/projectile/automatic/l6_saw/attack_self(mob/user as mob)
/obj/item/weapon/gun/projectile/automatic/l6_saw/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/automatic/l6_saw/toy
/obj/item/weapon/gun/projectile/automatic/l6_saw/toy/process_chamber(var/eject_casing = 0, var/empty_chamber = 1)
/obj/item/weapon/gun/projectile/automatic/l6_saw/update_icon()
/obj/item/weapon/gun/projectile/automatic/m90
/obj/item/weapon/gun/projectile/automatic/m90/New()
/obj/item/weapon/gun/projectile/automatic/m90/afterattack(var/atom/target, var/mob/living/user, flag, params)
/obj/item/weapon/gun/projectile/automatic/m90/attackby(var/obj/item/A, mob/user, params)
/obj/item/weapon/gun/projectile/automatic/m90/burst_select()
/obj/item/weapon/gun/projectile/automatic/m90/unrestricted
/obj/item/weapon/gun/projectile/automatic/m90/update_icon()
/obj/item/weapon/gun/projectile/automatic/mini_uzi
/obj/item/weapon/gun/projectile/automatic/pistol
/obj/item/weapon/gun/projectile/automatic/pistol/deagle
/obj/item/weapon/gun/projectile/automatic/pistol/deagle/camo
/obj/item/weapon/gun/projectile/automatic/pistol/deagle/gold
/obj/item/weapon/gun/projectile/automatic/pistol/deagle/update_icon()
/obj/item/weapon/gun/projectile/automatic/pistol/m1911
/obj/item/weapon/gun/projectile/automatic/pistol/update_icon()
/obj/item/weapon/gun/projectile/automatic/proto
/obj/item/weapon/gun/projectile/automatic/shotgun/bulldog
/obj/item/weapon/gun/projectile/automatic/shotgun/bulldog/New()
/obj/item/weapon/gun/projectile/automatic/shotgun/bulldog/afterattack()
/obj/item/weapon/gun/projectile/automatic/shotgun/bulldog/update_icon()
/obj/item/weapon/gun/projectile/automatic/shotgun/bulldog/update_magazine()
/obj/item/weapon/gun/projectile/automatic/speargun
/obj/item/weapon/gun/projectile/automatic/speargun/attack_self()
/obj/item/weapon/gun/projectile/automatic/speargun/attackby(var/obj/item/A, mob/user, params)
/obj/item/weapon/gun/projectile/automatic/speargun/process_chamber(var/eject_casing = 0, var/empty_chamber = 1)
/obj/item/weapon/gun/projectile/automatic/speargun/update_icon()
/obj/item/weapon/gun/projectile/automatic/tommygun
/obj/item/weapon/gun/projectile/automatic/toy
/obj/item/weapon/gun/projectile/automatic/toy/pistol
/obj/item/weapon/gun/projectile/automatic/toy/pistol/riot
/obj/item/weapon/gun/projectile/automatic/toy/pistol/riot/New()
/obj/item/weapon/gun/projectile/automatic/toy/pistol/update_icon()
/obj/item/weapon/gun/projectile/automatic/toy/process_chamber(var/eject_casing = 0, var/empty_chamber = 1)
/obj/item/weapon/gun/projectile/automatic/ui_action_click()
/obj/item/weapon/gun/projectile/automatic/update_icon()
/obj/item/weapon/gun/projectile/blow_up(mob/user as mob)
/obj/item/weapon/gun/projectile/can_shoot()
/obj/item/weapon/gun/projectile/chamber_round()
/obj/item/weapon/gun/projectile/examine(mob/user)
/obj/item/weapon/gun/projectile/get_ammo(var/countchambered = 1)
/obj/item/weapon/gun/projectile/process_chamber(var/eject_casing = 1, var/empty_chamber = 1)
/obj/item/weapon/gun/projectile/revolver
/obj/item/weapon/gun/projectile/revolver/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/projectile/revolver/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/revolver/can_shoot()
/obj/item/weapon/gun/projectile/revolver/chamber_round()
/obj/item/weapon/gun/projectile/revolver/detective
/obj/item/weapon/gun/projectile/revolver/detective/New()
/obj/item/weapon/gun/projectile/revolver/detective/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/revolver/detective/process_fire(atom/target as mob|obj|turf, mob/living/user as mob|obj, var/message = 1, params)
/obj/item/weapon/gun/projectile/revolver/doublebarrel
/obj/item/weapon/gun/projectile/revolver/doublebarrel/New()
/obj/item/weapon/gun/projectile/revolver/doublebarrel/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/projectile/revolver/doublebarrel/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/revolver/doublebarrel/improvised
/obj/item/weapon/gun/projectile/revolver/doublebarrel/improvised/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/revolver/examine(mob/user)
/obj/item/weapon/gun/projectile/revolver/get_ammo(var/countchambered = 0, var/countempties = 1)
/obj/item/weapon/gun/projectile/revolver/grenadelauncher
/obj/item/weapon/gun/projectile/revolver/grenadelauncher/attackby(var/obj/item/A, mob/user, params)
/obj/item/weapon/gun/projectile/revolver/grenadelauncher/cyborg
/obj/item/weapon/gun/projectile/revolver/grenadelauncher/cyborg/attack_self()
/obj/item/weapon/gun/projectile/revolver/mateba
/obj/item/weapon/gun/projectile/revolver/process_chamber()
/obj/item/weapon/gun/projectile/revolver/russian
/obj/item/weapon/gun/projectile/revolver/russian/New()
/obj/item/weapon/gun/projectile/revolver/russian/Spin()
/obj/item/weapon/gun/projectile/revolver/russian/afterattack(atom/target as mob|obj|turf, mob/living/user as mob|obj, flag, params)
/obj/item/weapon/gun/projectile/revolver/russian/attack_self(mob/user as mob)
/obj/item/weapon/gun/projectile/revolver/russian/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/sawoff(mob/user as mob)
/obj/item/weapon/gun/projectile/shotgun
/obj/item/weapon/gun/projectile/shotgun/attack_self(mob/living/user)
/obj/item/weapon/gun/projectile/shotgun/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/shotgun/automatic/combat
/obj/item/weapon/gun/projectile/shotgun/automatic/shoot_live_shot(mob/living/user as mob|obj)
/obj/item/weapon/gun/projectile/shotgun/blow_up(mob/user as mob)
/obj/item/weapon/gun/projectile/shotgun/boltaction
/obj/item/weapon/gun/projectile/shotgun/boltaction/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/shotgun/boltaction/examine(mob/user)
/obj/item/weapon/gun/projectile/shotgun/boltaction/pump(mob/M)
/obj/item/weapon/gun/projectile/shotgun/can_shoot()
/obj/item/weapon/gun/projectile/shotgun/chamber_round()
/obj/item/weapon/gun/projectile/shotgun/examine(mob/user)
/obj/item/weapon/gun/projectile/shotgun/process_chamber()
/obj/item/weapon/gun/projectile/shotgun/pump(mob/M)
/obj/item/weapon/gun/projectile/shotgun/pump_reload(mob/M)
/obj/item/weapon/gun/projectile/shotgun/pump_unload(mob/M)
/obj/item/weapon/gun/projectile/shotgun/riot
/obj/item/weapon/gun/projectile/shotgun/riot/attackby(var/obj/item/A as obj, mob/user as mob, params)
/obj/item/weapon/gun/projectile/shotgun/sc_pump
/obj/item/weapon/gun/projectile/shotgun/sc_pump/New()
/obj/item/weapon/gun/projectile/shotgun/toy
/obj/item/weapon/gun/projectile/shotgun/toy/crossbow
/obj/item/weapon/gun/projectile/shotgun/toy/process_chamber()
/obj/item/weapon/gun/projectile/suicide_act(mob/user)
/obj/item/weapon/gun/rename_gun(var/mob/M)
/obj/item/weapon/gun/reskin_gun(var/mob/M)
/obj/item/weapon/gun/shoot_live_shot(mob/living/user as mob|obj, var/pointblank = 0, var/mob/pbtarget = null, var/message = 1)
/obj/item/weapon/gun/shoot_with_empty_chamber(mob/living/user as mob|obj)
/obj/item/weapon/gun/syringe
/obj/item/weapon/gun/syringe/New()
/obj/item/weapon/gun/syringe/afterattack(atom/target as mob|obj|turf, mob/living/user as mob|obj, params)
/obj/item/weapon/gun/syringe/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/syringe/attackby(var/obj/item/A as obj, mob/user as mob, params, var/show_msg = 1)
/obj/item/weapon/gun/syringe/examine(mob/user)
/obj/item/weapon/gun/syringe/newshot()
/obj/item/weapon/gun/syringe/process_chamber()
/obj/item/weapon/gun/syringe/rapidsyringe
/obj/item/weapon/gun/toggle_gunlight()
/obj/item/weapon/gun/update_gunlight(var/mob/user = null)
/obj/item/weapon/hand_labeler
/obj/item/weapon/hand_labeler/afterattack(atom/A, mob/user,proximity)
/obj/item/weapon/hand_labeler/attack_self(mob/user)
/obj/item/weapon/hand_labeler/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/item/weapon/hand_tele
/obj/item/weapon/hand_tele/attack_self(mob/user as mob)
/obj/item/weapon/hatchet
/obj/item/weapon/hatchet/suicide_act(mob/user)
/obj/item/weapon/hemostat
/obj/item/weapon/hemostat/alien
/obj/item/weapon/holo
/obj/item/weapon/holo/esword
/obj/item/weapon/holo/esword/IsShield()
/obj/item/weapon/holo/esword/New()
/obj/item/weapon/holo/esword/attack(target as mob, mob/user as mob)
/obj/item/weapon/holo/esword/attack_self(mob/living/user as mob)
/obj/item/weapon/holo/esword/green
/obj/item/weapon/holo/esword/green/New()
/obj/item/weapon/holo/esword/red
/obj/item/weapon/holo/esword/red/New()
/obj/item/weapon/holosign_creator
/obj/item/weapon/holosign_creator/afterattack(atom/target, mob/user, flag)
/obj/item/weapon/holosign_creator/attack(mob/living/carbon/human/M, mob/user)
/obj/item/weapon/holosign_creator/attack_self(mob/user)
/obj/item/weapon/implant
/obj/item/weapon/implant/abductor
/obj/item/weapon/implant/abductor/activate()
/obj/item/weapon/implant/abductor/process()
/obj/item/weapon/implant/activate()
/obj/item/weapon/implant/adrenalin
/obj/item/weapon/implant/adrenalin/activate()
/obj/item/weapon/implant/adrenalin/get_data()
/obj/item/weapon/implant/chem
/obj/item/weapon/implant/chem/New()
/obj/item/weapon/implant/chem/activate(var/cause)
/obj/item/weapon/implant/chem/get_data()
/obj/item/weapon/implant/chem/trigger(emote, mob/source)
/obj/item/weapon/implant/dropped(mob/user as mob)
/obj/item/weapon/implant/emp
/obj/item/weapon/implant/emp/activate()
/obj/item/weapon/implant/exile
/obj/item/weapon/implant/exile/get_data()
/obj/item/weapon/implant/explosive
/obj/item/weapon/implant/explosive/activate(var/cause)
/obj/item/weapon/implant/explosive/get_data()
/obj/item/weapon/implant/explosive/trigger(emote, mob/source)
/obj/item/weapon/implant/freedom
/obj/item/weapon/implant/freedom/activate()
/obj/item/weapon/implant/freedom/get_data()
/obj/item/weapon/implant/get_data()
/obj/item/weapon/implant/health
/obj/item/weapon/implant/health/sensehealth()
/obj/item/weapon/implant/implanted(var/mob/source)
/obj/item/weapon/implant/loyalty
/obj/item/weapon/implant/loyalty/get_data()
/obj/item/weapon/implant/loyalty/implanted(mob/target)
/obj/item/weapon/implant/tracking
/obj/item/weapon/implant/tracking/get_data()
/obj/item/weapon/implant/trigger(emote, mob/source)
/obj/item/weapon/implant/ui_action_click()
/obj/item/weapon/implant/uplink
/obj/item/weapon/implant/uplink/New()
/obj/item/weapon/implant/uplink/activate()
/obj/item/weapon/implant/uplink/implanted(mob/source)
/obj/item/weapon/implant/weapons_auth
/obj/item/weapon/implant/weapons_auth/get_data()
/obj/item/weapon/implantcase
/obj/item/weapon/implantcase/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/implantcase/chem
/obj/item/weapon/implantcase/chem/New()
/obj/item/weapon/implantcase/exile
/obj/item/weapon/implantcase/exile/New()
/obj/item/weapon/implantcase/explosive
/obj/item/weapon/implantcase/explosive/New()
/obj/item/weapon/implantcase/loyalty
/obj/item/weapon/implantcase/loyalty/New()
/obj/item/weapon/implantcase/tracking
/obj/item/weapon/implantcase/tracking/New()
/obj/item/weapon/implantcase/update_icon()
/obj/item/weapon/implantcase/weapons_auth
/obj/item/weapon/implantcase/weapons_auth/New()
/obj/item/weapon/implanter
/obj/item/weapon/implanter/adrenalin
/obj/item/weapon/implanter/adrenalin/New()
/obj/item/weapon/implanter/attack(mob/living/carbon/M, mob/user)
/obj/item/weapon/implanter/emp
/obj/item/weapon/implanter/emp/New()
/obj/item/weapon/implanter/exile
/obj/item/weapon/implanter/exile/New()
/obj/item/weapon/implanter/explosive
/obj/item/weapon/implanter/explosive/New()
/obj/item/weapon/implanter/loyalty
/obj/item/weapon/implanter/loyalty/New()
/obj/item/weapon/implanter/update_icon()
/obj/item/weapon/implantpad
/obj/item/weapon/implantpad/Topic(href, href_list)
/obj/item/weapon/implantpad/attack_hand(mob/user as mob)
/obj/item/weapon/implantpad/attack_self(mob/user)
/obj/item/weapon/implantpad/attackby(obj/item/weapon/implantcase/C, mob/user, params)
/obj/item/weapon/implantpad/update_icon()
/obj/item/weapon/katana
/obj/item/weapon/katana/IsShield()
/obj/item/weapon/katana/cursed
/obj/item/weapon/katana/energy
/obj/item/weapon/katana/energy/Del()
/obj/item/weapon/katana/energy/Destroy()
/obj/item/weapon/katana/energy/New()
/obj/item/weapon/katana/energy/afterattack(atom/target, mob/user, proximity_flag, click_parameters)
/obj/item/weapon/katana/energy/returnToOwner(var/mob/living/carbon/human/user, var/doSpark = 1, var/caught = 0)
/obj/item/weapon/katana/energy/throw_impact(atom/hit_atom)
/obj/item/weapon/katana/suicide_act(mob/user)
/obj/item/weapon/kitchen
/obj/item/weapon/kitchen/fork
/obj/item/weapon/kitchen/fork/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/kitchen/knife
/obj/item/weapon/kitchen/knife/butcher
/obj/item/weapon/kitchen/knife/ritual
/obj/item/weapon/kitchen/knife/suicide_act(mob/user)
/obj/item/weapon/kitchen/rollingpin
/obj/item/weapon/lazarus_injector
/obj/item/weapon/lazarus_injector/afterattack(atom/target, mob/user, proximity_flag)
/obj/item/weapon/lazarus_injector/emp_act()
/obj/item/weapon/lazarus_injector/examine(mob/user)
/obj/item/weapon/light
/obj/item/weapon/light/New()
/obj/item/weapon/light/afterattack(atom/target, mob/user,proximity)
/obj/item/weapon/light/attackby(var/obj/item/I, var/mob/user, params)
/obj/item/weapon/light/bulb
/obj/item/weapon/light/shatter()
/obj/item/weapon/light/throw_impact(atom/hit_atom)
/obj/item/weapon/light/tube
/obj/item/weapon/light/update()
/obj/item/weapon/lighter
/obj/item/weapon/lighter/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/lighter/attack_self(mob/living/user)
/obj/item/weapon/lighter/dropped(mob/user)
/obj/item/weapon/lighter/grayscale
/obj/item/weapon/lighter/grayscale/New()
/obj/item/weapon/lighter/pickup(mob/user)
/obj/item/weapon/lighter/process()
/obj/item/weapon/lighter/random
/obj/item/weapon/lighter/random/New()
/obj/item/weapon/lighter/update_icon()
/obj/item/weapon/lighter/zippo
/obj/item/weapon/lipstick
/obj/item/weapon/lipstick/attack(mob/M, mob/user)
/obj/item/weapon/lipstick/attack_self(mob/user)
/obj/item/weapon/lipstick/black
/obj/item/weapon/lipstick/jade
/obj/item/weapon/lipstick/purple
/obj/item/weapon/lipstick/random
/obj/item/weapon/lipstick/random/New()
/obj/item/weapon/locator
/obj/item/weapon/locator/Topic(href, href_list)
/obj/item/weapon/locator/attack_self(mob/user as mob)
/obj/item/weapon/match
/obj/item/weapon/match/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/match/dropped(mob/user as mob)
/obj/item/weapon/match/fire_act()
/obj/item/weapon/match/matchburnout()
/obj/item/weapon/match/matchignite()
/obj/item/weapon/match/process()
/obj/item/weapon/melee
/obj/item/weapon/melee/arm_blade
/obj/item/weapon/melee/arm_blade/New()
/obj/item/weapon/melee/arm_blade/afterattack(atom/target, mob/user, proximity)
/obj/item/weapon/melee/arm_blade/dropped(mob/user)
/obj/item/weapon/melee/baton
/obj/item/weapon/melee/baton/CheckParts()
/obj/item/weapon/melee/baton/New()
/obj/item/weapon/melee/baton/attack(mob/M, mob/living/carbon/human/user)
/obj/item/weapon/melee/baton/attack_self(mob/user)
/obj/item/weapon/melee/baton/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/melee/baton/baton_stun(mob/living/L, mob/user)
/obj/item/weapon/melee/baton/cattleprod
/obj/item/weapon/melee/baton/deductcharge(var/chrgdeductamt)
/obj/item/weapon/melee/baton/emp_act(severity)
/obj/item/weapon/melee/baton/examine(mob/user)
/obj/item/weapon/melee/baton/loaded/New()
/obj/item/weapon/melee/baton/suicide_act(mob/user)
/obj/item/weapon/melee/baton/update_icon()
/obj/item/weapon/melee/chainofcommand
/obj/item/weapon/melee/chainofcommand/suicide_act(mob/user)
/obj/item/weapon/melee/classic_baton
/obj/item/weapon/melee/classic_baton/attack(mob/target as mob, mob/living/user as mob)
/obj/item/weapon/melee/classic_baton/telescopic
/obj/item/weapon/melee/classic_baton/telescopic/attack_self(mob/user as mob)
/obj/item/weapon/melee/cultblade
/obj/item/weapon/melee/cultblade/attack(mob/living/target as mob, mob/living/carbon/human/user as mob)
/obj/item/weapon/melee/cultblade/pickup(mob/living/user as mob)
/obj/item/weapon/melee/energy
/obj/item/weapon/melee/energy/attack_self(mob/living/carbon/user)
/obj/item/weapon/melee/energy/axe
/obj/item/weapon/melee/energy/axe/suicide_act(mob/user)
/obj/item/weapon/melee/energy/blade
/obj/item/weapon/melee/energy/blade/New()
/obj/item/weapon/melee/energy/blade/attack_self(mob/user)
/obj/item/weapon/melee/energy/blade/dropped()
/obj/item/weapon/melee/energy/rejects_blood()
/obj/item/weapon/melee/energy/suicide_act(mob/user)
/obj/item/weapon/melee/energy/sword
/obj/item/weapon/melee/energy/sword/IsShield()
/obj/item/weapon/melee/energy/sword/New()
/obj/item/weapon/melee/energy/sword/cyborg
/obj/item/weapon/melee/energy/sword/cyborg/attack(mob/M, var/mob/living/silicon/robot/R)
/obj/item/weapon/melee/energy/sword/pirate
/obj/item/weapon/melee/energy/sword/pirate/New()
/obj/item/weapon/melee/energy/sword/saber
/obj/item/weapon/melee/energy/sword/saber/attackby(obj/item/weapon/W, mob/living/user, params)
/obj/item/weapon/melee/energy/sword/saber/blue
/obj/item/weapon/melee/energy/sword/saber/green
/obj/item/weapon/melee/energy/sword/saber/purple
/obj/item/weapon/melee/energy/sword/saber/red
/obj/item/weapon/melee/shield/New()
/obj/item/weapon/mining_voucher
/obj/item/weapon/module
/obj/item/weapon/module/power_control
/obj/item/weapon/moneybag
/obj/item/weapon/moneybag/Topic(href, href_list)
/obj/item/weapon/moneybag/attack_hand(user as mob)
/obj/item/weapon/moneybag/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/moneybag/vault
/obj/item/weapon/moneybag/vault/New()
/obj/item/weapon/mop
/obj/item/weapon/mop/New()
/obj/item/weapon/mop/afterattack(atom/A, mob/user, proximity)
/obj/item/weapon/mop/clean(turf/simulated/A)
/obj/item/weapon/mop/cyborg
/obj/item/weapon/mop/cyborg/janicart_insert(mob/user, obj/structure/janitorialcart/J)
/obj/item/weapon/mop/janicart_insert(mob/user, obj/structure/janitorialcart/J)
/obj/item/weapon/newspaper
/obj/item/weapon/newspaper/Topic(href, href_list)
/obj/item/weapon/newspaper/attack_self(mob/user)
/obj/item/weapon/newspaper/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/newspaper/notContent(list/L)
/obj/item/weapon/newspaper/suicide_act(mob/user)
/obj/item/weapon/nullrod
/obj/item/weapon/nullrod/suicide_act(mob/user)
/obj/item/weapon/ore
/obj/item/weapon/ore/New()
/obj/item/weapon/ore/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/item/weapon/ore/bananium
/obj/item/weapon/ore/diamond
/obj/item/weapon/ore/ex_act()
/obj/item/weapon/ore/glass
/obj/item/weapon/ore/glass/attack_self(mob/living/user as mob)
/obj/item/weapon/ore/gold
/obj/item/weapon/ore/iron
/obj/item/weapon/ore/plasma
/obj/item/weapon/ore/plasma/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/item/weapon/ore/silver
/obj/item/weapon/ore/slag
/obj/item/weapon/ore/uranium
/obj/item/weapon/orion_ship
/obj/item/weapon/orion_ship/attack_self(mob/user)
/obj/item/weapon/orion_ship/examine(mob/user)
/obj/item/weapon/pai_cable
/obj/item/weapon/pai_cable/attack(obj/machinery/M as obj, mob/user as mob)
/obj/item/weapon/pai_cable/plugin(obj/machinery/M as obj, mob/user as mob)
/obj/item/weapon/paint
/obj/item/weapon/paint/afterattack(turf/target, mob/user as mob, proximity)
/obj/item/weapon/paint/anycolor
/obj/item/weapon/paint/anycolor/attack_self(mob/user as mob)
/obj/item/weapon/paint/black
/obj/item/weapon/paint/blue
/obj/item/weapon/paint/green
/obj/item/weapon/paint/paint_remover
/obj/item/weapon/paint/paint_remover/afterattack(turf/target, mob/user as mob,proximity)
/obj/item/weapon/paint/red
/obj/item/weapon/paint/violet
/obj/item/weapon/paint/white
/obj/item/weapon/paint/yellow
/obj/item/weapon/paper
/obj/item/weapon/paper/Cloning
/obj/item/weapon/paper/Court
/obj/item/weapon/paper/New()
/obj/item/weapon/paper/Topic(href, href_list)
/obj/item/weapon/paper/Toxin
/obj/item/weapon/paper/abductor
/obj/item/weapon/paper/addtofield(id, text, links = 0)
/obj/item/weapon/paper/attack(mob/M, mob/user)
/obj/item/weapon/paper/attack_ai(mob/living/silicon/ai/user)
/obj/item/weapon/paper/attack_hand()
/obj/item/weapon/paper/attack_self(mob/user)
/obj/item/weapon/paper/attackby(obj/item/weapon/P, mob/living/carbon/human/user, params)
/obj/item/weapon/paper/burn(var/showmsg, var/burntime)
/obj/item/weapon/paper/ccaMemo
/obj/item/weapon/paper/centcom
/obj/item/weapon/paper/clearpaper()
/obj/item/weapon/paper/conveyor
/obj/item/weapon/paper/courtroom
/obj/item/weapon/paper/crumpled
/obj/item/weapon/paper/crumpled/bloody
/obj/item/weapon/paper/crumpled/update_icon()
/obj/item/weapon/paper/djstation
/obj/item/weapon/paper/examine(mob/user)
/obj/item/weapon/paper/fire_act()
/obj/item/weapon/paper/gravity_gen
/obj/item/weapon/paper/hydroponics
/obj/item/weapon/paper/jobs
/obj/item/weapon/paper/manifest
/obj/item/weapon/paper/mining
/obj/item/weapon/paper/monitorkey
/obj/item/weapon/paper/monitorkey/New()
/obj/item/weapon/paper/openhelp(mob/user)
/obj/item/weapon/paper/pamphlet
/obj/item/weapon/paper/pamphlet/ccaInfo
/obj/item/weapon/paper/pamphlet/update_icon()
/obj/item/weapon/paper/parsepencode(t, obj/item/weapon/pen/P, mob/user, iscrayon = 0)
/obj/item/weapon/paper/range
/obj/item/weapon/paper/recycler
/obj/item/weapon/paper/sc_safehint_paper_bible
/obj/item/weapon/paper/sc_safehint_paper_bible/New()
/obj/item/weapon/paper/sc_safehint_paper_caf
/obj/item/weapon/paper/sc_safehint_paper_hydro
/obj/item/weapon/paper/sc_safehint_paper_hydro/New()
/obj/item/weapon/paper/sc_safehint_paper_prison
/obj/item/weapon/paper/sc_safehint_paper_prison/New()
/obj/item/weapon/paper/sc_safehint_paper_shuttle
/obj/item/weapon/paper/solar
/obj/item/weapon/paper/sop
/obj/item/weapon/paper/talisman
/obj/item/weapon/paper/talisman/Topic(href, href_list)
/obj/item/weapon/paper/talisman/attack(mob/living/carbon/T as mob, mob/living/user as mob)
/obj/item/weapon/paper/talisman/attack_self(mob/living/user as mob)
/obj/item/weapon/paper/talisman/supply
/obj/item/weapon/paper/talisman/supply(var/key)
/obj/item/weapon/paper/update_icon()
/obj/item/weapon/paper/updateinfolinks()
/obj/item/weapon/paper/verb/rename()
/obj/item/weapon/paper_bin
/obj/item/weapon/paper_bin/MouseDrop(atom/over_object)
/obj/item/weapon/paper_bin/attack_hand(mob/user)
/obj/item/weapon/paper_bin/attack_paw(mob/user)
/obj/item/weapon/paper_bin/attackby(obj/item/weapon/paper/i, mob/user, params)
/obj/item/weapon/paper_bin/examine(mob/user)
/obj/item/weapon/paper_bin/update_icon()
/obj/item/weapon/pen
/obj/item/weapon/pen/attack(mob/living/M, mob/user)
/obj/item/weapon/pen/blue
/obj/item/weapon/pen/gang
/obj/item/weapon/pen/gang/attack(mob/living/M, mob/user)
/obj/item/weapon/pen/gang/cooldown(modifier)
/obj/item/weapon/pen/invisible
/obj/item/weapon/pen/red
/obj/item/weapon/pen/sleepy
/obj/item/weapon/pen/sleepy/New()
/obj/item/weapon/pen/sleepy/attack(mob/living/M, mob/user)
/obj/item/weapon/pen/suicide_act(mob/user)
/obj/item/weapon/phone
/obj/item/weapon/phone/suicide_act(mob/user)
/obj/item/weapon/photo
/obj/item/weapon/photo/attack_self(mob/user)
/obj/item/weapon/photo/attackby(obj/item/weapon/P, mob/user, params)
/obj/item/weapon/photo/examine(mob/user)
/obj/item/weapon/photo/photocreate(var/inicon, var/inimg, var/indesc, var/inblueprints)
/obj/item/weapon/photo/show(mob/user)
/obj/item/weapon/photo/verb/rename()
/obj/item/weapon/pickaxe
/obj/item/weapon/pickaxe/diamond
/obj/item/weapon/pickaxe/drill
/obj/item/weapon/pickaxe/drill/cyborg
/obj/item/weapon/pickaxe/drill/cyborg/diamond
/obj/item/weapon/pickaxe/drill/diamonddrill
/obj/item/weapon/pickaxe/drill/jackhammer
/obj/item/weapon/pickaxe/playDigSound()
/obj/item/weapon/picket_sign
/obj/item/weapon/picket_sign/attack_self(mob/living/carbon/human/user)
/obj/item/weapon/picket_sign/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/pinpointer
/obj/item/weapon/pinpointer/Destroy()
/obj/item/weapon/pinpointer/advpinpointer
/obj/item/weapon/pinpointer/advpinpointer/attack_self()
/obj/item/weapon/pinpointer/advpinpointer/verb/toggle_mode()
/obj/item/weapon/pinpointer/attack_self()
/obj/item/weapon/pinpointer/examine(mob/user)
/obj/item/weapon/pinpointer/nukeop
/obj/item/weapon/pinpointer/nukeop/attack_self(mob/user as mob)
/obj/item/weapon/pinpointer/nukeop/workdisk()
/obj/item/weapon/pinpointer/nukeop/worklocation()
/obj/item/weapon/pinpointer/operative
/obj/item/weapon/pinpointer/operative/attack_self()
/obj/item/weapon/pinpointer/operative/examine(mob/user)
/obj/item/weapon/pinpointer/operative/scan_for_ops()
/obj/item/weapon/pinpointer/operative/workop()
/obj/item/weapon/pinpointer/point_at(atom/target, spawnself = 1)
/obj/item/weapon/pinpointer/scandisk()
/obj/item/weapon/pinpointer/workdisk()
/obj/item/weapon/pipe_dispenser
/obj/item/weapon/pipe_dispenser/New()
/obj/item/weapon/pipe_dispenser/Topic(href, href_list)
/obj/item/weapon/pipe_dispenser/activate()
/obj/item/weapon/pipe_dispenser/afterattack(atom/A, mob/user)
/obj/item/weapon/pipe_dispenser/attack_self(mob/user as mob)
/obj/item/weapon/pipe_dispenser/render_dir_img(var/_dir,var/pic,var/title,var/flipped=0)
/obj/item/weapon/pipe_dispenser/show_menu(mob/user as mob)
/obj/item/weapon/plasma_fist_scroll
/obj/item/weapon/plasma_fist_scroll/attack_self(mob/user as mob)
/obj/item/weapon/pneumatic_cannon
/obj/item/weapon/pneumatic_cannon/afterattack(atom/target as mob|obj|turf, mob/living/carbon/human/user as mob|obj, flag, params)
/obj/item/weapon/pneumatic_cannon/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/pneumatic_cannon/examine(mob/user)
/obj/item/weapon/pneumatic_cannon/ghetto
/obj/item/weapon/pneumatic_cannon/updateTank(var/obj/item/weapon/tank/internals/thetank, var/removing = 0, var/mob/living/carbon/human/user)
/obj/item/weapon/pneumatic_cannon/update_icons()
/obj/item/weapon/rack_parts
/obj/item/weapon/rack_parts/attack_self(mob/user as mob)
/obj/item/weapon/rack_parts/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/razor
/obj/item/weapon/razor/attack(mob/M, mob/user)
/obj/item/weapon/razor/shave(mob/living/carbon/human/H, location = "mouth")
/obj/item/weapon/rcd
/obj/item/weapon/rcd/Destroy()
/obj/item/weapon/rcd/New()
/obj/item/weapon/rcd/activate()
/obj/item/weapon/rcd/afterattack(atom/A, mob/user, proximity)
/obj/item/weapon/rcd/attack_self(mob/user)
/obj/item/weapon/rcd/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/rcd/borg/New()
/obj/item/weapon/rcd/borg/checkResource(var/amount, var/mob/user)
/obj/item/weapon/rcd/borg/useResource(var/amount, var/mob/user)
/obj/item/weapon/rcd/checkResource(var/amount, var/mob/user)
/obj/item/weapon/rcd/combat
/obj/item/weapon/rcd/loaded
/obj/item/weapon/rcd/useResource(var/amount, var/mob/user)
/obj/item/weapon/rcd/verb/change_airlock_setting()
/obj/item/weapon/rcd_ammo
/obj/item/weapon/rcd_ammo/large
/obj/item/weapon/rcs
/obj/item/weapon/rcs/Destroy()
/obj/item/weapon/rcs/New()
/obj/item/weapon/rcs/attack_self(mob/user)
/obj/item/weapon/rcs/emag_act(mob/user as mob)
/obj/item/weapon/rcs/examine(mob/user)
/obj/item/weapon/rcs/process()
/obj/item/weapon/reagent_containers
/obj/item/weapon/reagent_containers/New(location, vol = 0)
/obj/item/weapon/reagent_containers/afterattack(obj/target, mob/user , flag)
/obj/item/weapon/reagent_containers/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/blood
/obj/item/weapon/reagent_containers/blood/AMinus
/obj/item/weapon/reagent_containers/blood/APlus
/obj/item/weapon/reagent_containers/blood/BMinus
/obj/item/weapon/reagent_containers/blood/BPlus
/obj/item/weapon/reagent_containers/blood/New()
/obj/item/weapon/reagent_containers/blood/OMinus
/obj/item/weapon/reagent_containers/blood/OPlus
/obj/item/weapon/reagent_containers/blood/empty
/obj/item/weapon/reagent_containers/blood/on_reagent_change()
/obj/item/weapon/reagent_containers/blood/random/New()
/obj/item/weapon/reagent_containers/blood/update_icon()
/obj/item/weapon/reagent_containers/borghypo
/obj/item/weapon/reagent_containers/borghypo/DescribeContents()
/obj/item/weapon/reagent_containers/borghypo/Destroy()
/obj/item/weapon/reagent_containers/borghypo/New()
/obj/item/weapon/reagent_containers/borghypo/add_reagent(var/reagent)
/obj/item/weapon/reagent_containers/borghypo/attack(mob/living/M as mob, mob/user as mob)
/obj/item/weapon/reagent_containers/borghypo/attack_self(mob/user)
/obj/item/weapon/reagent_containers/borghypo/borgshaker
/obj/item/weapon/reagent_containers/borghypo/borgshaker/DescribeContents()
/obj/item/weapon/reagent_containers/borghypo/borgshaker/afterattack(obj/target, mob/user, proximity)
/obj/item/weapon/reagent_containers/borghypo/borgshaker/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/reagent_containers/borghypo/borgshaker/attack_self(mob/user)
/obj/item/weapon/reagent_containers/borghypo/borgshaker/hacked
/obj/item/weapon/reagent_containers/borghypo/borgshaker/regenerate_reagents()
/obj/item/weapon/reagent_containers/borghypo/examine(mob/user)
/obj/item/weapon/reagent_containers/borghypo/process()
/obj/item/weapon/reagent_containers/borghypo/regenerate_reagents()
/obj/item/weapon/reagent_containers/canconsume(mob/eater, mob/user)
/obj/item/weapon/reagent_containers/dropper
/obj/item/weapon/reagent_containers/dropper/afterattack(obj/target, mob/user , proximity)
/obj/item/weapon/reagent_containers/dropper/update_icon()
/obj/item/weapon/reagent_containers/ex_act()
/obj/item/weapon/reagent_containers/fire_act()
/obj/item/weapon/reagent_containers/food
/obj/item/weapon/reagent_containers/food/New()
/obj/item/weapon/reagent_containers/food/condiment
/obj/item/weapon/reagent_containers/food/condiment/afterattack(obj/target, mob/user , proximity)
/obj/item/weapon/reagent_containers/food/condiment/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/food/condiment/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/condiment/enzyme
/obj/item/weapon/reagent_containers/food/condiment/flour
/obj/item/weapon/reagent_containers/food/condiment/milk
/obj/item/weapon/reagent_containers/food/condiment/on_reagent_change()
/obj/item/weapon/reagent_containers/food/condiment/pack
/obj/item/weapon/reagent_containers/food/condiment/pack/afterattack(obj/target, mob/user , proximity)
/obj/item/weapon/reagent_containers/food/condiment/pack/attack(mob/M, mob/user, def_zone)
/obj/item/weapon/reagent_containers/food/condiment/pack/hotsauce
/obj/item/weapon/reagent_containers/food/condiment/pack/ketchup
/obj/item/weapon/reagent_containers/food/condiment/pack/on_reagent_change()
/obj/item/weapon/reagent_containers/food/condiment/peppermill
/obj/item/weapon/reagent_containers/food/condiment/rice
/obj/item/weapon/reagent_containers/food/condiment/saltshaker
/obj/item/weapon/reagent_containers/food/condiment/soymilk
/obj/item/weapon/reagent_containers/food/condiment/sugar
/obj/item/weapon/reagent_containers/food/drinks
/obj/item/weapon/reagent_containers/food/drinks/New()
/obj/item/weapon/reagent_containers/food/drinks/afterattack(obj/target, mob/user , proximity)
/obj/item/weapon/reagent_containers/food/drinks/ale
/obj/item/weapon/reagent_containers/food/drinks/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/food/drinks/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/drinks/attackby(var/obj/item/I, mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/drinks/beer
/obj/item/weapon/reagent_containers/food/drinks/bottle
/obj/item/weapon/reagent_containers/food/drinks/bottle/attack(mob/living/target as mob, mob/living/user as mob)
/obj/item/weapon/reagent_containers/food/drinks/bottle/bottleofnothing
/obj/item/weapon/reagent_containers/food/drinks/bottle/cognac
/obj/item/weapon/reagent_containers/food/drinks/bottle/cream
/obj/item/weapon/reagent_containers/food/drinks/bottle/gin
/obj/item/weapon/reagent_containers/food/drinks/bottle/goldschlager
/obj/item/weapon/reagent_containers/food/drinks/bottle/holywater
/obj/item/weapon/reagent_containers/food/drinks/bottle/kahlua
/obj/item/weapon/reagent_containers/food/drinks/bottle/limejuice
/obj/item/weapon/reagent_containers/food/drinks/bottle/orangejuice
/obj/item/weapon/reagent_containers/food/drinks/bottle/patron
/obj/item/weapon/reagent_containers/food/drinks/bottle/rum
/obj/item/weapon/reagent_containers/food/drinks/bottle/smash(mob/living/target as mob, mob/living/user as mob)
/obj/item/weapon/reagent_containers/food/drinks/bottle/tequila
/obj/item/weapon/reagent_containers/food/drinks/bottle/tomatojuice
/obj/item/weapon/reagent_containers/food/drinks/bottle/vermouth
/obj/item/weapon/reagent_containers/food/drinks/bottle/vodka
/obj/item/weapon/reagent_containers/food/drinks/bottle/vodka/badminka
/obj/item/weapon/reagent_containers/food/drinks/bottle/whiskey
/obj/item/weapon/reagent_containers/food/drinks/bottle/wine
/obj/item/weapon/reagent_containers/food/drinks/britcup
/obj/item/weapon/reagent_containers/food/drinks/coffee
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/attackby(var/obj/item/I, mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/filled/New()
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/filled/cola
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/filled/soda
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/on_reagent_change()
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/shotglass
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/shotglass/on_reagent_change()
/obj/item/weapon/reagent_containers/food/drinks/dry_ramen
/obj/item/weapon/reagent_containers/food/drinks/flask
/obj/item/weapon/reagent_containers/food/drinks/flask/det
/obj/item/weapon/reagent_containers/food/drinks/golden_cup
/obj/item/weapon/reagent_containers/food/drinks/golden_cup/tournament_26_06_2011
/obj/item/weapon/reagent_containers/food/drinks/h_chocolate
/obj/item/weapon/reagent_containers/food/drinks/ice
/obj/item/weapon/reagent_containers/food/drinks/on_reagent_change()
/obj/item/weapon/reagent_containers/food/drinks/shaker
/obj/item/weapon/reagent_containers/food/drinks/sillycup
/obj/item/weapon/reagent_containers/food/drinks/sillycup/on_reagent_change()
/obj/item/weapon/reagent_containers/food/drinks/soda_cans
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/attack(mob/M, mob/user)
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/cola
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/dr_gibb
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/lemon_lime
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/lemon_lime/New()
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/sodawater
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/space_mountain_wind
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/space_up
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/starkist
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/thirteenloko
/obj/item/weapon/reagent_containers/food/drinks/soda_cans/tonic
/obj/item/weapon/reagent_containers/food/drinks/tea
/obj/item/weapon/reagent_containers/food/snacks
/obj/item/weapon/reagent_containers/food/snacks/CheckParts()
/obj/item/weapon/reagent_containers/food/snacks/Destroy()
/obj/item/weapon/reagent_containers/food/snacks/MouseDrop(atom/over)
/obj/item/weapon/reagent_containers/food/snacks/On_Consume()
/obj/item/weapon/reagent_containers/food/snacks/afterattack(obj/target, mob/user , proximity)
/obj/item/weapon/reagent_containers/food/snacks/attack(mob/M, mob/user, def_zone)
/obj/item/weapon/reagent_containers/food/snacks/attack_animal(mob/M)
/obj/item/weapon/reagent_containers/food/snacks/attack_self(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/reagent_containers/food/snacks/badrecipe
/obj/item/weapon/reagent_containers/food/snacks/baguette
/obj/item/weapon/reagent_containers/food/snacks/beans
/obj/item/weapon/reagent_containers/food/snacks/bearsteak
/obj/item/weapon/reagent_containers/food/snacks/beefnoodle
/obj/item/weapon/reagent_containers/food/snacks/benedict
/obj/item/weapon/reagent_containers/food/snacks/bluecherrycupcake
/obj/item/weapon/reagent_containers/food/snacks/blumpkinpieslice
/obj/item/weapon/reagent_containers/food/snacks/boiledegg
/obj/item/weapon/reagent_containers/food/snacks/boiledspaghetti
/obj/item/weapon/reagent_containers/food/snacks/boiledspiderleg
/obj/item/weapon/reagent_containers/food/snacks/breadslice
/obj/item/weapon/reagent_containers/food/snacks/breadslice/banana
/obj/item/weapon/reagent_containers/food/snacks/breadslice/creamcheese
/obj/item/weapon/reagent_containers/food/snacks/breadslice/custom
/obj/item/weapon/reagent_containers/food/snacks/breadslice/meat
/obj/item/weapon/reagent_containers/food/snacks/breadslice/mimana
/obj/item/weapon/reagent_containers/food/snacks/breadslice/plain
/obj/item/weapon/reagent_containers/food/snacks/breadslice/spidermeat
/obj/item/weapon/reagent_containers/food/snacks/breadslice/tofu
/obj/item/weapon/reagent_containers/food/snacks/breadslice/xenomeat
/obj/item/weapon/reagent_containers/food/snacks/bun
/obj/item/weapon/reagent_containers/food/snacks/burger
/obj/item/weapon/reagent_containers/food/snacks/burger/appendix
/obj/item/weapon/reagent_containers/food/snacks/burger/bearger
/obj/item/weapon/reagent_containers/food/snacks/burger/bigbite
/obj/item/weapon/reagent_containers/food/snacks/burger/blue
/obj/item/weapon/reagent_containers/food/snacks/burger/brain
/obj/item/weapon/reagent_containers/food/snacks/burger/clown
/obj/item/weapon/reagent_containers/food/snacks/burger/fish
/obj/item/weapon/reagent_containers/food/snacks/burger/fivealarm
/obj/item/weapon/reagent_containers/food/snacks/burger/ghost
/obj/item/weapon/reagent_containers/food/snacks/burger/green
/obj/item/weapon/reagent_containers/food/snacks/burger/human
/obj/item/weapon/reagent_containers/food/snacks/burger/jelly
/obj/item/weapon/reagent_containers/food/snacks/burger/jelly/cherry
/obj/item/weapon/reagent_containers/food/snacks/burger/jelly/slime
/obj/item/weapon/reagent_containers/food/snacks/burger/mime
/obj/item/weapon/reagent_containers/food/snacks/burger/orange
/obj/item/weapon/reagent_containers/food/snacks/burger/plain
/obj/item/weapon/reagent_containers/food/snacks/burger/purple
/obj/item/weapon/reagent_containers/food/snacks/burger/rat
/obj/item/weapon/reagent_containers/food/snacks/burger/red
/obj/item/weapon/reagent_containers/food/snacks/burger/roburger
/obj/item/weapon/reagent_containers/food/snacks/burger/roburgerbig
/obj/item/weapon/reagent_containers/food/snacks/burger/spell
/obj/item/weapon/reagent_containers/food/snacks/burger/superbite
/obj/item/weapon/reagent_containers/food/snacks/burger/tofu
/obj/item/weapon/reagent_containers/food/snacks/burger/xeno
/obj/item/weapon/reagent_containers/food/snacks/burger/yellow
/obj/item/weapon/reagent_containers/food/snacks/burrito
/obj/item/weapon/reagent_containers/food/snacks/cakebatter
/obj/item/weapon/reagent_containers/food/snacks/cakebatter/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/reagent_containers/food/snacks/cakeslice
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/apple
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/birthday
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/brain
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/brioche
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/carrot
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/cheese
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/chocolate
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/custom
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/lemon
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/lime
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/orange
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/plain
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/pumpkinspice
/obj/item/weapon/reagent_containers/food/snacks/cakeslice/slimecake
/obj/item/weapon/reagent_containers/food/snacks/candiedapple
/obj/item/weapon/reagent_containers/food/snacks/candy
/obj/item/weapon/reagent_containers/food/snacks/candy_corn
/obj/item/weapon/reagent_containers/food/snacks/carneburrito
/obj/item/weapon/reagent_containers/food/snacks/carpmeat
/obj/item/weapon/reagent_containers/food/snacks/carpmeat/New()
/obj/item/weapon/reagent_containers/food/snacks/carpmeat/imitation
/obj/item/weapon/reagent_containers/food/snacks/carrotfries
/obj/item/weapon/reagent_containers/food/snacks/chawanmushi
/obj/item/weapon/reagent_containers/food/snacks/cheesewedge
/obj/item/weapon/reagent_containers/food/snacks/cheesiehonkers
/obj/item/weapon/reagent_containers/food/snacks/cheesyburrito
/obj/item/weapon/reagent_containers/food/snacks/cheesyfries
/obj/item/weapon/reagent_containers/food/snacks/cheesynachos
/obj/item/weapon/reagent_containers/food/snacks/cherrycupcake
/obj/item/weapon/reagent_containers/food/snacks/chips
/obj/item/weapon/reagent_containers/food/snacks/chococoin
/obj/item/weapon/reagent_containers/food/snacks/chococornet
/obj/item/weapon/reagent_containers/food/snacks/chocolatebar
/obj/item/weapon/reagent_containers/food/snacks/chocolatebar/Unwrap(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/chocolatebar/attack_self(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/chocolatebar/wrapped
/obj/item/weapon/reagent_containers/food/snacks/chocolatebunny
/obj/item/weapon/reagent_containers/food/snacks/chocolateegg
/obj/item/weapon/reagent_containers/food/snacks/chocoorange
/obj/item/weapon/reagent_containers/food/snacks/chowmein
/obj/item/weapon/reagent_containers/food/snacks/cookie
/obj/item/weapon/reagent_containers/food/snacks/copypasta
/obj/item/weapon/reagent_containers/food/snacks/cornedbeef
/obj/item/weapon/reagent_containers/food/snacks/cracker
/obj/item/weapon/reagent_containers/food/snacks/cubancarp
/obj/item/weapon/reagent_containers/food/snacks/cubannachos
/obj/item/weapon/reagent_containers/food/snacks/customizable
/obj/item/weapon/reagent_containers/food/snacks/customizable/Destroy()
/obj/item/weapon/reagent_containers/food/snacks/customizable/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/reagent_containers/food/snacks/customizable/bread
/obj/item/weapon/reagent_containers/food/snacks/customizable/burger
/obj/item/weapon/reagent_containers/food/snacks/customizable/cake
/obj/item/weapon/reagent_containers/food/snacks/customizable/examine(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/customizable/initialize_custom_food(obj/item/BASE, obj/item/I, mob/user)
/obj/item/weapon/reagent_containers/food/snacks/customizable/initialize_slice(obj/item/weapon/reagent_containers/food/snacks/slice, reagents_per_slice)
/obj/item/weapon/reagent_containers/food/snacks/customizable/kebab
/obj/item/weapon/reagent_containers/food/snacks/customizable/mix_filling_color(obj/item/weapon/reagent_containers/food/snacks/S)
/obj/item/weapon/reagent_containers/food/snacks/customizable/pasta
/obj/item/weapon/reagent_containers/food/snacks/customizable/pie
/obj/item/weapon/reagent_containers/food/snacks/customizable/pizza
/obj/item/weapon/reagent_containers/food/snacks/customizable/salad
/obj/item/weapon/reagent_containers/food/snacks/customizable/sandwich
/obj/item/weapon/reagent_containers/food/snacks/customizable/sandwich/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/reagent_containers/food/snacks/customizable/sandwich/initialize_custom_food(obj/item/weapon/reagent_containers/BASE, obj/item/I, mob/user)
/obj/item/weapon/reagent_containers/food/snacks/customizable/soup
/obj/item/weapon/reagent_containers/food/snacks/customizable/soup/New()
/obj/item/weapon/reagent_containers/food/snacks/customizable/update_name(obj/item/weapon/reagent_containers/food/snacks/S)
/obj/item/weapon/reagent_containers/food/snacks/customizable/update_overlays(obj/item/weapon/reagent_containers/food/snacks/S)
/obj/item/weapon/reagent_containers/food/snacks/donkpocket
/obj/item/weapon/reagent_containers/food/snacks/donkpocket/warm
/obj/item/weapon/reagent_containers/food/snacks/donut
/obj/item/weapon/reagent_containers/food/snacks/donut/New()
/obj/item/weapon/reagent_containers/food/snacks/donut/chaos
/obj/item/weapon/reagent_containers/food/snacks/donut/chaos/New()
/obj/item/weapon/reagent_containers/food/snacks/donut/jelly
/obj/item/weapon/reagent_containers/food/snacks/donut/jelly/New()
/obj/item/weapon/reagent_containers/food/snacks/donut/jelly/cherryjelly
/obj/item/weapon/reagent_containers/food/snacks/donut/jelly/slimejelly
/obj/item/weapon/reagent_containers/food/snacks/dough
/obj/item/weapon/reagent_containers/food/snacks/dough/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/reagent_containers/food/snacks/doughslice
/obj/item/weapon/reagent_containers/food/snacks/dulcedebatataslice
/obj/item/weapon/reagent_containers/food/snacks/egg
/obj/item/weapon/reagent_containers/food/snacks/egg/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/egg/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/egg/blue
/obj/item/weapon/reagent_containers/food/snacks/egg/dispensePrize(var/turf/where)
/obj/item/weapon/reagent_containers/food/snacks/egg/green
/obj/item/weapon/reagent_containers/food/snacks/egg/loaded
/obj/item/weapon/reagent_containers/food/snacks/egg/loaded/New()
/obj/item/weapon/reagent_containers/food/snacks/egg/mime
/obj/item/weapon/reagent_containers/food/snacks/egg/orange
/obj/item/weapon/reagent_containers/food/snacks/egg/process()
/obj/item/weapon/reagent_containers/food/snacks/egg/purple
/obj/item/weapon/reagent_containers/food/snacks/egg/rainbow
/obj/item/weapon/reagent_containers/food/snacks/egg/red
/obj/item/weapon/reagent_containers/food/snacks/egg/throw_impact(atom/hit_atom)
/obj/item/weapon/reagent_containers/food/snacks/egg/yellow
/obj/item/weapon/reagent_containers/food/snacks/eggplantparm
/obj/item/weapon/reagent_containers/food/snacks/eggwrap
/obj/item/weapon/reagent_containers/food/snacks/enchiladas
/obj/item/weapon/reagent_containers/food/snacks/examine(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/faggot
/obj/item/weapon/reagent_containers/food/snacks/fishandchips
/obj/item/weapon/reagent_containers/food/snacks/fishfingers
/obj/item/weapon/reagent_containers/food/snacks/flatdough
/obj/item/weapon/reagent_containers/food/snacks/fortunecookie
/obj/item/weapon/reagent_containers/food/snacks/friedegg
/obj/item/weapon/reagent_containers/food/snacks/fries
/obj/item/weapon/reagent_containers/food/snacks/fuegoburrito
/obj/item/weapon/reagent_containers/food/snacks/grilledcheese
/obj/item/weapon/reagent_containers/food/snacks/grown/
/obj/item/weapon/reagent_containers/food/snacks/grown/New(newloc, new_potency = 50)
/obj/item/weapon/reagent_containers/food/snacks/grown/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosia
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosia/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosia/deus
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosia/deus/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosia/vulgaris
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosia/vulgaris/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/apple
/obj/item/weapon/reagent_containers/food/snacks/grown/apple/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/apple/gold
/obj/item/weapon/reagent_containers/food/snacks/grown/apple/gold/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/apple/gold/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/apple/poisoned
/obj/item/weapon/reagent_containers/food/snacks/grown/apple/poisoned/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/banana
/obj/item/weapon/reagent_containers/food/snacks/grown/banana/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/banana/suicide_act(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/grown/berries
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/death
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/death/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/glow
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/glow/Destroy()
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/glow/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/glow/dropped(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/glow/pickup(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/poison
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/poison/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/bluecherries
/obj/item/weapon/reagent_containers/food/snacks/grown/bluecherries/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/blumpkin
/obj/item/weapon/reagent_containers/food/snacks/grown/blumpkin/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/cabbage
/obj/item/weapon/reagent_containers/food/snacks/grown/cabbage/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/carpet
/obj/item/weapon/reagent_containers/food/snacks/grown/carpet/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/carrot
/obj/item/weapon/reagent_containers/food/snacks/grown/carrot/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/cherries
/obj/item/weapon/reagent_containers/food/snacks/grown/cherries/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/chili
/obj/item/weapon/reagent_containers/food/snacks/grown/chili/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/chili/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/citrus/
/obj/item/weapon/reagent_containers/food/snacks/grown/citrus/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/citrus/lemon
/obj/item/weapon/reagent_containers/food/snacks/grown/citrus/lime
/obj/item/weapon/reagent_containers/food/snacks/grown/citrus/orange
/obj/item/weapon/reagent_containers/food/snacks/grown/cocoapod
/obj/item/weapon/reagent_containers/food/snacks/grown/cocoapod/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/coffee
/obj/item/weapon/reagent_containers/food/snacks/grown/coffee/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/coffee/arabica
/obj/item/weapon/reagent_containers/food/snacks/grown/coffee/robusta
/obj/item/weapon/reagent_containers/food/snacks/grown/coffee/robusta/add_juice(var/loc, var/potency = 20)
/obj/item/weapon/reagent_containers/food/snacks/grown/corn
/obj/item/weapon/reagent_containers/food/snacks/grown/corn/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/eggplant
/obj/item/weapon/reagent_containers/food/snacks/grown/eggplant/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/gatfruit
/obj/item/weapon/reagent_containers/food/snacks/grown/gatfruit/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/ghost_chili
/obj/item/weapon/reagent_containers/food/snacks/grown/ghost_chili/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/ghost_chili/attack_hand(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/ghost_chili/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/ghost_chili/process()
/obj/item/weapon/reagent_containers/food/snacks/grown/grapes
/obj/item/weapon/reagent_containers/food/snacks/grown/grapes/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/grapes/green
/obj/item/weapon/reagent_containers/food/snacks/grown/grapes/green/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/grass
/obj/item/weapon/reagent_containers/food/snacks/grown/grass/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/grass/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/harebell
/obj/item/weapon/reagent_containers/food/snacks/grown/harebell/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/holymelon
/obj/item/weapon/reagent_containers/food/snacks/grown/holymelon/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/icepepper
/obj/item/weapon/reagent_containers/food/snacks/grown/icepepper/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/icepepper/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/koibeans
/obj/item/weapon/reagent_containers/food/snacks/grown/koibeans/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/kudzupod
/obj/item/weapon/reagent_containers/food/snacks/grown/kudzupod/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/mimana
/obj/item/weapon/reagent_containers/food/snacks/grown/mimana/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/moonflower
/obj/item/weapon/reagent_containers/food/snacks/grown/moonflower/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/amanita
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/amanita/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/amanita/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/angel
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/angel/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/angel/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/chanterelle
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/chanterelle/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/Destroy()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/New(var/loc, var/new_potency = 10)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/dropped(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/pickup(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/libertycap
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/libertycap/add_juice(var/loc, var/potency = 15)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/libertycap/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/plumphelmet
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/plumphelmet/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/reishi
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/reishi/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/reishi/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/walkingmushroom
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/walkingmushroom/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/walkingmushroom/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/oat
/obj/item/weapon/reagent_containers/food/snacks/grown/oat/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/parsnip
/obj/item/weapon/reagent_containers/food/snacks/grown/parsnip/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/poppy
/obj/item/weapon/reagent_containers/food/snacks/grown/poppy/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/poppy/geranium
/obj/item/weapon/reagent_containers/food/snacks/grown/poppy/lily
/obj/item/weapon/reagent_containers/food/snacks/grown/potato
/obj/item/weapon/reagent_containers/food/snacks/grown/potato/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/potato/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/pumpkin
/obj/item/weapon/reagent_containers/food/snacks/grown/pumpkin/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/pumpkin/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/reagent_containers/food/snacks/grown/redbeet
/obj/item/weapon/reagent_containers/food/snacks/grown/redbeet/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/rice
/obj/item/weapon/reagent_containers/food/snacks/grown/rice/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/shell/
/obj/item/weapon/reagent_containers/food/snacks/grown/shell/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/shell/eggy
/obj/item/weapon/reagent_containers/food/snacks/grown/shell/eggy/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/shell/moneyfruit
/obj/item/weapon/reagent_containers/food/snacks/grown/shell/moneyfruit/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/soybeans
/obj/item/weapon/reagent_containers/food/snacks/grown/soybeans/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/sugarcane
/obj/item/weapon/reagent_containers/food/snacks/grown/sugarcane/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/sweetpotato
/obj/item/weapon/reagent_containers/food/snacks/grown/sweetpotato/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/tea
/obj/item/weapon/reagent_containers/food/snacks/grown/tea/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/tea/aspera
/obj/item/weapon/reagent_containers/food/snacks/grown/tea/astra
/obj/item/weapon/reagent_containers/food/snacks/grown/tea/astra/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/tobacco
/obj/item/weapon/reagent_containers/food/snacks/grown/tobacco/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/tobacco/space
/obj/item/weapon/reagent_containers/food/snacks/grown/tobacco/space/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/blood
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/blood/add_juice(var/loc, var/potency = 10)
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/blue
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/blue/Crossed(AM as mob|obj)
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/blue/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/blue/bluespace
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/blue/bluespace/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/blue/bluespace/attack_self(var/mob/user)
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/blue/bluespace/squish(atom/squishee)
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/killer
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/killer/attack(mob/M, mob/user, def_zone)
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/killer/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/squish(atom/target)
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/throw_impact(atom/hit_atom)
/obj/item/weapon/reagent_containers/food/snacks/grown/vanillapod
/obj/item/weapon/reagent_containers/food/snacks/grown/vanillapod/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/watermelon
/obj/item/weapon/reagent_containers/food/snacks/grown/watermelon/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/wheat
/obj/item/weapon/reagent_containers/food/snacks/grown/wheat/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/grown/whitebeet
/obj/item/weapon/reagent_containers/food/snacks/grown/whitebeet/add_juice()
/obj/item/weapon/reagent_containers/food/snacks/honkdae
/obj/item/weapon/reagent_containers/food/snacks/hotcrossbun
/obj/item/weapon/reagent_containers/food/snacks/hotdog
/obj/item/weapon/reagent_containers/food/snacks/hugemushroomslice
/obj/item/weapon/reagent_containers/food/snacks/icecream
/obj/item/weapon/reagent_containers/food/snacks/icecream/New()
/obj/item/weapon/reagent_containers/food/snacks/icecream/add_ice_cream(var/flavour_name)
/obj/item/weapon/reagent_containers/food/snacks/icecreamsandwich
/obj/item/weapon/reagent_containers/food/snacks/initialize_cooked_food(obj/item/weapon/reagent_containers/food/snacks/S, cooking_efficiency = 1)
/obj/item/weapon/reagent_containers/food/snacks/initialize_slice(obj/item/weapon/reagent_containers/food/snacks/slice, reagents_per_slice)
/obj/item/weapon/reagent_containers/food/snacks/jelliedtoast
/obj/item/weapon/reagent_containers/food/snacks/jelliedtoast/cherry
/obj/item/weapon/reagent_containers/food/snacks/jelliedtoast/slime
/obj/item/weapon/reagent_containers/food/snacks/jellysandwich
/obj/item/weapon/reagent_containers/food/snacks/jellysandwich/cherry
/obj/item/weapon/reagent_containers/food/snacks/jellysandwich/slime
/obj/item/weapon/reagent_containers/food/snacks/kebab
/obj/item/weapon/reagent_containers/food/snacks/kebab/human
/obj/item/weapon/reagent_containers/food/snacks/kebab/monkey
/obj/item/weapon/reagent_containers/food/snacks/kebab/tofu
/obj/item/weapon/reagent_containers/food/snacks/loadedbakedpotato
/obj/item/weapon/reagent_containers/food/snacks/meat
/obj/item/weapon/reagent_containers/food/snacks/meat/cutlet
/obj/item/weapon/reagent_containers/food/snacks/meat/cutlet/bear
/obj/item/weapon/reagent_containers/food/snacks/meat/cutlet/killertomato
/obj/item/weapon/reagent_containers/food/snacks/meat/cutlet/plain
/obj/item/weapon/reagent_containers/food/snacks/meat/cutlet/plain/human
/obj/item/weapon/reagent_containers/food/snacks/meat/cutlet/spider
/obj/item/weapon/reagent_containers/food/snacks/meat/cutlet/xeno
/obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet
/obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet/bear
/obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet/initialize_cooked_food(obj/item/weapon/reagent_containers/food/snacks/S, cooking_efficiency)
/obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet/killertomato
/obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet/plain
/obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet/plain/human
/obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet/plain/human/initialize_cooked_food(obj/item/weapon/reagent_containers/food/snacks/S, cooking_efficiency)
/obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet/spider
/obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet/xeno
/obj/item/weapon/reagent_containers/food/snacks/meat/slab
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/bear
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/corgi
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/initialize_cooked_food(obj/item/weapon/reagent_containers/food/snacks/S, cooking_efficiency)
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/initialize_slice(obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet/plain/human/slice, reagents_per_slice)
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/mutant/fly
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/mutant/golem
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/mutant/golem/adamantine
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/mutant/lizard
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/mutant/plant
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/mutant/shadow
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/mutant/skeleton
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/mutant/slime
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/human/mutant/zombie
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/initialize_cooked_food(obj/item/weapon/reagent_containers/food/snacks/S, cooking_efficiency)
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/initialize_slice(obj/item/weapon/reagent_containers/food/snacks/meat/rawcutlet/slice, reagents_per_slice)
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/killertomato
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/monkey
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/pug
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/spider
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/synthmeat
/obj/item/weapon/reagent_containers/food/snacks/meat/slab/xeno
/obj/item/weapon/reagent_containers/food/snacks/meat/steak
/obj/item/weapon/reagent_containers/food/snacks/meat/steak/bear
/obj/item/weapon/reagent_containers/food/snacks/meat/steak/killertomato
/obj/item/weapon/reagent_containers/food/snacks/meat/steak/plain
/obj/item/weapon/reagent_containers/food/snacks/meat/steak/plain/human
/obj/item/weapon/reagent_containers/food/snacks/meat/steak/spider
/obj/item/weapon/reagent_containers/food/snacks/meat/steak/xeno
/obj/item/weapon/reagent_containers/food/snacks/meatballspaghetti
/obj/item/weapon/reagent_containers/food/snacks/meatbun
/obj/item/weapon/reagent_containers/food/snacks/melonfruitbowl
/obj/item/weapon/reagent_containers/food/snacks/melonkeg
/obj/item/weapon/reagent_containers/food/snacks/mint
/obj/item/weapon/reagent_containers/food/snacks/monkeycube
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/Expand()
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/Unwrap(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/afterattack(obj/O, mob/user,proximity)
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/attack_self(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/wrapped
/obj/item/weapon/reagent_containers/food/snacks/muffin
/obj/item/weapon/reagent_containers/food/snacks/muffin/berry
/obj/item/weapon/reagent_containers/food/snacks/muffin/booberry
/obj/item/weapon/reagent_containers/food/snacks/nachos
/obj/item/weapon/reagent_containers/food/snacks/no_raisin
/obj/item/weapon/reagent_containers/food/snacks/notasandwich
/obj/item/weapon/reagent_containers/food/snacks/oatmealcookie
/obj/item/weapon/reagent_containers/food/snacks/omelette
/obj/item/weapon/reagent_containers/food/snacks/omelette/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/reagent_containers/food/snacks/pastatomato
/obj/item/weapon/reagent_containers/food/snacks/pastrybase
/obj/item/weapon/reagent_containers/food/snacks/pie
/obj/item/weapon/reagent_containers/food/snacks/pie/amanita_pie
/obj/item/weapon/reagent_containers/food/snacks/pie/applepie
/obj/item/weapon/reagent_containers/food/snacks/pie/appletart
/obj/item/weapon/reagent_containers/food/snacks/pie/bearypie
/obj/item/weapon/reagent_containers/food/snacks/pie/berryclafoutis
/obj/item/weapon/reagent_containers/food/snacks/pie/blumpkinpie
/obj/item/weapon/reagent_containers/food/snacks/pie/cherrypie
/obj/item/weapon/reagent_containers/food/snacks/pie/cream
/obj/item/weapon/reagent_containers/food/snacks/pie/cream/throw_impact(atom/hit_atom)
/obj/item/weapon/reagent_containers/food/snacks/pie/dulcedebatata
/obj/item/weapon/reagent_containers/food/snacks/pie/frostypie
/obj/item/weapon/reagent_containers/food/snacks/pie/meatpie
/obj/item/weapon/reagent_containers/food/snacks/pie/plain
/obj/item/weapon/reagent_containers/food/snacks/pie/plump_pie
/obj/item/weapon/reagent_containers/food/snacks/pie/plump_pie/New()
/obj/item/weapon/reagent_containers/food/snacks/pie/pumpkinpie
/obj/item/weapon/reagent_containers/food/snacks/pie/tofupie
/obj/item/weapon/reagent_containers/food/snacks/pie/xemeatpie
/obj/item/weapon/reagent_containers/food/snacks/piedough
/obj/item/weapon/reagent_containers/food/snacks/pizza
/obj/item/weapon/reagent_containers/food/snacks/pizza/dank
/obj/item/weapon/reagent_containers/food/snacks/pizza/donkpocket
/obj/item/weapon/reagent_containers/food/snacks/pizza/margherita
/obj/item/weapon/reagent_containers/food/snacks/pizza/meat
/obj/item/weapon/reagent_containers/food/snacks/pizza/mushroom
/obj/item/weapon/reagent_containers/food/snacks/pizza/sassysage
/obj/item/weapon/reagent_containers/food/snacks/pizza/vegetable
/obj/item/weapon/reagent_containers/food/snacks/pizzabread
/obj/item/weapon/reagent_containers/food/snacks/pizzaslice
/obj/item/weapon/reagent_containers/food/snacks/pizzaslice/custom
/obj/item/weapon/reagent_containers/food/snacks/pizzaslice/dank
/obj/item/weapon/reagent_containers/food/snacks/pizzaslice/donkpocket
/obj/item/weapon/reagent_containers/food/snacks/pizzaslice/margherita
/obj/item/weapon/reagent_containers/food/snacks/pizzaslice/meat
/obj/item/weapon/reagent_containers/food/snacks/pizzaslice/mushroom
/obj/item/weapon/reagent_containers/food/snacks/pizzaslice/sassysage
/obj/item/weapon/reagent_containers/food/snacks/pizzaslice/vegetable
/obj/item/weapon/reagent_containers/food/snacks/plumphelmetbiscuit
/obj/item/weapon/reagent_containers/food/snacks/plumphelmetbiscuit/New()
/obj/item/weapon/reagent_containers/food/snacks/popcorn
/obj/item/weapon/reagent_containers/food/snacks/popcorn/New()
/obj/item/weapon/reagent_containers/food/snacks/poppypretzel
/obj/item/weapon/reagent_containers/food/snacks/pumpkinpieslice
/obj/item/weapon/reagent_containers/food/snacks/raisincookie
/obj/item/weapon/reagent_containers/food/snacks/rawpastrybase
/obj/item/weapon/reagent_containers/food/snacks/roastparsnip
/obj/item/weapon/reagent_containers/food/snacks/rofflewaffles
/obj/item/weapon/reagent_containers/food/snacks/salad
/obj/item/weapon/reagent_containers/food/snacks/salad/New()
/obj/item/weapon/reagent_containers/food/snacks/salad/aesirsalad
/obj/item/weapon/reagent_containers/food/snacks/salad/boiledrice
/obj/item/weapon/reagent_containers/food/snacks/salad/citrusdelight
/obj/item/weapon/reagent_containers/food/snacks/salad/eggbowl
/obj/item/weapon/reagent_containers/food/snacks/salad/fruit
/obj/item/weapon/reagent_containers/food/snacks/salad/herbsalad
/obj/item/weapon/reagent_containers/food/snacks/salad/jungle
/obj/item/weapon/reagent_containers/food/snacks/salad/oatmeal
/obj/item/weapon/reagent_containers/food/snacks/salad/ricebowl
/obj/item/weapon/reagent_containers/food/snacks/salad/ricepork
/obj/item/weapon/reagent_containers/food/snacks/salad/ricepudding
/obj/item/weapon/reagent_containers/food/snacks/salad/validsalad
/obj/item/weapon/reagent_containers/food/snacks/sandwich
/obj/item/weapon/reagent_containers/food/snacks/sashimi
/obj/item/weapon/reagent_containers/food/snacks/sausage
/obj/item/weapon/reagent_containers/food/snacks/sausage/New()
/obj/item/weapon/reagent_containers/food/snacks/scotchegg
/obj/item/weapon/reagent_containers/food/snacks/slice(var/accuracy, obj/item/weapon/W, mob/user)
/obj/item/weapon/reagent_containers/food/snacks/sosjerky
/obj/item/weapon/reagent_containers/food/snacks/soup
/obj/item/weapon/reagent_containers/food/snacks/soup/New()
/obj/item/weapon/reagent_containers/food/snacks/soup/amanitajelly
/obj/item/weapon/reagent_containers/food/snacks/soup/beet
/obj/item/weapon/reagent_containers/food/snacks/soup/beet/New()
/obj/item/weapon/reagent_containers/food/snacks/soup/beet/red
/obj/item/weapon/reagent_containers/food/snacks/soup/blood
/obj/item/weapon/reagent_containers/food/snacks/soup/clownstears
/obj/item/weapon/reagent_containers/food/snacks/soup/coldchili
/obj/item/weapon/reagent_containers/food/snacks/soup/hotchili
/obj/item/weapon/reagent_containers/food/snacks/soup/mammi
/obj/item/weapon/reagent_containers/food/snacks/soup/meatball
/obj/item/weapon/reagent_containers/food/snacks/soup/milo
/obj/item/weapon/reagent_containers/food/snacks/soup/monkeysdelight
/obj/item/weapon/reagent_containers/food/snacks/soup/mushroom
/obj/item/weapon/reagent_containers/food/snacks/soup/mystery
/obj/item/weapon/reagent_containers/food/snacks/soup/mystery/New()
/obj/item/weapon/reagent_containers/food/snacks/soup/nettle
/obj/item/weapon/reagent_containers/food/snacks/soup/slime
/obj/item/weapon/reagent_containers/food/snacks/soup/spacylibertyduff
/obj/item/weapon/reagent_containers/food/snacks/soup/stew
/obj/item/weapon/reagent_containers/food/snacks/soup/sweetpotato
/obj/item/weapon/reagent_containers/food/snacks/soup/tomato
/obj/item/weapon/reagent_containers/food/snacks/soup/vegetable
/obj/item/weapon/reagent_containers/food/snacks/soup/wingfangchu
/obj/item/weapon/reagent_containers/food/snacks/soup/wish
/obj/item/weapon/reagent_containers/food/snacks/soup/wish/New()
/obj/item/weapon/reagent_containers/food/snacks/soydope
/obj/item/weapon/reagent_containers/food/snacks/soylentgreen
/obj/item/weapon/reagent_containers/food/snacks/soylenviridians
/obj/item/weapon/reagent_containers/food/snacks/spacefreezy
/obj/item/weapon/reagent_containers/food/snacks/spacetwinkie
/obj/item/weapon/reagent_containers/food/snacks/spaghetti
/obj/item/weapon/reagent_containers/food/snacks/spesslaw
/obj/item/weapon/reagent_containers/food/snacks/spidereggs
/obj/item/weapon/reagent_containers/food/snacks/spidereggsham
/obj/item/weapon/reagent_containers/food/snacks/spiderleg
/obj/item/weapon/reagent_containers/food/snacks/stewedsoymeat
/obj/item/weapon/reagent_containers/food/snacks/stewedsoymeat/New()
/obj/item/weapon/reagent_containers/food/snacks/store
/obj/item/weapon/reagent_containers/food/snacks/store/attackby(obj/item/weapon/W, mob/user, params)
/obj/item/weapon/reagent_containers/food/snacks/store/bread
/obj/item/weapon/reagent_containers/food/snacks/store/bread/banana
/obj/item/weapon/reagent_containers/food/snacks/store/bread/creamcheese
/obj/item/weapon/reagent_containers/food/snacks/store/bread/meat
/obj/item/weapon/reagent_containers/food/snacks/store/bread/mimana
/obj/item/weapon/reagent_containers/food/snacks/store/bread/plain
/obj/item/weapon/reagent_containers/food/snacks/store/bread/spidermeat
/obj/item/weapon/reagent_containers/food/snacks/store/bread/tofu
/obj/item/weapon/reagent_containers/food/snacks/store/bread/xenomeat
/obj/item/weapon/reagent_containers/food/snacks/store/cake
/obj/item/weapon/reagent_containers/food/snacks/store/cake/apple
/obj/item/weapon/reagent_containers/food/snacks/store/cake/birthday
/obj/item/weapon/reagent_containers/food/snacks/store/cake/brain
/obj/item/weapon/reagent_containers/food/snacks/store/cake/brioche
/obj/item/weapon/reagent_containers/food/snacks/store/cake/carrot
/obj/item/weapon/reagent_containers/food/snacks/store/cake/cheese
/obj/item/weapon/reagent_containers/food/snacks/store/cake/chocolate
/obj/item/weapon/reagent_containers/food/snacks/store/cake/lemon
/obj/item/weapon/reagent_containers/food/snacks/store/cake/lime
/obj/item/weapon/reagent_containers/food/snacks/store/cake/orange
/obj/item/weapon/reagent_containers/food/snacks/store/cake/plain
/obj/item/weapon/reagent_containers/food/snacks/store/cake/pumpkinspice
/obj/item/weapon/reagent_containers/food/snacks/store/cake/slimecake
/obj/item/weapon/reagent_containers/food/snacks/store/cheesewheel
/obj/item/weapon/reagent_containers/food/snacks/sugarcookie
/obj/item/weapon/reagent_containers/food/snacks/sugarcookie/spookycoffin
/obj/item/weapon/reagent_containers/food/snacks/sugarcookie/spookyskull
/obj/item/weapon/reagent_containers/food/snacks/sundae
/obj/item/weapon/reagent_containers/food/snacks/syndicake
/obj/item/weapon/reagent_containers/food/snacks/toastedsandwich
/obj/item/weapon/reagent_containers/food/snacks/tofu
/obj/item/weapon/reagent_containers/food/snacks/tortilla
/obj/item/weapon/reagent_containers/food/snacks/twobread
/obj/item/weapon/reagent_containers/food/snacks/update_overlays(obj/item/weapon/reagent_containers/food/snacks/S)
/obj/item/weapon/reagent_containers/food/snacks/waffles
/obj/item/weapon/reagent_containers/food/snacks/watermelonslice
/obj/item/weapon/reagent_containers/food/snacks/yakiimo
/obj/item/weapon/reagent_containers/glass
/obj/item/weapon/reagent_containers/glass/afterattack(obj/target, mob/user, proximity)
/obj/item/weapon/reagent_containers/glass/attackby(var/obj/item/I, mob/user as mob, params)
/obj/item/weapon/reagent_containers/glass/beaker
/obj/item/weapon/reagent_containers/glass/beaker/New()
/obj/item/weapon/reagent_containers/glass/beaker/attack_hand()
/obj/item/weapon/reagent_containers/glass/beaker/bluespace
/obj/item/weapon/reagent_containers/glass/beaker/cryoxadone
/obj/item/weapon/reagent_containers/glass/beaker/dropped(mob/user)
/obj/item/weapon/reagent_containers/glass/beaker/large
/obj/item/weapon/reagent_containers/glass/beaker/large/charcoal
/obj/item/weapon/reagent_containers/glass/beaker/large/epinephrine
/obj/item/weapon/reagent_containers/glass/beaker/large/silver_sulfadiazine
/obj/item/weapon/reagent_containers/glass/beaker/large/styptic
/obj/item/weapon/reagent_containers/glass/beaker/noreact
/obj/item/weapon/reagent_containers/glass/beaker/on_reagent_change()
/obj/item/weapon/reagent_containers/glass/beaker/pickup(mob/user)
/obj/item/weapon/reagent_containers/glass/beaker/slime
/obj/item/weapon/reagent_containers/glass/beaker/sulphuric
/obj/item/weapon/reagent_containers/glass/beaker/update_icon()
/obj/item/weapon/reagent_containers/glass/bottle
/obj/item/weapon/reagent_containers/glass/bottle/New()
/obj/item/weapon/reagent_containers/glass/bottle/adminordrazine
/obj/item/weapon/reagent_containers/glass/bottle/amanitin
/obj/item/weapon/reagent_containers/glass/bottle/ammonia
/obj/item/weapon/reagent_containers/glass/bottle/anxiety
/obj/item/weapon/reagent_containers/glass/bottle/atropine
/obj/item/weapon/reagent_containers/glass/bottle/beesease
/obj/item/weapon/reagent_containers/glass/bottle/brainrot
/obj/item/weapon/reagent_containers/glass/bottle/capsaicin
/obj/item/weapon/reagent_containers/glass/bottle/charcoal
/obj/item/weapon/reagent_containers/glass/bottle/chloralhydrate
/obj/item/weapon/reagent_containers/glass/bottle/cold
/obj/item/weapon/reagent_containers/glass/bottle/coniine
/obj/item/weapon/reagent_containers/glass/bottle/curare
/obj/item/weapon/reagent_containers/glass/bottle/cyanide
/obj/item/weapon/reagent_containers/glass/bottle/diethylamine
/obj/item/weapon/reagent_containers/glass/bottle/diphenhydramine
/obj/item/weapon/reagent_containers/glass/bottle/epiglottis_virion
/obj/item/weapon/reagent_containers/glass/bottle/epinephrine
/obj/item/weapon/reagent_containers/glass/bottle/facid
/obj/item/weapon/reagent_containers/glass/bottle/fake_gbs
/obj/item/weapon/reagent_containers/glass/bottle/flu_virion
/obj/item/weapon/reagent_containers/glass/bottle/formaldehyde
/obj/item/weapon/reagent_containers/glass/bottle/frostoil
/obj/item/weapon/reagent_containers/glass/bottle/gbs
/obj/item/weapon/reagent_containers/glass/bottle/histamine
/obj/item/weapon/reagent_containers/glass/bottle/hullucigen_virion
/obj/item/weapon/reagent_containers/glass/bottle/initropidril
/obj/item/weapon/reagent_containers/glass/bottle/liver_enhance_virion
/obj/item/weapon/reagent_containers/glass/bottle/magnitis
/obj/item/weapon/reagent_containers/glass/bottle/morphine
/obj/item/weapon/reagent_containers/glass/bottle/mutagen
/obj/item/weapon/reagent_containers/glass/bottle/neurotoxin2
/obj/item/weapon/reagent_containers/glass/bottle/nutrient
/obj/item/weapon/reagent_containers/glass/bottle/nutrient/New()
/obj/item/weapon/reagent_containers/glass/bottle/nutrient/ez
/obj/item/weapon/reagent_containers/glass/bottle/nutrient/ez/New()
/obj/item/weapon/reagent_containers/glass/bottle/nutrient/l4z
/obj/item/weapon/reagent_containers/glass/bottle/nutrient/l4z/New()
/obj/item/weapon/reagent_containers/glass/bottle/nutrient/rh
/obj/item/weapon/reagent_containers/glass/bottle/nutrient/rh/New()
/obj/item/weapon/reagent_containers/glass/bottle/pancuronium
/obj/item/weapon/reagent_containers/glass/bottle/pestkiller
/obj/item/weapon/reagent_containers/glass/bottle/pestkiller/New()
/obj/item/weapon/reagent_containers/glass/bottle/pierrot_throat
/obj/item/weapon/reagent_containers/glass/bottle/plasma
/obj/item/weapon/reagent_containers/glass/bottle/polonium
/obj/item/weapon/reagent_containers/glass/bottle/potass_iodide
/obj/item/weapon/reagent_containers/glass/bottle/retrovirus
/obj/item/weapon/reagent_containers/glass/bottle/salglu_solution
/obj/item/weapon/reagent_containers/glass/bottle/sodium_thiopental
/obj/item/weapon/reagent_containers/glass/bottle/synaptizine
/obj/item/weapon/reagent_containers/glass/bottle/toxin
/obj/item/weapon/reagent_containers/glass/bottle/traitor
/obj/item/weapon/reagent_containers/glass/bottle/traitor/New()
/obj/item/weapon/reagent_containers/glass/bottle/venom
/obj/item/weapon/reagent_containers/glass/bottle/weedkiller
/obj/item/weapon/reagent_containers/glass/bottle/weedkiller/New()
/obj/item/weapon/reagent_containers/glass/bottle/wizarditis
/obj/item/weapon/reagent_containers/glass/bowl
/obj/item/weapon/reagent_containers/glass/bowl/attackby(obj/item/I,mob/user, params)
/obj/item/weapon/reagent_containers/glass/bowl/on_reagent_change()
/obj/item/weapon/reagent_containers/glass/bowl/update_icon()
/obj/item/weapon/reagent_containers/glass/bucket
/obj/item/weapon/reagent_containers/glass/bucket/attackby(var/obj/O, mob/user as mob, params)
/obj/item/weapon/reagent_containers/glass/rag
/obj/item/weapon/reagent_containers/glass/rag/afterattack(atom/A as obj|turf|area, mob/user as mob,proximity)
/obj/item/weapon/reagent_containers/hypospray
/obj/item/weapon/reagent_containers/hypospray/CMO
/obj/item/weapon/reagent_containers/hypospray/attack(mob/living/M, mob/user)
/obj/item/weapon/reagent_containers/hypospray/attack_paw(mob/user)
/obj/item/weapon/reagent_containers/hypospray/combat
/obj/item/weapon/reagent_containers/hypospray/combat/nanites
/obj/item/weapon/reagent_containers/hypospray/medipen
/obj/item/weapon/reagent_containers/hypospray/medipen/New()
/obj/item/weapon/reagent_containers/hypospray/medipen/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/reagent_containers/hypospray/medipen/examine()
/obj/item/weapon/reagent_containers/hypospray/medipen/morphine
/obj/item/weapon/reagent_containers/hypospray/medipen/stimpack
/obj/item/weapon/reagent_containers/hypospray/medipen/update_icon()
/obj/item/weapon/reagent_containers/pill
/obj/item/weapon/reagent_containers/pill/New()
/obj/item/weapon/reagent_containers/pill/adminordrazine
/obj/item/weapon/reagent_containers/pill/afterattack(obj/target, mob/user , proximity)
/obj/item/weapon/reagent_containers/pill/attack(mob/M, mob/user, def_zone)
/obj/item/weapon/reagent_containers/pill/attack_self(mob/user)
/obj/item/weapon/reagent_containers/pill/charcoal
/obj/item/weapon/reagent_containers/pill/cyanide
/obj/item/weapon/reagent_containers/pill/epinephrine
/obj/item/weapon/reagent_containers/pill/insulin
/obj/item/weapon/reagent_containers/pill/mannitol
/obj/item/weapon/reagent_containers/pill/morphine
/obj/item/weapon/reagent_containers/pill/mutadone
/obj/item/weapon/reagent_containers/pill/patch
/obj/item/weapon/reagent_containers/pill/patch/New()
/obj/item/weapon/reagent_containers/pill/patch/afterattack(obj/target, mob/user , proximity)
/obj/item/weapon/reagent_containers/pill/patch/canconsume(mob/eater, mob/user)
/obj/item/weapon/reagent_containers/pill/patch/silver_sulf
/obj/item/weapon/reagent_containers/pill/patch/styptic
/obj/item/weapon/reagent_containers/pill/salbutamol
/obj/item/weapon/reagent_containers/pill/salicyclic
/obj/item/weapon/reagent_containers/pill/stimulant
/obj/item/weapon/reagent_containers/pill/tox
/obj/item/weapon/reagent_containers/reagentlist(var/obj/item/weapon/reagent_containers/snack)
/obj/item/weapon/reagent_containers/spray
/obj/item/weapon/reagent_containers/spray/afterattack(atom/A as mob|obj, mob/user as mob)
/obj/item/weapon/reagent_containers/spray/attack_self(var/mob/user)
/obj/item/weapon/reagent_containers/spray/chemsprayer
/obj/item/weapon/reagent_containers/spray/chemsprayer/attack_self(var/mob/user)
/obj/item/weapon/reagent_containers/spray/chemsprayer/bioterror
/obj/item/weapon/reagent_containers/spray/chemsprayer/spray(var/atom/A)
/obj/item/weapon/reagent_containers/spray/cleaner
/obj/item/weapon/reagent_containers/spray/mister
/obj/item/weapon/reagent_containers/spray/mister/Move()
/obj/item/weapon/reagent_containers/spray/mister/New(parent_tank)
/obj/item/weapon/reagent_containers/spray/mister/afterattack(obj/target, mob/user, proximity)
/obj/item/weapon/reagent_containers/spray/mister/attack_self()
/obj/item/weapon/reagent_containers/spray/mister/dropped(mob/user as mob)
/obj/item/weapon/reagent_containers/spray/mister/janitor
/obj/item/weapon/reagent_containers/spray/mister/janitor/attack_self(var/mob/user)
/obj/item/weapon/reagent_containers/spray/pepper
/obj/item/weapon/reagent_containers/spray/pestspray
/obj/item/weapon/reagent_containers/spray/pestspray/New()
/obj/item/weapon/reagent_containers/spray/pestspray/suicide_act(mob/user)
/obj/item/weapon/reagent_containers/spray/plantbgone
/obj/item/weapon/reagent_containers/spray/spray(var/atom/A)
/obj/item/weapon/reagent_containers/spray/verb/empty()
/obj/item/weapon/reagent_containers/spray/waterflower
/obj/item/weapon/reagent_containers/spray/waterflower/attack_self(var/mob/user)
/obj/item/weapon/reagent_containers/spray/weedspray
/obj/item/weapon/reagent_containers/spray/weedspray/New()
/obj/item/weapon/reagent_containers/spray/weedspray/suicide_act(mob/user)
/obj/item/weapon/reagent_containers/syringe
/obj/item/weapon/reagent_containers/syringe/New()
/obj/item/weapon/reagent_containers/syringe/afterattack(obj/target, mob/user , proximity)
/obj/item/weapon/reagent_containers/syringe/antiviral
/obj/item/weapon/reagent_containers/syringe/attack_hand()
/obj/item/weapon/reagent_containers/syringe/attack_paw()
/obj/item/weapon/reagent_containers/syringe/attack_self(mob/user)
/obj/item/weapon/reagent_containers/syringe/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/reagent_containers/syringe/calomel
/obj/item/weapon/reagent_containers/syringe/charcoal
/obj/item/weapon/reagent_containers/syringe/dropped(mob/user)
/obj/item/weapon/reagent_containers/syringe/epinephrine
/obj/item/weapon/reagent_containers/syringe/lethal
/obj/item/weapon/reagent_containers/syringe/lethal/choral
/obj/item/weapon/reagent_containers/syringe/on_reagent_change()
/obj/item/weapon/reagent_containers/syringe/pickup(mob/user)
/obj/item/weapon/reagent_containers/syringe/stimulants
/obj/item/weapon/reagent_containers/syringe/update_icon()
/obj/item/weapon/reagent_containers/verb/set_APTFT()
/obj/item/weapon/relic
/obj/item/weapon/relic/New()
/obj/item/weapon/relic/attack_self(mob/user as mob)
/obj/item/weapon/relic/clean(var/mob/user)
/obj/item/weapon/relic/corgicannon(var/mob/user)
/obj/item/weapon/relic/explode(var/mob/user)
/obj/item/weapon/relic/flash(var/mob/user)
/obj/item/weapon/relic/petSpray(var/mob/user)
/obj/item/weapon/relic/rapidDupe(var/mob/user)
/obj/item/weapon/relic/reveal()
/obj/item/weapon/relic/teleport(var/mob/user)
/obj/item/weapon/relic/throwSmoke(var/turf/where)
/obj/item/weapon/relic/warn_admins(var/mob/user, var/RelicType, var/priority = 1)
/obj/item/weapon/research
/obj/item/weapon/resonator
/obj/item/weapon/resonator/CreateResonance(var/target, var/creator)
/obj/item/weapon/resonator/afterattack(atom/target, mob/user, proximity_flag)
/obj/item/weapon/resonator/attack_self(mob/user as mob)
/obj/item/weapon/restraints
/obj/item/weapon/restraints/handcuffs
/obj/item/weapon/restraints/handcuffs/apply_cuffs(mob/living/carbon/target, mob/user)
/obj/item/weapon/restraints/handcuffs/attack(mob/living/carbon/C, mob/living/carbon/human/user)
/obj/item/weapon/restraints/handcuffs/cable
/obj/item/weapon/restraints/handcuffs/cable/attackby(var/obj/item/I, mob/user as mob, params)
/obj/item/weapon/restraints/handcuffs/cable/blue
/obj/item/weapon/restraints/handcuffs/cable/cyan
/obj/item/weapon/restraints/handcuffs/cable/green
/obj/item/weapon/restraints/handcuffs/cable/orange
/obj/item/weapon/restraints/handcuffs/cable/pink
/obj/item/weapon/restraints/handcuffs/cable/red
/obj/item/weapon/restraints/handcuffs/cable/white
/obj/item/weapon/restraints/handcuffs/cable/yellow
/obj/item/weapon/restraints/handcuffs/cable/zipties
/obj/item/weapon/restraints/handcuffs/cable/zipties/cyborg/attack(mob/living/carbon/C, mob/user)
/obj/item/weapon/restraints/handcuffs/cable/zipties/used
/obj/item/weapon/restraints/handcuffs/cable/zipties/used/attack()
/obj/item/weapon/restraints/handcuffs/energy
/obj/item/weapon/restraints/handcuffs/energy/used
/obj/item/weapon/restraints/handcuffs/energy/used/dropped(mob/user)
/obj/item/weapon/restraints/legcuffs
/obj/item/weapon/restraints/legcuffs/beartrap
/obj/item/weapon/restraints/legcuffs/beartrap/Crossed(AM as mob|obj)
/obj/item/weapon/restraints/legcuffs/beartrap/attack_self(mob/user as mob)
/obj/item/weapon/restraints/legcuffs/beartrap/suicide_act(mob/user)
/obj/item/weapon/retractor
/obj/item/weapon/retractor/alien
/obj/item/weapon/robot_module
/obj/item/weapon/robot_module/New()
/obj/item/weapon/robot_module/butler
/obj/item/weapon/robot_module/butler/New()
/obj/item/weapon/robot_module/emp_act(severity)
/obj/item/weapon/robot_module/engineering
/obj/item/weapon/robot_module/engineering/New()
/obj/item/weapon/robot_module/fix_modules()
/obj/item/weapon/robot_module/get_inactive_modules()
/obj/item/weapon/robot_module/get_usable_modules()
/obj/item/weapon/robot_module/janitor
/obj/item/weapon/robot_module/janitor/New()
/obj/item/weapon/robot_module/medical
/obj/item/weapon/robot_module/medical/New()
/obj/item/weapon/robot_module/miner
/obj/item/weapon/robot_module/miner/New()
/obj/item/weapon/robot_module/on_emag()
/obj/item/weapon/robot_module/rebuild()
/obj/item/weapon/robot_module/respawn_consumable(var/mob/living/silicon/robot/R)
/obj/item/weapon/robot_module/security
/obj/item/weapon/robot_module/security/New()
/obj/item/weapon/robot_module/standard
/obj/item/weapon/robot_module/standard/New()
/obj/item/weapon/robot_module/syndicate
/obj/item/weapon/robot_module/syndicate/New()
/obj/item/weapon/rollingpaper
/obj/item/weapon/rollingpaper/afterattack(atom/target, mob/user as mob, proximity)
/obj/item/weapon/rsf
/obj/item/weapon/rsf/New()
/obj/item/weapon/rsf/afterattack(atom/A, mob/user as mob, proximity)
/obj/item/weapon/rsf/attack_self(mob/user as mob)
/obj/item/weapon/rsf/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/scalpel
/obj/item/weapon/scalpel/alien
/obj/item/weapon/scalpel/suicide_act(mob/user)
/obj/item/weapon/screwdriver
/obj/item/weapon/screwdriver/New(loc, var/param_color = null)
/obj/item/weapon/screwdriver/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/screwdriver/suicide_act(mob/user)
/obj/item/weapon/scrying
/obj/item/weapon/scrying/attack_self(mob/user as mob)
/obj/item/weapon/scythe
/obj/item/weapon/scythe/suicide_act(mob/user)
/obj/item/weapon/secbot_assembly
/obj/item/weapon/secbot_assembly/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/shard
/obj/item/weapon/shard/Crossed(var/mob/AM)
/obj/item/weapon/shard/New()
/obj/item/weapon/shard/afterattack(atom/A as mob|obj, mob/user, proximity)
/obj/item/weapon/shard/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/shard/suicide_act(mob/user)
/obj/item/weapon/shield
/obj/item/weapon/shield/changeling
/obj/item/weapon/shield/changeling/IsShield()
/obj/item/weapon/shield/energy
/obj/item/weapon/shield/energy/IsReflect()
/obj/item/weapon/shield/energy/IsShield()
/obj/item/weapon/shield/energy/attack_self(mob/living/carbon/human/user)
/obj/item/weapon/shield/riot
/obj/item/weapon/shield/riot/IsShield()
/obj/item/weapon/shield/riot/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/shield/riot/roman
/obj/item/weapon/shield/riot/tele
/obj/item/weapon/shield/riot/tele/IsShield()
/obj/item/weapon/shield/riot/tele/attack_self(mob/living/user)
/obj/item/weapon/shovel
/obj/item/weapon/shovel/spade
/obj/item/weapon/slimemutator
/obj/item/weapon/slimemutator/attack(mob/living/simple_animal/slime/M as mob, mob/user as mob)
/obj/item/weapon/slimestabilizer
/obj/item/weapon/slimestabilizer/attack(mob/living/simple_animal/slime/M as mob, mob/user as mob)
/obj/item/weapon/slimesteroid
/obj/item/weapon/slimesteroid/attack(mob/living/simple_animal/slime/M as mob, mob/user as mob)
/obj/item/weapon/slimesteroid2
/obj/item/weapon/slimesteroid3
/obj/item/weapon/soap
/obj/item/weapon/soap/Crossed(AM as mob|obj)
/obj/item/weapon/soap/afterattack(atom/target, mob/user as mob, proximity)
/obj/item/weapon/soap/deluxe
/obj/item/weapon/soap/nanotrasen
/obj/item/weapon/soap/syndie
/obj/item/weapon/sord
/obj/item/weapon/sord/suicide_act(mob/user)
/obj/item/weapon/spellbook
/obj/item/weapon/spellbook/GetCategoryHeader(var/category)
/obj/item/weapon/spellbook/New()
/obj/item/weapon/spellbook/Topic(href, href_list)
/obj/item/weapon/spellbook/attack_self(mob/user as mob)
/obj/item/weapon/spellbook/attackby(obj/item/O as obj, mob/user as mob, params)
/obj/item/weapon/spellbook/oneuse
/obj/item/weapon/spellbook/oneuse/New()
/obj/item/weapon/spellbook/oneuse/attack_self(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/attackby()
/obj/item/weapon/spellbook/oneuse/barnyard
/obj/item/weapon/spellbook/oneuse/barnyard/recoil(mob/living/carbon/user as mob)
/obj/item/weapon/spellbook/oneuse/blind
/obj/item/weapon/spellbook/oneuse/blind/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/charge
/obj/item/weapon/spellbook/oneuse/charge/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/fireball
/obj/item/weapon/spellbook/oneuse/fireball/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/forcewall
/obj/item/weapon/spellbook/oneuse/forcewall/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/knock
/obj/item/weapon/spellbook/oneuse/knock/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/mindswap
/obj/item/weapon/spellbook/oneuse/mindswap/onlearned()
/obj/item/weapon/spellbook/oneuse/mindswap/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/onlearned(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/smoke
/obj/item/weapon/spellbook/oneuse/smoke/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/summonitem
/obj/item/weapon/spellbook/oneuse/summonitem/recoil(mob/user as mob)
/obj/item/weapon/spellbook/wrap(var/content)
/obj/item/weapon/staff
/obj/item/weapon/staff/broom
/obj/item/weapon/staff/stick
/obj/item/weapon/stamp
/obj/item/weapon/stamp/attack_paw(mob/user)
/obj/item/weapon/stamp/captain
/obj/item/weapon/stamp/ce
/obj/item/weapon/stamp/chameleon/attack_self(mob/user as mob)
/obj/item/weapon/stamp/clown
/obj/item/weapon/stamp/cmo
/obj/item/weapon/stamp/denied
/obj/item/weapon/stamp/hop
/obj/item/weapon/stamp/hos
/obj/item/weapon/stamp/law
/obj/item/weapon/stamp/qm
/obj/item/weapon/stamp/rd
/obj/item/weapon/stamp/suicide_act(mob/user)
/obj/item/weapon/stock_parts
/obj/item/weapon/stock_parts/New()
/obj/item/weapon/stock_parts/capacitor
/obj/item/weapon/stock_parts/capacitor/adv
/obj/item/weapon/stock_parts/capacitor/quadratic
/obj/item/weapon/stock_parts/capacitor/super
/obj/item/weapon/stock_parts/cell
/obj/item/weapon/stock_parts/cell/New()
/obj/item/weapon/stock_parts/cell/attackby(obj/item/W, mob/user, params)
/obj/item/weapon/stock_parts/cell/blob_act()
/obj/item/weapon/stock_parts/cell/bluespace
/obj/item/weapon/stock_parts/cell/bluespace/empty/New()
/obj/item/weapon/stock_parts/cell/corrupt()
/obj/item/weapon/stock_parts/cell/crap
/obj/item/weapon/stock_parts/cell/crap/empty/New()
/obj/item/weapon/stock_parts/cell/emp_act(severity)
/obj/item/weapon/stock_parts/cell/emproof
/obj/item/weapon/stock_parts/cell/emproof/corrupt()
/obj/item/weapon/stock_parts/cell/emproof/emp_act(severity)
/obj/item/weapon/stock_parts/cell/emproof/empty/New()
/obj/item/weapon/stock_parts/cell/ex_act(severity, target)
/obj/item/weapon/stock_parts/cell/examine(mob/user)
/obj/item/weapon/stock_parts/cell/explode()
/obj/item/weapon/stock_parts/cell/get_electrocute_damage()
/obj/item/weapon/stock_parts/cell/give(var/amount)
/obj/item/weapon/stock_parts/cell/high
/obj/item/weapon/stock_parts/cell/high/empty/New()
/obj/item/weapon/stock_parts/cell/high/slime
/obj/item/weapon/stock_parts/cell/hyper
/obj/item/weapon/stock_parts/cell/hyper/empty/New()
/obj/item/weapon/stock_parts/cell/infinite
/obj/item/weapon/stock_parts/cell/infinite/use()
/obj/item/weapon/stock_parts/cell/ninjadrain_act(var/obj/item/clothing/suit/space/space_ninja/S, var/mob/living/carbon/human/H, var/obj/item/clothing/gloves/space_ninja/G)
/obj/item/weapon/stock_parts/cell/percent()
/obj/item/weapon/stock_parts/cell/potato
/obj/item/weapon/stock_parts/cell/pulse
/obj/item/weapon/stock_parts/cell/pulse/carbine
/obj/item/weapon/stock_parts/cell/pulse/pistol
/obj/item/weapon/stock_parts/cell/secborg
/obj/item/weapon/stock_parts/cell/secborg/empty/New()
/obj/item/weapon/stock_parts/cell/suicide_act(mob/user)
/obj/item/weapon/stock_parts/cell/super
/obj/item/weapon/stock_parts/cell/super/empty/New()
/obj/item/weapon/stock_parts/cell/updateicon()
/obj/item/weapon/stock_parts/cell/use(var/amount)
/obj/item/weapon/stock_parts/console_screen
/obj/item/weapon/stock_parts/manipulator
/obj/item/weapon/stock_parts/manipulator/femto
/obj/item/weapon/stock_parts/manipulator/nano
/obj/item/weapon/stock_parts/manipulator/pico
/obj/item/weapon/stock_parts/matter_bin
/obj/item/weapon/stock_parts/matter_bin/adv
/obj/item/weapon/stock_parts/matter_bin/bluespace
/obj/item/weapon/stock_parts/matter_bin/super
/obj/item/weapon/stock_parts/micro_laser
/obj/item/weapon/stock_parts/micro_laser/high
/obj/item/weapon/stock_parts/micro_laser/quadultra
/obj/item/weapon/stock_parts/micro_laser/ultra
/obj/item/weapon/stock_parts/scanning_module
/obj/item/weapon/stock_parts/scanning_module/adv
/obj/item/weapon/stock_parts/scanning_module/phasic
/obj/item/weapon/stock_parts/scanning_module/triphasic
/obj/item/weapon/stock_parts/subspace/amplifier
/obj/item/weapon/stock_parts/subspace/analyzer
/obj/item/weapon/stock_parts/subspace/ansible
/obj/item/weapon/stock_parts/subspace/crystal
/obj/item/weapon/stock_parts/subspace/filter
/obj/item/weapon/stock_parts/subspace/transmitter
/obj/item/weapon/stock_parts/subspace/treatment
/obj/item/weapon/storage
/obj/item/weapon/storage/Destroy()
/obj/item/weapon/storage/MouseDrop(atom/over_object)
/obj/item/weapon/storage/New()
/obj/item/weapon/storage/attack_ghost(mob/user as mob)
/obj/item/weapon/storage/attack_hand(mob/user)
/obj/item/weapon/storage/attack_paw(mob/user)
/obj/item/weapon/storage/attack_self(mob/user)
/obj/item/weapon/storage/attackby(obj/item/W, mob/user, params)
/obj/item/weapon/storage/backpack
/obj/item/weapon/storage/backpack/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/storage/backpack/botany
/obj/item/weapon/storage/backpack/captain
/obj/item/weapon/storage/backpack/chemistry
/obj/item/weapon/storage/backpack/clown
/obj/item/weapon/storage/backpack/cultpack
/obj/item/weapon/storage/backpack/dufflebag
/obj/item/weapon/storage/backpack/dufflebag/captain
/obj/item/weapon/storage/backpack/dufflebag/clown
/obj/item/weapon/storage/backpack/dufflebag/engineering
/obj/item/weapon/storage/backpack/dufflebag/med
/obj/item/weapon/storage/backpack/dufflebag/sec
/obj/item/weapon/storage/backpack/dufflebag/syndieammo
/obj/item/weapon/storage/backpack/dufflebag/syndieammo/loaded
/obj/item/weapon/storage/backpack/dufflebag/syndieammo/loaded/New()
/obj/item/weapon/storage/backpack/dufflebag/syndiemed
/obj/item/weapon/storage/backpack/genetics
/obj/item/weapon/storage/backpack/holding
/obj/item/weapon/storage/backpack/holding/can_be_inserted(obj/item/W, stop_messages = 0, mob/user)
/obj/item/weapon/storage/backpack/holding/failcheck(mob/user as mob)
/obj/item/weapon/storage/backpack/holding/handle_item_insertion(obj/item/W, prevent_warning = 0, mob/user)
/obj/item/weapon/storage/backpack/holding/singularity_act(current_size)
/obj/item/weapon/storage/backpack/holding/suicide_act(mob/user)
/obj/item/weapon/storage/backpack/industrial
/obj/item/weapon/storage/backpack/medic
/obj/item/weapon/storage/backpack/mime
/obj/item/weapon/storage/backpack/santabag
/obj/item/weapon/storage/backpack/satchel
/obj/item/weapon/storage/backpack/satchel/withwallet/New()
/obj/item/weapon/storage/backpack/satchel_cap
/obj/item/weapon/storage/backpack/satchel_chem
/obj/item/weapon/storage/backpack/satchel_eng
/obj/item/weapon/storage/backpack/satchel_flat
/obj/item/weapon/storage/backpack/satchel_flat/New()
/obj/item/weapon/storage/backpack/satchel_flat/hide(var/intact)
/obj/item/weapon/storage/backpack/satchel_gen
/obj/item/weapon/storage/backpack/satchel_hyd
/obj/item/weapon/storage/backpack/satchel_med
/obj/item/weapon/storage/backpack/satchel_norm
/obj/item/weapon/storage/backpack/satchel_sec
/obj/item/weapon/storage/backpack/satchel_tox
/obj/item/weapon/storage/backpack/satchel_vir
/obj/item/weapon/storage/backpack/science
/obj/item/weapon/storage/backpack/security
/obj/item/weapon/storage/backpack/virology
/obj/item/weapon/storage/bag
/obj/item/weapon/storage/bag/books
/obj/item/weapon/storage/bag/chemistry
/obj/item/weapon/storage/bag/easterbasket
/obj/item/weapon/storage/bag/easterbasket/countEggs()
/obj/item/weapon/storage/bag/easterbasket/handle_item_insertion(obj/item/I, prevent_warning = 0)
/obj/item/weapon/storage/bag/easterbasket/remove_from_storage(obj/item/W as obj, atom/new_location)
/obj/item/weapon/storage/bag/ore
/obj/item/weapon/storage/bag/ore/cyborg
/obj/item/weapon/storage/bag/ore/holding
/obj/item/weapon/storage/bag/plants
/obj/item/weapon/storage/bag/plants/portaseeder
/obj/item/weapon/storage/bag/plants/portaseeder/verb/dissolve_contents()
/obj/item/weapon/storage/bag/sheetsnatcher
/obj/item/weapon/storage/bag/sheetsnatcher/New()
/obj/item/weapon/storage/bag/sheetsnatcher/borg
/obj/item/weapon/storage/bag/sheetsnatcher/can_be_inserted(obj/item/W as obj, stop_messages = 0)
/obj/item/weapon/storage/bag/sheetsnatcher/handle_item_insertion(obj/item/W as obj, prevent_warning = 0)
/obj/item/weapon/storage/bag/sheetsnatcher/orient2hud(mob/user as mob)
/obj/item/weapon/storage/bag/sheetsnatcher/quick_empty()
/obj/item/weapon/storage/bag/sheetsnatcher/remove_from_storage(obj/item/W as obj, atom/new_location)
/obj/item/weapon/storage/bag/trash
/obj/item/weapon/storage/bag/trash/cyborg
/obj/item/weapon/storage/bag/trash/cyborg/janicart_insert(mob/user, obj/structure/janitorialcart/J)
/obj/item/weapon/storage/bag/trash/janicart_insert(mob/user, obj/structure/janitorialcart/J)
/obj/item/weapon/storage/bag/trash/suicide_act(mob/user)
/obj/item/weapon/storage/bag/trash/update_icon()
/obj/item/weapon/storage/bag/tray
/obj/item/weapon/storage/bag/tray/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/weapon/storage/bag/tray/handle_item_insertion(obj/item/I, prevent_warning = 0)
/obj/item/weapon/storage/bag/tray/rebuild_overlays()
/obj/item/weapon/storage/bag/tray/remove_from_storage(obj/item/W as obj, atom/new_location)
/obj/item/weapon/storage/belt
/obj/item/weapon/storage/belt/bandolier
/obj/item/weapon/storage/belt/champion
/obj/item/weapon/storage/belt/champion/wrestling
/obj/item/weapon/storage/belt/champion/wrestling/dropped(mob/user)
/obj/item/weapon/storage/belt/champion/wrestling/equipped(mob/user, slot)
/obj/item/weapon/storage/belt/fannypack
/obj/item/weapon/storage/belt/fannypack/black
/obj/item/weapon/storage/belt/fannypack/blue
/obj/item/weapon/storage/belt/fannypack/cyan
/obj/item/weapon/storage/belt/fannypack/green
/obj/item/weapon/storage/belt/fannypack/orange
/obj/item/weapon/storage/belt/fannypack/pink
/obj/item/weapon/storage/belt/fannypack/purple
/obj/item/weapon/storage/belt/fannypack/red
/obj/item/weapon/storage/belt/fannypack/white
/obj/item/weapon/storage/belt/fannypack/yellow
/obj/item/weapon/storage/belt/holster
/obj/item/weapon/storage/belt/janitor
/obj/item/weapon/storage/belt/medical
/obj/item/weapon/storage/belt/military
/obj/item/weapon/storage/belt/security
/obj/item/weapon/storage/belt/security/full/New()
/obj/item/weapon/storage/belt/soulstone
/obj/item/weapon/storage/belt/soulstone/full/New()
/obj/item/weapon/storage/belt/update_icon()
/obj/item/weapon/storage/belt/utility
/obj/item/weapon/storage/belt/utility/atmostech/New()
/obj/item/weapon/storage/belt/utility/full/New()
/obj/item/weapon/storage/belt/wands
/obj/item/weapon/storage/belt/wands/full/New()
/obj/item/weapon/storage/book
/obj/item/weapon/storage/book/attack_self(mob/user)
/obj/item/weapon/storage/book/bible
/obj/item/weapon/storage/book/bible/Topic(href, href_list)
/obj/item/weapon/storage/book/bible/afterattack(atom/A, mob/user as mob, proximity)
/obj/item/weapon/storage/book/bible/attack(mob/living/M as mob, mob/living/carbon/human/user as mob)
/obj/item/weapon/storage/book/bible/attack_self(mob/living/carbon/human/H)
/obj/item/weapon/storage/book/bible/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/storage/book/bible/bless(mob/living/carbon/M as mob)
/obj/item/weapon/storage/book/bible/booze
/obj/item/weapon/storage/book/bible/booze/New()
/obj/item/weapon/storage/book/bible/setupbiblespecifics(var/obj/item/weapon/storage/book/bible/B, var/mob/living/carbon/human/H)
/obj/item/weapon/storage/book/bible/suicide_act(mob/user)
/obj/item/weapon/storage/box
/obj/item/weapon/storage/box/PDAs
/obj/item/weapon/storage/box/PDAs/New()
/obj/item/weapon/storage/box/attack_self(mob/user)
/obj/item/weapon/storage/box/attackby(obj/item/W, mob/user, params)
/obj/item/weapon/storage/box/beakers
/obj/item/weapon/storage/box/beakers/New()
/obj/item/weapon/storage/box/bodybags
/obj/item/weapon/storage/box/bodybags/New()
/obj/item/weapon/storage/box/chemimp
/obj/item/weapon/storage/box/chemimp/New()
/obj/item/weapon/storage/box/condimentbottles
/obj/item/weapon/storage/box/condimentbottles/New()
/obj/item/weapon/storage/box/cups
/obj/item/weapon/storage/box/cups/New()
/obj/item/weapon/storage/box/deputy
/obj/item/weapon/storage/box/deputy/New()
/obj/item/weapon/storage/box/disks
/obj/item/weapon/storage/box/disks/New()
/obj/item/weapon/storage/box/donkpockets
/obj/item/weapon/storage/box/donkpockets/New()
/obj/item/weapon/storage/box/drinkingglasses
/obj/item/weapon/storage/box/drinkingglasses/New()
/obj/item/weapon/storage/box/emps
/obj/item/weapon/storage/box/emps/New()
/obj/item/weapon/storage/box/engineer
/obj/item/weapon/storage/box/engineer/New()
/obj/item/weapon/storage/box/evidence
/obj/item/weapon/storage/box/evidence/New()
/obj/item/weapon/storage/box/exileimp
/obj/item/weapon/storage/box/exileimp/New()
/obj/item/weapon/storage/box/fakesyndiesuit
/obj/item/weapon/storage/box/fakesyndiesuit/New()
/obj/item/weapon/storage/box/firingpins
/obj/item/weapon/storage/box/firingpins/New()
/obj/item/weapon/storage/box/flashbangs
/obj/item/weapon/storage/box/flashbangs/New()
/obj/item/weapon/storage/box/flashes
/obj/item/weapon/storage/box/flashes/New()
/obj/item/weapon/storage/box/gloves
/obj/item/weapon/storage/box/gloves/New()
/obj/item/weapon/storage/box/handcuffs
/obj/item/weapon/storage/box/handcuffs/New()
/obj/item/weapon/storage/box/ids
/obj/item/weapon/storage/box/ids/New()
/obj/item/weapon/storage/box/injectors
/obj/item/weapon/storage/box/injectors/New()
/obj/item/weapon/storage/box/lights
/obj/item/weapon/storage/box/lights/bulbs/New()
/obj/item/weapon/storage/box/lights/mixed
/obj/item/weapon/storage/box/lights/mixed/New()
/obj/item/weapon/storage/box/lights/tubes
/obj/item/weapon/storage/box/lights/tubes/New()
/obj/item/weapon/storage/box/masks
/obj/item/weapon/storage/box/masks/New()
/obj/item/weapon/storage/box/matches
/obj/item/weapon/storage/box/matches/New()
/obj/item/weapon/storage/box/matches/attackby(obj/item/weapon/match/W as obj, mob/user as mob, params)
/obj/item/weapon/storage/box/mechabeacons
/obj/item/weapon/storage/box/mechabeacons/New()
/obj/item/weapon/storage/box/medipens
/obj/item/weapon/storage/box/medipens/New()
/obj/item/weapon/storage/box/medipens/utility
/obj/item/weapon/storage/box/medipens/utility/New()
/obj/item/weapon/storage/box/metalfoam
/obj/item/weapon/storage/box/metalfoam/New()
/obj/item/weapon/storage/box/monkeycubes
/obj/item/weapon/storage/box/monkeycubes/New()
/obj/item/weapon/storage/box/mousetraps
/obj/item/weapon/storage/box/mousetraps/New()
/obj/item/weapon/storage/box/permits
/obj/item/weapon/storage/box/permits/New()
/obj/item/weapon/storage/box/pillbottles
/obj/item/weapon/storage/box/pillbottles/New()
/obj/item/weapon/storage/box/prisoner
/obj/item/weapon/storage/box/prisoner/New()
/obj/item/weapon/storage/box/rxglasses
/obj/item/weapon/storage/box/rxglasses/New()
/obj/item/weapon/storage/box/seccarts
/obj/item/weapon/storage/box/seccarts/New()
/obj/item/weapon/storage/box/silver_ids
/obj/item/weapon/storage/box/silver_ids/New()
/obj/item/weapon/storage/box/silver_sulf
/obj/item/weapon/storage/box/silver_sulf/New()
/obj/item/weapon/storage/box/snappops
/obj/item/weapon/storage/box/snappops/New()
/obj/item/weapon/storage/box/survival
/obj/item/weapon/storage/box/survival/New()
/obj/item/weapon/storage/box/syndicate/
/obj/item/weapon/storage/box/syndicate/New()
/obj/item/weapon/storage/box/syndie_kit
/obj/item/weapon/storage/box/syndie_kit/chemical
/obj/item/weapon/storage/box/syndie_kit/chemical/New()
/obj/item/weapon/storage/box/syndie_kit/emp
/obj/item/weapon/storage/box/syndie_kit/emp/New()
/obj/item/weapon/storage/box/syndie_kit/imp_adrenal
/obj/item/weapon/storage/box/syndie_kit/imp_adrenal/New()
/obj/item/weapon/storage/box/syndie_kit/imp_explosive
/obj/item/weapon/storage/box/syndie_kit/imp_explosive/New()
/obj/item/weapon/storage/box/syndie_kit/imp_freedom
/obj/item/weapon/storage/box/syndie_kit/imp_freedom/New()
/obj/item/weapon/storage/box/syndie_kit/imp_uplink
/obj/item/weapon/storage/box/syndie_kit/imp_uplink/New()
/obj/item/weapon/storage/box/syndie_kit/space
/obj/item/weapon/storage/box/syndie_kit/space/New()
/obj/item/weapon/storage/box/syringes
/obj/item/weapon/storage/box/syringes/New()
/obj/item/weapon/storage/box/teargas
/obj/item/weapon/storage/box/teargas/New()
/obj/item/weapon/storage/box/throwing_stars/New()
/obj/item/weapon/storage/box/trackimp
/obj/item/weapon/storage/box/trackimp/New()
/obj/item/weapon/storage/box/zipties
/obj/item/weapon/storage/box/zipties/New()
/obj/item/weapon/storage/briefcase
/obj/item/weapon/storage/briefcase/New()
/obj/item/weapon/storage/can_be_inserted(obj/item/W, stop_messages = 0, mob/user)
/obj/item/weapon/storage/can_see_contents()
/obj/item/weapon/storage/close(mob/user)
/obj/item/weapon/storage/close_all()
/obj/item/weapon/storage/content_can_dump(atom/dest_object, mob/user)
/obj/item/weapon/storage/do_quick_empty()
/obj/item/weapon/storage/dropped(mob/user)
/obj/item/weapon/storage/emp_act(severity)
/obj/item/weapon/storage/fancy/
/obj/item/weapon/storage/fancy/candle_box
/obj/item/weapon/storage/fancy/candle_box/New()
/obj/item/weapon/storage/fancy/cigarettes
/obj/item/weapon/storage/fancy/cigarettes/New()
/obj/item/weapon/storage/fancy/cigarettes/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/storage/fancy/cigarettes/cigpack_carp
/obj/item/weapon/storage/fancy/cigarettes/cigpack_midori
/obj/item/weapon/storage/fancy/cigarettes/cigpack_robust
/obj/item/weapon/storage/fancy/cigarettes/cigpack_robustgold
/obj/item/weapon/storage/fancy/cigarettes/cigpack_robustgold/New()
/obj/item/weapon/storage/fancy/cigarettes/cigpack_shadyjims
/obj/item/weapon/storage/fancy/cigarettes/cigpack_shadyjims/New()
/obj/item/weapon/storage/fancy/cigarettes/cigpack_syndicate
/obj/item/weapon/storage/fancy/cigarettes/cigpack_syndicate/New()
/obj/item/weapon/storage/fancy/cigarettes/cigpack_uplift
/obj/item/weapon/storage/fancy/cigarettes/dromedaryco
/obj/item/weapon/storage/fancy/cigarettes/remove_from_storage(obj/item/W, atom/new_location)
/obj/item/weapon/storage/fancy/cigarettes/update_icon()
/obj/item/weapon/storage/fancy/cigars
/obj/item/weapon/storage/fancy/cigars/New()
/obj/item/weapon/storage/fancy/cigars/cohiba
/obj/item/weapon/storage/fancy/cigars/havana
/obj/item/weapon/storage/fancy/cigars/update_icon()
/obj/item/weapon/storage/fancy/crayons
/obj/item/weapon/storage/fancy/crayons/New()
/obj/item/weapon/storage/fancy/crayons/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/weapon/storage/fancy/crayons/update_icon()
/obj/item/weapon/storage/fancy/donut_box
/obj/item/weapon/storage/fancy/donut_box/New()
/obj/item/weapon/storage/fancy/egg_box
/obj/item/weapon/storage/fancy/egg_box/New()
/obj/item/weapon/storage/fancy/examine(mob/user)
/obj/item/weapon/storage/fancy/rollingpapers
/obj/item/weapon/storage/fancy/rollingpapers/New()
/obj/item/weapon/storage/fancy/rollingpapers/update_icon()
/obj/item/weapon/storage/fancy/update_icon(var/itemremoved = 0)
/obj/item/weapon/storage/firstaid
/obj/item/weapon/storage/firstaid/attackby(var/obj/item/robot_parts/S, mob/user as mob, params)
/obj/item/weapon/storage/firstaid/brute
/obj/item/weapon/storage/firstaid/brute/New()
/obj/item/weapon/storage/firstaid/fire
/obj/item/weapon/storage/firstaid/fire/New()
/obj/item/weapon/storage/firstaid/o2
/obj/item/weapon/storage/firstaid/o2/New()
/obj/item/weapon/storage/firstaid/regular
/obj/item/weapon/storage/firstaid/regular/New()
/obj/item/weapon/storage/firstaid/tactical
/obj/item/weapon/storage/firstaid/tactical/New()
/obj/item/weapon/storage/firstaid/toxin
/obj/item/weapon/storage/firstaid/toxin/New()
/obj/item/weapon/storage/handle_item_insertion(obj/item/W, prevent_warning = 0, mob/user)
/obj/item/weapon/storage/hide_from(mob/user)
/obj/item/weapon/storage/lockbox
/obj/item/weapon/storage/lockbox/MouseDrop(over_object, src_location, over_location)
/obj/item/weapon/storage/lockbox/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/storage/lockbox/can_be_inserted(obj/item/W, stop_messages = 0)
/obj/item/weapon/storage/lockbox/clusterbang
/obj/item/weapon/storage/lockbox/clusterbang/New()
/obj/item/weapon/storage/lockbox/emag_act(mob/user as mob)
/obj/item/weapon/storage/lockbox/loyalty
/obj/item/weapon/storage/lockbox/loyalty/New()
/obj/item/weapon/storage/lockbox/medal
/obj/item/weapon/storage/lockbox/medal/New()
/obj/item/weapon/storage/lockbox/show_to(mob/user as mob)
/obj/item/weapon/storage/lockbox/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/obj/item/weapon/storage/orient2hud(mob/user)
/obj/item/weapon/storage/orient_objs(tx, ty, mx, my)
/obj/item/weapon/storage/part_replacer
/obj/item/weapon/storage/part_replacer/afterattack(obj/machinery/T as obj, mob/living/carbon/human/user as mob, flag, params)
/obj/item/weapon/storage/part_replacer/bluespace
/obj/item/weapon/storage/part_replacer/play_rped_sound()
/obj/item/weapon/storage/photo_album
/obj/item/weapon/storage/pill_bottle
/obj/item/weapon/storage/pill_bottle/MouseDrop(obj/over_object as obj)
/obj/item/weapon/storage/pill_bottle/charcoal
/obj/item/weapon/storage/pill_bottle/charcoal/New()
/obj/item/weapon/storage/pill_bottle/dice
/obj/item/weapon/storage/pill_bottle/dice/New()
/obj/item/weapon/storage/pill_bottle/epinephrine
/obj/item/weapon/storage/pill_bottle/epinephrine/New()
/obj/item/weapon/storage/pill_bottle/mannitol
/obj/item/weapon/storage/pill_bottle/mannitol/New()
/obj/item/weapon/storage/pill_bottle/mutadone
/obj/item/weapon/storage/pill_bottle/mutadone/New()
/obj/item/weapon/storage/pill_bottle/stimulant
/obj/item/weapon/storage/pill_bottle/stimulant/New()
/obj/item/weapon/storage/remove_from_storage(obj/item/W, atom/new_location)
/obj/item/weapon/storage/return_inv()
/obj/item/weapon/storage/secure
/obj/item/weapon/storage/secure/MouseDrop(over_object, src_location, over_location)
/obj/item/weapon/storage/secure/Topic(href, href_list)
/obj/item/weapon/storage/secure/attack_self(mob/user as mob)
/obj/item/weapon/storage/secure/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/storage/secure/briefcase
/obj/item/weapon/storage/secure/briefcase/New()
/obj/item/weapon/storage/secure/briefcase/attack_hand(mob/user as mob)
/obj/item/weapon/storage/secure/briefcase/syndie
/obj/item/weapon/storage/secure/briefcase/syndie/New()
/obj/item/weapon/storage/secure/can_be_inserted(obj/item/W, stop_messages = 0)
/obj/item/weapon/storage/secure/emag_act(mob/user as mob)
/obj/item/weapon/storage/secure/examine(mob/user)
/obj/item/weapon/storage/secure/safe
/obj/item/weapon/storage/secure/safe/HoS/New()
/obj/item/weapon/storage/secure/safe/New()
/obj/item/weapon/storage/secure/safe/attack_hand(mob/user as mob)
/obj/item/weapon/storage/secure/safe/sc_ssafe
/obj/item/weapon/storage/secure/safe/sc_ssafe/New()
/obj/item/weapon/storage/secure/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/obj/item/weapon/storage/show_to(mob/user)
/obj/item/weapon/storage/spooky
/obj/item/weapon/storage/spooky/New()
/obj/item/weapon/storage/standard_orient_objs(rows, cols, list/obj/item/display_contents)
/obj/item/weapon/storage/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/obj/item/weapon/storage/throw_at(atom/target, range, speed)
/obj/item/weapon/storage/toolbox
/obj/item/weapon/storage/toolbox/New()
/obj/item/weapon/storage/toolbox/drone
/obj/item/weapon/storage/toolbox/drone/New()
/obj/item/weapon/storage/toolbox/electrical
/obj/item/weapon/storage/toolbox/electrical/New()
/obj/item/weapon/storage/toolbox/emergency
/obj/item/weapon/storage/toolbox/emergency/New()
/obj/item/weapon/storage/toolbox/mechanical
/obj/item/weapon/storage/toolbox/mechanical/New()
/obj/item/weapon/storage/toolbox/mechanical/attackby(var/obj/item/stack/tile/plasteel/T, mob/user as mob, params)
/obj/item/weapon/storage/toolbox/syndicate
/obj/item/weapon/storage/toolbox/syndicate/New()
/obj/item/weapon/storage/verb/quick_empty()
/obj/item/weapon/storage/verb/toggle_gathering_mode()
/obj/item/weapon/storage/wallet
/obj/item/weapon/storage/wallet/GetAccess()
/obj/item/weapon/storage/wallet/GetID()
/obj/item/weapon/storage/wallet/handle_item_insertion(obj/item/W as obj, prevent_warning = 0)
/obj/item/weapon/storage/wallet/random/New()
/obj/item/weapon/storage/wallet/remove_from_storage(obj/item/W as obj, atom/new_location)
/obj/item/weapon/storage/wallet/update_icon()
/obj/item/weapon/suppressor
/obj/item/weapon/surgical_drapes
/obj/item/weapon/surgical_drapes/attack(mob/living/M, mob/user)
/obj/item/weapon/surgicaldrill
/obj/item/weapon/surgicaldrill/alien
/obj/item/weapon/switchblade
/obj/item/weapon/switchblade/attack_self(mob/user)
/obj/item/weapon/switchblade/suicide_act(mob/user)
/obj/item/weapon/tank
/obj/item/weapon/tank/Destroy()
/obj/item/weapon/tank/New()
/obj/item/weapon/tank/Topic(href, href_list)
/obj/item/weapon/tank/assume_air(datum/gas_mixture/giver)
/obj/item/weapon/tank/attack_self(mob/user as mob)
/obj/item/weapon/tank/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/tank/blob_act()
/obj/item/weapon/tank/bomb_assemble(W,user)
/obj/item/weapon/tank/check_status()
/obj/item/weapon/tank/examine(mob/user)
/obj/item/weapon/tank/ignite()
/obj/item/weapon/tank/internals/air
/obj/item/weapon/tank/internals/air/New()
/obj/item/weapon/tank/internals/anesthetic
/obj/item/weapon/tank/internals/anesthetic/New()
/obj/item/weapon/tank/internals/emergency_oxygen
/obj/item/weapon/tank/internals/emergency_oxygen/New()
/obj/item/weapon/tank/internals/emergency_oxygen/double
/obj/item/weapon/tank/internals/emergency_oxygen/engi
/obj/item/weapon/tank/internals/oxygen
/obj/item/weapon/tank/internals/oxygen/New()
/obj/item/weapon/tank/internals/oxygen/red
/obj/item/weapon/tank/internals/oxygen/yellow
/obj/item/weapon/tank/internals/plasma
/obj/item/weapon/tank/internals/plasma/New()
/obj/item/weapon/tank/internals/plasma/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/tank/internals/plasma/full/New()
/obj/item/weapon/tank/internals/plasmaman
/obj/item/weapon/tank/internals/plasmaman/New()
/obj/item/weapon/tank/internals/plasmaman/belt
/obj/item/weapon/tank/internals/plasmaman/belt/full/New()
/obj/item/weapon/tank/internals/plasmaman/full/New()
/obj/item/weapon/tank/jetpack
/obj/item/weapon/tank/jetpack/New()
/obj/item/weapon/tank/jetpack/allow_thrust(num, mob/living/user as mob)
/obj/item/weapon/tank/jetpack/carbondioxide
/obj/item/weapon/tank/jetpack/carbondioxide/New()
/obj/item/weapon/tank/jetpack/carbondioxide/mining
/obj/item/weapon/tank/jetpack/oxygen
/obj/item/weapon/tank/jetpack/oxygen/New()
/obj/item/weapon/tank/jetpack/oxygen/harness
/obj/item/weapon/tank/jetpack/suit
/obj/item/weapon/tank/jetpack/suit/New()
/obj/item/weapon/tank/jetpack/suit/process()
/obj/item/weapon/tank/jetpack/suit/toggle()
/obj/item/weapon/tank/jetpack/suit/turn_off()
/obj/item/weapon/tank/jetpack/ui_action_click()
/obj/item/weapon/tank/jetpack/verb/toggle()
/obj/item/weapon/tank/jetpack/verb/toggle_rockets()
/obj/item/weapon/tank/jetpack/void
/obj/item/weapon/tank/jetpack/void/New()
/obj/item/weapon/tank/process()
/obj/item/weapon/tank/release()
/obj/item/weapon/tank/remove_air(amount)
/obj/item/weapon/tank/remove_air_volume(volume_to_return)
/obj/item/weapon/tank/return_air()
/obj/item/weapon/tank/ui_interact(mob/user, ui_key = "main")
/obj/item/weapon/teleportation_scroll
/obj/item/weapon/teleportation_scroll/Topic(href, href_list)
/obj/item/weapon/teleportation_scroll/apprentice
/obj/item/weapon/teleportation_scroll/attack_self(mob/user as mob)
/obj/item/weapon/teleportation_scroll/teleportscroll(var/mob/user)
/obj/item/weapon/throwing_star
/obj/item/weapon/throwing_star/ninja
/obj/item/weapon/tome
/obj/item/weapon/tome/Topic(href,href_list[])
/obj/item/weapon/tome/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/weapon/tome/attack_self(mob/living/user as mob)
/obj/item/weapon/tome/attackby(obj/item/weapon/tome/T as obj, mob/living/user as mob, params)
/obj/item/weapon/tome/examine(mob/user)
/obj/item/weapon/tome/imbued
/obj/item/weapon/tome/imbued/attack_self(mob/user as mob)
/obj/item/weapon/toolbox_tiles
/obj/item/weapon/toolbox_tiles/attackby(var/obj/item/W, mob/user as mob, params)
/obj/item/weapon/toolbox_tiles_sensor
/obj/item/weapon/toolbox_tiles_sensor/attackby(var/obj/item/W, mob/user as mob, params)
/obj/item/weapon/toy/xmas_cracker
/obj/item/weapon/toy/xmas_cracker/attack(mob/target, mob/user)
/obj/item/weapon/tracker_electronics
/obj/item/weapon/twohanded
/obj/item/weapon/twohanded/
/obj/item/weapon/twohanded/attack_self(mob/user as mob)
/obj/item/weapon/twohanded/dropped(mob/user as mob)
/obj/item/weapon/twohanded/dualsaber
/obj/item/weapon/twohanded/dualsaber/IsReflect()
/obj/item/weapon/twohanded/dualsaber/IsShield()
/obj/item/weapon/twohanded/dualsaber/New()
/obj/item/weapon/twohanded/dualsaber/attack(target as mob, mob/living/carbon/human/user as mob)
/obj/item/weapon/twohanded/dualsaber/attack_hulk(mob/living/carbon/human/user)
/obj/item/weapon/twohanded/dualsaber/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/item/weapon/twohanded/dualsaber/green
/obj/item/weapon/twohanded/dualsaber/green/New()
/obj/item/weapon/twohanded/dualsaber/impale(mob/living/user as mob)
/obj/item/weapon/twohanded/dualsaber/red
/obj/item/weapon/twohanded/dualsaber/red/New()
/obj/item/weapon/twohanded/dualsaber/toy
/obj/item/weapon/twohanded/dualsaber/toy/IsReflect()
/obj/item/weapon/twohanded/dualsaber/toy/IsShield()
/obj/item/weapon/twohanded/dualsaber/unwield()
/obj/item/weapon/twohanded/dualsaber/update_icon()
/obj/item/weapon/twohanded/dualsaber/wield(mob/living/carbon/M)
/obj/item/weapon/twohanded/fireaxe
/obj/item/weapon/twohanded/fireaxe/afterattack(atom/A as mob|obj|turf|area, mob/user as mob, proximity)
/obj/item/weapon/twohanded/fireaxe/update_icon()
/obj/item/weapon/twohanded/mjollnir
/obj/item/weapon/twohanded/mjollnir/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/twohanded/mjollnir/shock(mob/living/target as mob)
/obj/item/weapon/twohanded/mjollnir/update_icon()
/obj/item/weapon/twohanded/mob_can_equip(M as mob, slot)
/obj/item/weapon/twohanded/offhand
/obj/item/weapon/twohanded/offhand/IsShield()
/obj/item/weapon/twohanded/offhand/unwield()
/obj/item/weapon/twohanded/offhand/wield()
/obj/item/weapon/twohanded/required/
/obj/item/weapon/twohanded/required/attack_hand(mob/user)
/obj/item/weapon/twohanded/required/attack_self()
/obj/item/weapon/twohanded/required/gibtonite
/obj/item/weapon/twohanded/required/gibtonite/GibtoniteReaction(mob/user, triggered_by = 0)
/obj/item/weapon/twohanded/required/gibtonite/attack_self(user)
/obj/item/weapon/twohanded/required/gibtonite/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/twohanded/required/gibtonite/bullet_act(var/obj/item/projectile/P)
/obj/item/weapon/twohanded/required/gibtonite/ex_act()
/obj/item/weapon/twohanded/required/mob_can_equip(M as mob, slot)
/obj/item/weapon/twohanded/shockpaddles
/obj/item/weapon/twohanded/shockpaddles/New(mainunit)
/obj/item/weapon/twohanded/shockpaddles/attack(mob/M, mob/user)
/obj/item/weapon/twohanded/shockpaddles/check_defib_exists(mainunit, var/mob/living/carbon/human/M, var/obj/O)
/obj/item/weapon/twohanded/shockpaddles/dropped(mob/user as mob)
/obj/item/weapon/twohanded/shockpaddles/suicide_act(mob/user)
/obj/item/weapon/twohanded/shockpaddles/update_icon()
/obj/item/weapon/twohanded/singularityhammer
/obj/item/weapon/twohanded/singularityhammer/Destroy()
/obj/item/weapon/twohanded/singularityhammer/New()
/obj/item/weapon/twohanded/singularityhammer/afterattack(atom/A as mob|obj|turf|area, mob/user as mob, proximity)
/obj/item/weapon/twohanded/singularityhammer/process()
/obj/item/weapon/twohanded/singularityhammer/update_icon()
/obj/item/weapon/twohanded/singularityhammer/vortex(var/turf/pull as turf, mob/wielder as mob)
/obj/item/weapon/twohanded/spear
/obj/item/weapon/twohanded/spear/update_icon()
/obj/item/weapon/twohanded/unwield(mob/living/carbon/user)
/obj/item/weapon/twohanded/update_icon()
/obj/item/weapon/twohanded/wield(mob/living/carbon/user)
/obj/item/weapon/veilrender
/obj/item/weapon/veilrender/attack_self(mob/user as mob)
/obj/item/weapon/veilrender/honkrender
/obj/item/weapon/veilrender/vealrender
/obj/item/weapon/vending_refill
/obj/item/weapon/vending_refill/New(amt = -1)
/obj/item/weapon/vending_refill/autodrobe
/obj/item/weapon/vending_refill/boozeomat
/obj/item/weapon/vending_refill/cigarette
/obj/item/weapon/vending_refill/clothing
/obj/item/weapon/vending_refill/coffee
/obj/item/weapon/vending_refill/cola
/obj/item/weapon/vending_refill/examine(mob/user)
/obj/item/weapon/vending_refill/snack
/obj/item/weapon/watertank
/obj/item/weapon/watertank/Destroy()
/obj/item/weapon/watertank/MouseDrop(obj/over_object)
/obj/item/weapon/watertank/New()
/obj/item/weapon/watertank/atmos
/obj/item/weapon/watertank/atmos/dropped(mob/user as mob)
/obj/item/weapon/watertank/atmos/make_noz()
/obj/item/weapon/watertank/attack_hand(mob/user as mob)
/obj/item/weapon/watertank/attackby(obj/item/W, mob/user, params)
/obj/item/weapon/watertank/equipped(mob/user, slot)
/obj/item/weapon/watertank/janitor
/obj/item/weapon/watertank/janitor/New()
/obj/item/weapon/watertank/janitor/make_noz()
/obj/item/weapon/watertank/make_noz()
/obj/item/weapon/watertank/remove_noz()
/obj/item/weapon/watertank/ui_action_click()
/obj/item/weapon/watertank/verb/toggle_mister()
/obj/item/weapon/weldingtool
/obj/item/weapon/weldingtool/New()
/obj/item/weapon/weldingtool/afterattack(atom/O, mob/user, proximity)
/obj/item/weapon/weldingtool/attack(mob/living/carbon/human/H, mob/user)
/obj/item/weapon/weldingtool/attack_self(mob/user)
/obj/item/weapon/weldingtool/attackby(obj/item/I, mob/user, params)
/obj/item/weapon/weldingtool/check_fuel(mob/user)
/obj/item/weapon/weldingtool/examine(mob/user)
/obj/item/weapon/weldingtool/experimental
/obj/item/weapon/weldingtool/experimental/fuel_gen()
/obj/item/weapon/weldingtool/experimental/process()
/obj/item/weapon/weldingtool/flamethrower_rods(obj/item/I, mob/user)
/obj/item/weapon/weldingtool/flamethrower_screwdriver(obj/item/I, mob/user)
/obj/item/weapon/weldingtool/get_fuel()
/obj/item/weapon/weldingtool/hugetank
/obj/item/weapon/weldingtool/isOn()
/obj/item/weapon/weldingtool/largetank
/obj/item/weapon/weldingtool/largetank/cyborg
/obj/item/weapon/weldingtool/largetank/flamethrower_screwdriver()
/obj/item/weapon/weldingtool/mini
/obj/item/weapon/weldingtool/mini/flamethrower_screwdriver()
/obj/item/weapon/weldingtool/process()
/obj/item/weapon/weldingtool/remove_fuel(amount = 1, mob/living/M = null)
/obj/item/weapon/weldingtool/toggle(mob/user, message = 0)
/obj/item/weapon/weldingtool/update_icon()
/obj/item/weapon/weldingtool/update_torch()
/obj/item/weapon/wirecutters
/obj/item/weapon/wirecutters/New(loc, var/param_color = null)
/obj/item/weapon/wirecutters/attack(mob/living/carbon/C, mob/user)
/obj/item/weapon/wirecutters/suicide_act(mob/user)
/obj/item/weapon/wirerod
/obj/item/weapon/wirerod/attackby(var/obj/item/I, mob/user as mob, params)
/obj/item/weapon/wrench
/obj/item/weapon/wrench/suicide_act(mob/user)
/obj/item/weaponcrafting/ishotgunconstruction
/obj/item/weaponcrafting/ishotgunconstruction/attackby(var/obj/item/I, mob/user as mob, params)
/obj/item/weaponcrafting/ishotgunconstruction2
/obj/item/weaponcrafting/ishotgunconstruction2/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/weaponcrafting/ishotgunconstruction3
/obj/item/weaponcrafting/ishotgunconstruction3/attackby(var/obj/item/I, mob/user as mob, params)
/obj/item/weaponcrafting/reciever
/obj/item/weaponcrafting/reciever/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/item/weaponcrafting/stock
/obj/item/weed_extract
/obj/item/xenos_claw
/obj/machinery
/obj/machinery/CheckParts()
/obj/machinery/Destroy()
/obj/machinery/New()
/obj/machinery/RefreshParts()
/obj/machinery/Topic(href, href_list)
/obj/machinery/abductor
/obj/machinery/abductor/IsAbductor(var/mob/living/carbon/human/H)
/obj/machinery/abductor/IsAgent(var/mob/living/carbon/human/H)
/obj/machinery/abductor/IsScientist(var/mob/living/carbon/human/H)
/obj/machinery/abductor/TeleportToArea(var/mob/living/target,var/area/thearea)
/obj/machinery/abductor/console
/obj/machinery/abductor/console/AddSnapshot(var/mob/living/carbon/human/target)
/obj/machinery/abductor/console/Dispense(var/item,var/cost=1)
/obj/machinery/abductor/console/FlipVest()
/obj/machinery/abductor/console/Initialize()
/obj/machinery/abductor/console/SelectDisguise(var/remote=0)
/obj/machinery/abductor/console/TeleporterRetrieve()
/obj/machinery/abductor/console/TeleporterSend()
/obj/machinery/abductor/console/TeleporterSet()
/obj/machinery/abductor/console/Topic(href, href_list)
/obj/machinery/abductor/console/attack_hand(var/mob/user as mob)
/obj/machinery/abductor/console/attackby(O as obj, user as mob, params)
/obj/machinery/abductor/experiment
/obj/machinery/abductor/experiment/Experiment(var/mob/occupant,var/type)
/obj/machinery/abductor/experiment/MouseDrop_T(mob/target, mob/user)
/obj/machinery/abductor/experiment/SendBack(var/mob/living/carbon/human/H)
/obj/machinery/abductor/experiment/Topic(href, href_list)
/obj/machinery/abductor/experiment/attack_hand(mob/user)
/obj/machinery/abductor/experiment/close_machine(mob/target)
/obj/machinery/abductor/experiment/dissection_icon(var/mob/living/carbon/human/H)
/obj/machinery/abductor/experiment/experimentUI(mob/user)
/obj/machinery/abductor/experiment/open_machine()
/obj/machinery/abductor/experiment/update_icon()
/obj/machinery/abductor/gland_dispenser
/obj/machinery/abductor/gland_dispenser/Dispense(var/count)
/obj/machinery/abductor/gland_dispenser/New()
/obj/machinery/abductor/gland_dispenser/Topic(href, href_list)
/obj/machinery/abductor/gland_dispenser/attack_hand(var/mob/user as mob)
/obj/machinery/abductor/gland_dispenser/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/abductor/gland_dispenser/random_color()
/obj/machinery/abductor/pad
/obj/machinery/abductor/pad/MobToLoc(var/place,var/mob/living/target)
/obj/machinery/abductor/pad/PadToLoc(var/place)
/obj/machinery/abductor/pad/Retrieve(var/mob/living/target)
/obj/machinery/abductor/pad/Send()
/obj/machinery/abductor/pad/Warp(var/mob/living/target)
/obj/machinery/addStaticPower(value, powerchannel)
/obj/machinery/ai_slipper
/obj/machinery/ai_slipper/Topic(href, href_list)
/obj/machinery/ai_slipper/attack_ai(mob/user as mob)
/obj/machinery/ai_slipper/attack_hand(mob/user as mob)
/obj/machinery/ai_slipper/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/ai_slipper/power_change()
/obj/machinery/ai_slipper/setState(var/enabled, var/uses)
/obj/machinery/ai_slipper/slip_process()
/obj/machinery/ai_status_display
/obj/machinery/ai_status_display/emp_act(severity)
/obj/machinery/ai_status_display/process()
/obj/machinery/ai_status_display/set_picture(var/state)
/obj/machinery/ai_status_display/update()
/obj/machinery/air_sensor
/obj/machinery/air_sensor/Destroy()
/obj/machinery/air_sensor/New()
/obj/machinery/air_sensor/initialize()
/obj/machinery/air_sensor/process_atmos()
/obj/machinery/air_sensor/set_frequency(new_frequency)
/obj/machinery/air_sensor/update_icon()
/obj/machinery/airlock_sensor
/obj/machinery/airlock_sensor/Destroy()
/obj/machinery/airlock_sensor/New()
/obj/machinery/airlock_sensor/attack_hand(mob/user)
/obj/machinery/airlock_sensor/initialize()
/obj/machinery/airlock_sensor/process()
/obj/machinery/airlock_sensor/set_frequency(new_frequency)
/obj/machinery/airlock_sensor/update_icon()
/obj/machinery/alarm
/obj/machinery/alarm/Destroy()
/obj/machinery/alarm/New(nloc, ndir, nbuild)
/obj/machinery/alarm/Topic(href, href_list)
/obj/machinery/alarm/apply_danger_level()
/obj/machinery/alarm/apply_mode()
/obj/machinery/alarm/attack_hand(mob/user)
/obj/machinery/alarm/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/machinery/alarm/elect_master()
/obj/machinery/alarm/emag_act(mob/user as mob)
/obj/machinery/alarm/initialize()
/obj/machinery/alarm/kitchen_cold_room
/obj/machinery/alarm/master_is_operating()
/obj/machinery/alarm/populate_controls(var/list/data)
/obj/machinery/alarm/populate_status(var/list/data)
/obj/machinery/alarm/post_alert(alert_level)
/obj/machinery/alarm/power_change()
/obj/machinery/alarm/process()
/obj/machinery/alarm/refresh_all()
/obj/machinery/alarm/send_signal(var/target, var/list/command)
/obj/machinery/alarm/server
/obj/machinery/alarm/set_frequency(new_frequency)
/obj/machinery/alarm/shock(mob/user, prb)
/obj/machinery/alarm/ui_interact(mob/user, ui_key = "main")
/obj/machinery/alarm/update_icon()
/obj/machinery/allow_drop()
/obj/machinery/am_shielding
/obj/machinery/am_shielding/CanPass(atom/movable/mover, turf/target, height=0)
/obj/machinery/am_shielding/Destroy()
/obj/machinery/am_shielding/New(loc)
/obj/machinery/am_shielding/attackby(obj/item/W, mob/user, params)
/obj/machinery/am_shielding/blob_act()
/obj/machinery/am_shielding/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/am_shielding/check_stability(var/injecting_fuel = 0)
/obj/machinery/am_shielding/controllerscan(var/priorscan = 0)
/obj/machinery/am_shielding/core_check()
/obj/machinery/am_shielding/emp_act()
/obj/machinery/am_shielding/ex_act(severity, target)
/obj/machinery/am_shielding/link_control(var/obj/machinery/power/am_control_unit/AMC)
/obj/machinery/am_shielding/process()
/obj/machinery/am_shielding/recalc_efficiency(var/new_efficiency)
/obj/machinery/am_shielding/setup_core()
/obj/machinery/am_shielding/shutdown_core()
/obj/machinery/am_shielding/update_icon()
/obj/machinery/areaturretid
/obj/machinery/areaturretid/New()
/obj/machinery/areaturretid/Topic(href, href_list)
/obj/machinery/areaturretid/attack_ai(mob/user as mob)
/obj/machinery/areaturretid/attack_hand(mob/user as mob)
/obj/machinery/areaturretid/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/areaturretid/emag_act(mob/user as mob)
/obj/machinery/areaturretid/power_change()
/obj/machinery/areaturretid/updateTurrets()
/obj/machinery/areaturretid/update_icon()
/obj/machinery/artillerycontrol
/obj/machinery/artillerycontrol/Topic(href, href_list)
/obj/machinery/artillerycontrol/attack_hand(mob/user as mob)
/obj/machinery/artillerycontrol/process()
/obj/machinery/assign_uid()
/obj/machinery/atmospherics
/obj/machinery/atmospherics/AltClick(var/mob/living/L)
/obj/machinery/atmospherics/Deconstruct()
/obj/machinery/atmospherics/Destroy()
/obj/machinery/atmospherics/New()
/obj/machinery/atmospherics/SetInitDirections()
/obj/machinery/atmospherics/addMember(obj/machinery/atmospherics/A)
/obj/machinery/atmospherics/atmosinit()
/obj/machinery/atmospherics/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob, params)
/obj/machinery/atmospherics/binary
/obj/machinery/atmospherics/binary/Destroy()
/obj/machinery/atmospherics/binary/New()
/obj/machinery/atmospherics/binary/SetInitDirections()
/obj/machinery/atmospherics/binary/atmosinit()
/obj/machinery/atmospherics/binary/build_network()
/obj/machinery/atmospherics/binary/circulator
/obj/machinery/atmospherics/binary/circulator/process_atmos()
/obj/machinery/atmospherics/binary/circulator/return_transfer_air()
/obj/machinery/atmospherics/binary/circulator/update_icon()
/obj/machinery/atmospherics/binary/construction()
/obj/machinery/atmospherics/binary/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/binary/dp_vent_pump
/obj/machinery/atmospherics/binary/dp_vent_pump/Destroy()
/obj/machinery/atmospherics/binary/dp_vent_pump/atmosinit()
/obj/machinery/atmospherics/binary/dp_vent_pump/broadcast_status()
/obj/machinery/atmospherics/binary/dp_vent_pump/high_volume
/obj/machinery/atmospherics/binary/dp_vent_pump/high_volume/New()
/obj/machinery/atmospherics/binary/dp_vent_pump/initialize()
/obj/machinery/atmospherics/binary/dp_vent_pump/process_atmos()
/obj/machinery/atmospherics/binary/dp_vent_pump/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/binary/dp_vent_pump/set_frequency(new_frequency)
/obj/machinery/atmospherics/binary/dp_vent_pump/update_icon_nopipes()
/obj/machinery/atmospherics/binary/hide(var/intact)
/obj/machinery/atmospherics/binary/nullifyPipenet(datum/pipeline/P)
/obj/machinery/atmospherics/binary/passive_gate
/obj/machinery/atmospherics/binary/passive_gate/Destroy()
/obj/machinery/atmospherics/binary/passive_gate/Topic(href,href_list)
/obj/machinery/atmospherics/binary/passive_gate/atmosinit()
/obj/machinery/atmospherics/binary/passive_gate/attack_hand(user as mob)
/obj/machinery/atmospherics/binary/passive_gate/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob, params)
/obj/machinery/atmospherics/binary/passive_gate/broadcast_status()
/obj/machinery/atmospherics/binary/passive_gate/power_change()
/obj/machinery/atmospherics/binary/passive_gate/process_atmos()
/obj/machinery/atmospherics/binary/passive_gate/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/binary/passive_gate/set_frequency(new_frequency)
/obj/machinery/atmospherics/binary/passive_gate/ui_interact(mob/user, ui_key = "main")
/obj/machinery/atmospherics/binary/passive_gate/update_icon_nopipes()
/obj/machinery/atmospherics/binary/pipeline_expansion(datum/pipeline/P)
/obj/machinery/atmospherics/binary/pump
/obj/machinery/atmospherics/binary/pump/Destroy()
/obj/machinery/atmospherics/binary/pump/Topic(href,href_list)
/obj/machinery/atmospherics/binary/pump/atmosinit()
/obj/machinery/atmospherics/binary/pump/attack_hand(user as mob)
/obj/machinery/atmospherics/binary/pump/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob, params)
/obj/machinery/atmospherics/binary/pump/broadcast_status()
/obj/machinery/atmospherics/binary/pump/on
/obj/machinery/atmospherics/binary/pump/power_change()
/obj/machinery/atmospherics/binary/pump/process_atmos()
/obj/machinery/atmospherics/binary/pump/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/binary/pump/set_frequency(new_frequency)
/obj/machinery/atmospherics/binary/pump/ui_interact(mob/user, ui_key = "main")
/obj/machinery/atmospherics/binary/pump/update_icon_nopipes()
/obj/machinery/atmospherics/binary/replacePipenet(datum/pipeline/Old, datum/pipeline/New)
/obj/machinery/atmospherics/binary/returnPipenet(obj/machinery/atmospherics/A)
/obj/machinery/atmospherics/binary/returnPipenetAir(datum/pipeline/P)
/obj/machinery/atmospherics/binary/setPipenet(datum/pipeline/P, obj/machinery/atmospherics/A)
/obj/machinery/atmospherics/binary/update_icon()
/obj/machinery/atmospherics/binary/update_icon_nopipes()
/obj/machinery/atmospherics/binary/valve
/obj/machinery/atmospherics/binary/valve/attack_ai(mob/user)
/obj/machinery/atmospherics/binary/valve/attack_hand(mob/user)
/obj/machinery/atmospherics/binary/valve/close()
/obj/machinery/atmospherics/binary/valve/digital
/obj/machinery/atmospherics/binary/valve/digital/attack_ai(mob/user)
/obj/machinery/atmospherics/binary/valve/digital/update_icon_nopipes(animation)
/obj/machinery/atmospherics/binary/valve/normalize_dir()
/obj/machinery/atmospherics/binary/valve/open
/obj/machinery/atmospherics/binary/valve/open()
/obj/machinery/atmospherics/binary/valve/update_icon()
/obj/machinery/atmospherics/binary/valve/update_icon_nopipes(animation = 0)
/obj/machinery/atmospherics/binary/volume_pump
/obj/machinery/atmospherics/binary/volume_pump/Destroy()
/obj/machinery/atmospherics/binary/volume_pump/Topic(href,href_list)
/obj/machinery/atmospherics/binary/volume_pump/atmosinit()
/obj/machinery/atmospherics/binary/volume_pump/attack_hand(user as mob)
/obj/machinery/atmospherics/binary/volume_pump/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob, params)
/obj/machinery/atmospherics/binary/volume_pump/broadcast_status()
/obj/machinery/atmospherics/binary/volume_pump/on
/obj/machinery/atmospherics/binary/volume_pump/power_change()
/obj/machinery/atmospherics/binary/volume_pump/process_atmos()
/obj/machinery/atmospherics/binary/volume_pump/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/binary/volume_pump/set_frequency(new_frequency)
/obj/machinery/atmospherics/binary/volume_pump/ui_interact(mob/user, ui_key = "main")
/obj/machinery/atmospherics/binary/volume_pump/update_icon_nopipes()
/obj/machinery/atmospherics/build_network()
/obj/machinery/atmospherics/can_crawl_through()
/obj/machinery/atmospherics/construction(D, P, var/pipe_type, var/obj_color)
/obj/machinery/atmospherics/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/findConnecting(var/direction)
/obj/machinery/atmospherics/getpipeimage(var/iconset, var/iconstate, var/direction, var/col=rgb(255,255,255))
/obj/machinery/atmospherics/icon_addbroken(var/connected)
/obj/machinery/atmospherics/icon_addintact(var/obj/machinery/atmospherics/node, var/connected)
/obj/machinery/atmospherics/initialize()
/obj/machinery/atmospherics/nullifyPipenet(datum/pipeline/P)
/obj/machinery/atmospherics/pipe
/obj/machinery/atmospherics/pipe/Destroy()
/obj/machinery/atmospherics/pipe/addMember(obj/machinery/atmospherics/A)
/obj/machinery/atmospherics/pipe/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/atmospherics/pipe/build_network()
/obj/machinery/atmospherics/pipe/check_pressure(pressure)
/obj/machinery/atmospherics/pipe/manifold
/obj/machinery/atmospherics/pipe/manifold/Destroy()
/obj/machinery/atmospherics/pipe/manifold/New()
/obj/machinery/atmospherics/pipe/manifold/SetInitDirections()
/obj/machinery/atmospherics/pipe/manifold/atmosinit()
/obj/machinery/atmospherics/pipe/manifold/cyan
/obj/machinery/atmospherics/pipe/manifold/cyan/hidden
/obj/machinery/atmospherics/pipe/manifold/cyan/visible
/obj/machinery/atmospherics/pipe/manifold/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/pipe/manifold/general
/obj/machinery/atmospherics/pipe/manifold/general/hidden
/obj/machinery/atmospherics/pipe/manifold/general/visible
/obj/machinery/atmospherics/pipe/manifold/green
/obj/machinery/atmospherics/pipe/manifold/green/hidden
/obj/machinery/atmospherics/pipe/manifold/green/visible
/obj/machinery/atmospherics/pipe/manifold/hide(var/i)
/obj/machinery/atmospherics/pipe/manifold/pipeline_expansion()
/obj/machinery/atmospherics/pipe/manifold/scrubbers
/obj/machinery/atmospherics/pipe/manifold/scrubbers/hidden
/obj/machinery/atmospherics/pipe/manifold/scrubbers/visible
/obj/machinery/atmospherics/pipe/manifold/supply
/obj/machinery/atmospherics/pipe/manifold/supply/hidden
/obj/machinery/atmospherics/pipe/manifold/supply/visible
/obj/machinery/atmospherics/pipe/manifold/supplymain
/obj/machinery/atmospherics/pipe/manifold/supplymain/hidden
/obj/machinery/atmospherics/pipe/manifold/supplymain/visible
/obj/machinery/atmospherics/pipe/manifold/update_icon()
/obj/machinery/atmospherics/pipe/manifold/update_node_icon()
/obj/machinery/atmospherics/pipe/manifold/yellow
/obj/machinery/atmospherics/pipe/manifold/yellow/hidden
/obj/machinery/atmospherics/pipe/manifold/yellow/visible
/obj/machinery/atmospherics/pipe/manifold4w
/obj/machinery/atmospherics/pipe/manifold4w/Destroy()
/obj/machinery/atmospherics/pipe/manifold4w/New()
/obj/machinery/atmospherics/pipe/manifold4w/SetInitDirections()
/obj/machinery/atmospherics/pipe/manifold4w/atmosinit()
/obj/machinery/atmospherics/pipe/manifold4w/cyan
/obj/machinery/atmospherics/pipe/manifold4w/cyan/hidden
/obj/machinery/atmospherics/pipe/manifold4w/cyan/visible
/obj/machinery/atmospherics/pipe/manifold4w/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/pipe/manifold4w/general
/obj/machinery/atmospherics/pipe/manifold4w/general/hidden
/obj/machinery/atmospherics/pipe/manifold4w/general/visible
/obj/machinery/atmospherics/pipe/manifold4w/green
/obj/machinery/atmospherics/pipe/manifold4w/green/hidden
/obj/machinery/atmospherics/pipe/manifold4w/green/visible
/obj/machinery/atmospherics/pipe/manifold4w/hide(var/i)
/obj/machinery/atmospherics/pipe/manifold4w/pipeline_expansion()
/obj/machinery/atmospherics/pipe/manifold4w/scrubbers
/obj/machinery/atmospherics/pipe/manifold4w/scrubbers/hidden
/obj/machinery/atmospherics/pipe/manifold4w/scrubbers/visible
/obj/machinery/atmospherics/pipe/manifold4w/supply
/obj/machinery/atmospherics/pipe/manifold4w/supply/hidden
/obj/machinery/atmospherics/pipe/manifold4w/supply/visible
/obj/machinery/atmospherics/pipe/manifold4w/supplymain
/obj/machinery/atmospherics/pipe/manifold4w/supplymain/hidden
/obj/machinery/atmospherics/pipe/manifold4w/supplymain/visible
/obj/machinery/atmospherics/pipe/manifold4w/update_icon()
/obj/machinery/atmospherics/pipe/manifold4w/update_node_icon()
/obj/machinery/atmospherics/pipe/manifold4w/yellow
/obj/machinery/atmospherics/pipe/manifold4w/yellow/hidden
/obj/machinery/atmospherics/pipe/manifold4w/yellow/visible
/obj/machinery/atmospherics/pipe/releaseAirToTurf()
/obj/machinery/atmospherics/pipe/return_air()
/obj/machinery/atmospherics/pipe/setPipenet(datum/pipeline/P)
/obj/machinery/atmospherics/pipe/simple
/obj/machinery/atmospherics/pipe/simple/Destroy()
/obj/machinery/atmospherics/pipe/simple/New()
/obj/machinery/atmospherics/pipe/simple/SetInitDirections()
/obj/machinery/atmospherics/pipe/simple/atmosinit()
/obj/machinery/atmospherics/pipe/simple/cyan
/obj/machinery/atmospherics/pipe/simple/cyan/hidden
/obj/machinery/atmospherics/pipe/simple/cyan/visible
/obj/machinery/atmospherics/pipe/simple/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/pipe/simple/general
/obj/machinery/atmospherics/pipe/simple/general/hidden
/obj/machinery/atmospherics/pipe/simple/general/visible
/obj/machinery/atmospherics/pipe/simple/green
/obj/machinery/atmospherics/pipe/simple/green/hidden
/obj/machinery/atmospherics/pipe/simple/green/visible
/obj/machinery/atmospherics/pipe/simple/heat_exchanging
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/New()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/SetInitDirections()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/atmosinit()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/junction
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/junction/SetInitDirections()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/junction/atmosinit()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/junction/update_icon()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/process()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/process_atmos()
/obj/machinery/atmospherics/pipe/simple/hide(var/i)
/obj/machinery/atmospherics/pipe/simple/normalize_dir()
/obj/machinery/atmospherics/pipe/simple/pipeline_expansion()
/obj/machinery/atmospherics/pipe/simple/scrubbers
/obj/machinery/atmospherics/pipe/simple/scrubbers/hidden
/obj/machinery/atmospherics/pipe/simple/scrubbers/visible
/obj/machinery/atmospherics/pipe/simple/supply
/obj/machinery/atmospherics/pipe/simple/supply/hidden
/obj/machinery/atmospherics/pipe/simple/supply/visible
/obj/machinery/atmospherics/pipe/simple/supplymain
/obj/machinery/atmospherics/pipe/simple/supplymain/hidden
/obj/machinery/atmospherics/pipe/simple/supplymain/visible
/obj/machinery/atmospherics/pipe/simple/update_icon()
/obj/machinery/atmospherics/pipe/simple/update_node_icon()
/obj/machinery/atmospherics/pipe/simple/yellow
/obj/machinery/atmospherics/pipe/simple/yellow/hidden
/obj/machinery/atmospherics/pipe/simple/yellow/visible
/obj/machinery/atmospherics/pipe/update_node_icon()
/obj/machinery/atmospherics/pipeline_expansion()
/obj/machinery/atmospherics/relaymove(var/mob/living/user, var/direction)
/obj/machinery/atmospherics/replacePipenet()
/obj/machinery/atmospherics/returnPipenet()
/obj/machinery/atmospherics/returnPipenetAir()
/obj/machinery/atmospherics/safe_input(var/title, var/text, var/default_set)
/obj/machinery/atmospherics/setPipenet()
/obj/machinery/atmospherics/singularity_pull(S, current_size)
/obj/machinery/atmospherics/trinary
/obj/machinery/atmospherics/trinary/Destroy()
/obj/machinery/atmospherics/trinary/New()
/obj/machinery/atmospherics/trinary/SetInitDirections()
/obj/machinery/atmospherics/trinary/atmosinit()
/obj/machinery/atmospherics/trinary/build_network()
/obj/machinery/atmospherics/trinary/construction()
/obj/machinery/atmospherics/trinary/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/trinary/filter
/obj/machinery/atmospherics/trinary/filter/Destroy()
/obj/machinery/atmospherics/trinary/filter/Topic(href, href_list)
/obj/machinery/atmospherics/trinary/filter/atmosinit()
/obj/machinery/atmospherics/trinary/filter/attack_hand(user as mob)
/obj/machinery/atmospherics/trinary/filter/flipped
/obj/machinery/atmospherics/trinary/filter/power_change()
/obj/machinery/atmospherics/trinary/filter/process_atmos()
/obj/machinery/atmospherics/trinary/filter/set_frequency(new_frequency)
/obj/machinery/atmospherics/trinary/filter/ui_interact(mob/user, ui_key = "main")
/obj/machinery/atmospherics/trinary/filter/update_icon_nopipes()
/obj/machinery/atmospherics/trinary/icon_addbroken(var/connected)
/obj/machinery/atmospherics/trinary/icon_addintact(var/obj/machinery/atmospherics/node, var/connected)
/obj/machinery/atmospherics/trinary/mixer
/obj/machinery/atmospherics/trinary/mixer/New()
/obj/machinery/atmospherics/trinary/mixer/Topic(href,href_list)
/obj/machinery/atmospherics/trinary/mixer/attack_hand(user as mob)
/obj/machinery/atmospherics/trinary/mixer/flipped
/obj/machinery/atmospherics/trinary/mixer/power_change()
/obj/machinery/atmospherics/trinary/mixer/process_atmos()
/obj/machinery/atmospherics/trinary/mixer/ui_interact(mob/user, ui_key = "main")
/obj/machinery/atmospherics/trinary/mixer/update_icon_nopipes()
/obj/machinery/atmospherics/trinary/nullifyPipenet(datum/pipeline/P)
/obj/machinery/atmospherics/trinary/pipeline_expansion(datum/pipeline/P)
/obj/machinery/atmospherics/trinary/replacePipenet(datum/pipeline/Old, datum/pipeline/New)
/obj/machinery/atmospherics/trinary/returnPipenet(obj/machinery/atmospherics/A)
/obj/machinery/atmospherics/trinary/returnPipenetAir(datum/pipeline/P)
/obj/machinery/atmospherics/trinary/setPipenet(datum/pipeline/P, obj/machinery/atmospherics/A)
/obj/machinery/atmospherics/trinary/update_icon()
/obj/machinery/atmospherics/trinary/update_icon_nopipes()
/obj/machinery/atmospherics/unary
/obj/machinery/atmospherics/unary/Destroy()
/obj/machinery/atmospherics/unary/New()
/obj/machinery/atmospherics/unary/SetInitDirections()
/obj/machinery/atmospherics/unary/atmosinit()
/obj/machinery/atmospherics/unary/build_network()
/obj/machinery/atmospherics/unary/cold_sink
/obj/machinery/atmospherics/unary/cold_sink/freezer
/obj/machinery/atmospherics/unary/cold_sink/freezer/New()
/obj/machinery/atmospherics/unary/cold_sink/freezer/RefreshParts()
/obj/machinery/atmospherics/unary/cold_sink/freezer/Topic(href, href_list)
/obj/machinery/atmospherics/unary/cold_sink/freezer/attack_ai(mob/user as mob)
/obj/machinery/atmospherics/unary/cold_sink/freezer/attack_hand(mob/user as mob)
/obj/machinery/atmospherics/unary/cold_sink/freezer/attack_paw(mob/user as mob)
/obj/machinery/atmospherics/unary/cold_sink/freezer/attackby(obj/item/I, mob/user, params)
/obj/machinery/atmospherics/unary/cold_sink/freezer/construction()
/obj/machinery/atmospherics/unary/cold_sink/freezer/interact(mob/user)
/obj/machinery/atmospherics/unary/cold_sink/freezer/power_change()
/obj/machinery/atmospherics/unary/cold_sink/freezer/process()
/obj/machinery/atmospherics/unary/cold_sink/freezer/update_icon()
/obj/machinery/atmospherics/unary/cold_sink/process_atmos()
/obj/machinery/atmospherics/unary/cold_sink/update_icon_nopipes()
/obj/machinery/atmospherics/unary/construction()
/obj/machinery/atmospherics/unary/cryo_cell
/obj/machinery/atmospherics/unary/cryo_cell/Destroy()
/obj/machinery/atmospherics/unary/cryo_cell/MouseDrop_T(mob/target, mob/user)
/obj/machinery/atmospherics/unary/cryo_cell/New()
/obj/machinery/atmospherics/unary/cryo_cell/RefreshParts()
/obj/machinery/atmospherics/unary/cryo_cell/Topic(href, href_list)
/obj/machinery/atmospherics/unary/cryo_cell/attack_hand(mob/user)
/obj/machinery/atmospherics/unary/cryo_cell/attackby(obj/item/I, mob/user, params)
/obj/machinery/atmospherics/unary/cryo_cell/close_machine(mob/living/carbon/M)
/obj/machinery/atmospherics/unary/cryo_cell/construction()
/obj/machinery/atmospherics/unary/cryo_cell/container_resist()
/obj/machinery/atmospherics/unary/cryo_cell/examine(mob/user)
/obj/machinery/atmospherics/unary/cryo_cell/expel_gas()
/obj/machinery/atmospherics/unary/cryo_cell/heat_gas_contents()
/obj/machinery/atmospherics/unary/cryo_cell/open_machine()
/obj/machinery/atmospherics/unary/cryo_cell/power_change()
/obj/machinery/atmospherics/unary/cryo_cell/process()
/obj/machinery/atmospherics/unary/cryo_cell/process_atmos()
/obj/machinery/atmospherics/unary/cryo_cell/process_occupant()
/obj/machinery/atmospherics/unary/cryo_cell/relaymove(var/mob/user)
/obj/machinery/atmospherics/unary/cryo_cell/ui_interact(mob/user, ui_key = "main")
/obj/machinery/atmospherics/unary/cryo_cell/update_icon()
/obj/machinery/atmospherics/unary/cryo_cell/verb/move_eject()
/obj/machinery/atmospherics/unary/default_change_direction_wrench(mob/user, obj/item/weapon/wrench/W)
/obj/machinery/atmospherics/unary/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/unary/generator_input
/obj/machinery/atmospherics/unary/generator_input/return_exchange_air()
/obj/machinery/atmospherics/unary/generator_input/update_icon()
/obj/machinery/atmospherics/unary/heat_exchanger
/obj/machinery/atmospherics/unary/heat_exchanger/atmosinit()
/obj/machinery/atmospherics/unary/heat_exchanger/process_atmos()
/obj/machinery/atmospherics/unary/heat_exchanger/update_icon()
/obj/machinery/atmospherics/unary/heat_reservoir
/obj/machinery/atmospherics/unary/heat_reservoir/heater/
/obj/machinery/atmospherics/unary/heat_reservoir/heater/New()
/obj/machinery/atmospherics/unary/heat_reservoir/heater/RefreshParts()
/obj/machinery/atmospherics/unary/heat_reservoir/heater/Topic(href, href_list)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/attack_ai(mob/user as mob)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/attack_hand(mob/user as mob)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/attack_paw(mob/user as mob)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/attackby(obj/item/I, mob/user, params)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/construction()
/obj/machinery/atmospherics/unary/heat_reservoir/heater/interact(mob/user)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/power_change()
/obj/machinery/atmospherics/unary/heat_reservoir/heater/process()
/obj/machinery/atmospherics/unary/heat_reservoir/heater/update_icon()
/obj/machinery/atmospherics/unary/heat_reservoir/process_atmos()
/obj/machinery/atmospherics/unary/heat_reservoir/update_icon_nopipes()
/obj/machinery/atmospherics/unary/hide(var/intact)
/obj/machinery/atmospherics/unary/nullifyPipenet()
/obj/machinery/atmospherics/unary/outlet_injector
/obj/machinery/atmospherics/unary/outlet_injector/Destroy()
/obj/machinery/atmospherics/unary/outlet_injector/atmosinit()
/obj/machinery/atmospherics/unary/outlet_injector/broadcast_status()
/obj/machinery/atmospherics/unary/outlet_injector/initialize()
/obj/machinery/atmospherics/unary/outlet_injector/inject()
/obj/machinery/atmospherics/unary/outlet_injector/on
/obj/machinery/atmospherics/unary/outlet_injector/power_change()
/obj/machinery/atmospherics/unary/outlet_injector/process_atmos()
/obj/machinery/atmospherics/unary/outlet_injector/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/unary/outlet_injector/set_frequency(new_frequency)
/obj/machinery/atmospherics/unary/outlet_injector/update_icon_nopipes()
/obj/machinery/atmospherics/unary/oxygen_generator
/obj/machinery/atmospherics/unary/oxygen_generator/New()
/obj/machinery/atmospherics/unary/oxygen_generator/process_atmos()
/obj/machinery/atmospherics/unary/oxygen_generator/update_icon_nopipes()
/obj/machinery/atmospherics/unary/pipeline_expansion()
/obj/machinery/atmospherics/unary/portables_connector
/obj/machinery/atmospherics/unary/portables_connector/Destroy()
/obj/machinery/atmospherics/unary/portables_connector/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/atmospherics/unary/portables_connector/portableConnectorReturnAir()
/obj/machinery/atmospherics/unary/portables_connector/process_atmos()
/obj/machinery/atmospherics/unary/portables_connector/update_icon()
/obj/machinery/atmospherics/unary/portables_connector/visible
/obj/machinery/atmospherics/unary/replacePipenet(datum/pipeline/Old, datum/pipeline/New)
/obj/machinery/atmospherics/unary/returnPipenetAir()
/obj/machinery/atmospherics/unary/setPipenet(datum/pipeline/P)
/obj/machinery/atmospherics/unary/tank
/obj/machinery/atmospherics/unary/tank/air
/obj/machinery/atmospherics/unary/tank/air/New()
/obj/machinery/atmospherics/unary/tank/carbon_dioxide
/obj/machinery/atmospherics/unary/tank/carbon_dioxide/New()
/obj/machinery/atmospherics/unary/tank/nitrogen
/obj/machinery/atmospherics/unary/tank/nitrogen/New()
/obj/machinery/atmospherics/unary/tank/oxygen
/obj/machinery/atmospherics/unary/tank/oxygen/New()
/obj/machinery/atmospherics/unary/tank/oxygen_agent_b
/obj/machinery/atmospherics/unary/tank/oxygen_agent_b/New()
/obj/machinery/atmospherics/unary/tank/toxins
/obj/machinery/atmospherics/unary/tank/toxins/New()
/obj/machinery/atmospherics/unary/tank/update_icon()
/obj/machinery/atmospherics/unary/update_icon()
/obj/machinery/atmospherics/unary/update_icon_nopipes()
/obj/machinery/atmospherics/unary/vent_pump
/obj/machinery/atmospherics/unary/vent_pump/Destroy()
/obj/machinery/atmospherics/unary/vent_pump/New()
/obj/machinery/atmospherics/unary/vent_pump/atmosinit()
/obj/machinery/atmospherics/unary/vent_pump/attackby(obj/item/W, mob/user, params)
/obj/machinery/atmospherics/unary/vent_pump/broadcast_status()
/obj/machinery/atmospherics/unary/vent_pump/can_crawl_through()
/obj/machinery/atmospherics/unary/vent_pump/examine(mob/user)
/obj/machinery/atmospherics/unary/vent_pump/high_volume
/obj/machinery/atmospherics/unary/vent_pump/high_volume/New()
/obj/machinery/atmospherics/unary/vent_pump/initialize()
/obj/machinery/atmospherics/unary/vent_pump/on
/obj/machinery/atmospherics/unary/vent_pump/power_change()
/obj/machinery/atmospherics/unary/vent_pump/process_atmos()
/obj/machinery/atmospherics/unary/vent_pump/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/unary/vent_pump/set_frequency(new_frequency)
/obj/machinery/atmospherics/unary/vent_pump/siphon
/obj/machinery/atmospherics/unary/vent_pump/siphon/on
/obj/machinery/atmospherics/unary/vent_pump/update_icon_nopipes()
/obj/machinery/atmospherics/unary/vent_scrubber
/obj/machinery/atmospherics/unary/vent_scrubber/Destroy()
/obj/machinery/atmospherics/unary/vent_scrubber/New()
/obj/machinery/atmospherics/unary/vent_scrubber/atmosinit()
/obj/machinery/atmospherics/unary/vent_scrubber/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob, params)
/obj/machinery/atmospherics/unary/vent_scrubber/broadcast_status()
/obj/machinery/atmospherics/unary/vent_scrubber/can_crawl_through()
/obj/machinery/atmospherics/unary/vent_scrubber/initialize()
/obj/machinery/atmospherics/unary/vent_scrubber/power_change()
/obj/machinery/atmospherics/unary/vent_scrubber/process_atmos()
/obj/machinery/atmospherics/unary/vent_scrubber/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/unary/vent_scrubber/set_frequency(new_frequency)
/obj/machinery/atmospherics/unary/vent_scrubber/update_icon_nopipes()
/obj/machinery/atmospherics/update_icon()
/obj/machinery/attack_ai(mob/user as mob)
/obj/machinery/attack_hand(mob/user as mob, var/check_power = 1, var/set_machine = 1)
/obj/machinery/attack_paw(mob/user as mob)
/obj/machinery/auto_use_power()
/obj/machinery/autolathe
/obj/machinery/autolathe/New()
/obj/machinery/autolathe/RefreshParts()
/obj/machinery/autolathe/Topic(href, href_list)
/obj/machinery/autolathe/adjust_hacked(var/hack)
/obj/machinery/autolathe/attack_hand(mob/user)
/obj/machinery/autolathe/attack_paw(mob/user)
/obj/machinery/autolathe/attackby(obj/item/O, mob/user, params)
/obj/machinery/autolathe/can_build(var/datum/design/D)
/obj/machinery/autolathe/category_win(mob/user,var/selected_category)
/obj/machinery/autolathe/get_design_cost(var/datum/design/D)
/obj/machinery/autolathe/interact(mob/user)
/obj/machinery/autolathe/main_win(mob/user)
/obj/machinery/autolathe/search_win(mob/user)
/obj/machinery/autolathe/shock(mob/user, prb)
/obj/machinery/biogenerator
/obj/machinery/biogenerator/New()
/obj/machinery/biogenerator/RefreshParts()
/obj/machinery/biogenerator/Topic(href, href_list)
/obj/machinery/biogenerator/activate()
/obj/machinery/biogenerator/attack_hand(mob/user as mob)
/obj/machinery/biogenerator/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/biogenerator/check_container_volume(var/reagent_amount)
/obj/machinery/biogenerator/check_cost(var/cost)
/obj/machinery/biogenerator/create_product(var/create)
/obj/machinery/biogenerator/detach()
/obj/machinery/biogenerator/interact(mob/user as mob)
/obj/machinery/biogenerator/on_reagent_change()
/obj/machinery/biogenerator/update_icon()
/obj/machinery/blackbox_recorder
/obj/machinery/blackbox_recorder/Destroy()
/obj/machinery/blackbox_recorder/New()
/obj/machinery/blackbox_recorder/find_feedback_datum(var/variable)
/obj/machinery/blackbox_recorder/get_round_feedback()
/obj/machinery/blackbox_recorder/round_end_data_gathering()
/obj/machinery/blackbox_recorder/save_all_data_to_sql()
/obj/machinery/blob_act()
/obj/machinery/bluespace_beacon
/obj/machinery/bluespace_beacon/Destroy()
/obj/machinery/bluespace_beacon/New()
/obj/machinery/bluespace_beacon/hide(var/intact)
/obj/machinery/bluespace_beacon/process()
/obj/machinery/bluespace_beacon/updateicon()
/obj/machinery/bookbinder
/obj/machinery/bookbinder/attackby(var/obj/O as obj, var/mob/user as mob, params)
/obj/machinery/bot
/obj/machinery/bot/Bump(M as mob|obj)
/obj/machinery/bot/Destroy()
/obj/machinery/bot/Emag(mob/user as mob)
/obj/machinery/bot/New()
/obj/machinery/bot/Topic(href, href_list)
/obj/machinery/bot/add_to_ignore(var/subject)
/obj/machinery/bot/attack_ai(mob/user as mob)
/obj/machinery/bot/attack_alien(var/mob/living/carbon/alien/user as mob)
/obj/machinery/bot/attack_animal(var/mob/living/simple_animal/M as mob)
/obj/machinery/bot/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/bot/blob_act()
/obj/machinery/bot/bot_control(var/command, mob/user, var/turf/user_turf, var/list/user_access = list())
/obj/machinery/bot/bot_move(var/dest, var/move_speed)
/obj/machinery/bot/bot_patrol()
/obj/machinery/bot/bot_process()
/obj/machinery/bot/bot_reset()
/obj/machinery/bot/bot_step(var/dest)
/obj/machinery/bot/bot_summon()
/obj/machinery/bot/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/bot/calc_path(var/turf/avoid)
/obj/machinery/bot/calc_summon_path(var/turf/avoid)
/obj/machinery/bot/call_bot(var/caller, var/turf/waypoint, var/message=TRUE)
/obj/machinery/bot/call_mode()
/obj/machinery/bot/check_bot_access()
/obj/machinery/bot/cleanbot
/obj/machinery/bot/cleanbot/Emag(mob/user as mob)
/obj/machinery/bot/cleanbot/New()
/obj/machinery/bot/cleanbot/Topic(href, href_list)
/obj/machinery/bot/cleanbot/attack_hand(mob/user as mob)
/obj/machinery/bot/cleanbot/attackby(obj/item/weapon/W, mob/user as mob, params)
/obj/machinery/bot/cleanbot/bot_process()
/obj/machinery/bot/cleanbot/bot_reset()
/obj/machinery/bot/cleanbot/clean(var/obj/effect/decal/cleanable/target)
/obj/machinery/bot/cleanbot/explode()
/obj/machinery/bot/cleanbot/get_targets()
/obj/machinery/bot/cleanbot/interact(mob/user as mob)
/obj/machinery/bot/cleanbot/process_scan(var/obj/effect/decal/cleanable/D)
/obj/machinery/bot/cleanbot/set_custom_texts()
/obj/machinery/bot/cleanbot/turn_off()
/obj/machinery/bot/cleanbot/turn_on()
/obj/machinery/bot/ed209
/obj/machinery/bot/ed209/Emag(mob/user as mob)
/obj/machinery/bot/ed209/New(loc,created_name,created_lasercolor)
/obj/machinery/bot/ed209/Topic(href, href_list)
/obj/machinery/bot/ed209/attack_alien(var/mob/living/carbon/alien/user as mob)
/obj/machinery/bot/ed209/attack_hand(mob/user as mob)
/obj/machinery/bot/ed209/attack_hand(mob/user as mob)/if(!locked || issilicon(user))
/obj/machinery/bot/ed209/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/bot/ed209/back_to_hunt()
/obj/machinery/bot/ed209/back_to_idle()
/obj/machinery/bot/ed209/bluetag/New()
/obj/machinery/bot/ed209/bot_process()
/obj/machinery/bot/ed209/bot_reset()
/obj/machinery/bot/ed209/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/bot/ed209/check_for_weapons(var/obj/item/slot_item)
/obj/machinery/bot/ed209/emp_act(severity)
/obj/machinery/bot/ed209/explode()
/obj/machinery/bot/ed209/look_for_perp()
/obj/machinery/bot/ed209/redtag/New()
/obj/machinery/bot/ed209/set_custom_texts()
/obj/machinery/bot/ed209/set_weapon()
/obj/machinery/bot/ed209/shootAt(var/mob/target)
/obj/machinery/bot/ed209/turn_off()
/obj/machinery/bot/ed209/turn_on()
/obj/machinery/bot/emag_act(mob/user as mob)
/obj/machinery/bot/emp_act(severity)
/obj/machinery/bot/ex_act(severity, target)
/obj/machinery/bot/examine(mob/user)
/obj/machinery/bot/explode()
/obj/machinery/bot/find_nearest_beacon()
/obj/machinery/bot/find_patrol_target()
/obj/machinery/bot/floorbot
/obj/machinery/bot/floorbot/Emag(mob/user as mob)
/obj/machinery/bot/floorbot/New()
/obj/machinery/bot/floorbot/Topic(href, href_list)
/obj/machinery/bot/floorbot/attack_hand(mob/user as mob)
/obj/machinery/bot/floorbot/attackby(var/obj/item/W , mob/user as mob, params)
/obj/machinery/bot/floorbot/bot_process()
/obj/machinery/bot/floorbot/bot_reset()
/obj/machinery/bot/floorbot/eattile(var/obj/item/stack/tile/plasteel/T)
/obj/machinery/bot/floorbot/explode()
/obj/machinery/bot/floorbot/interact(mob/user as mob)
/obj/machinery/bot/floorbot/is_hull_breach(var/turf/t)
/obj/machinery/bot/floorbot/maketile(var/obj/item/stack/sheet/metal/M)
/obj/machinery/bot/floorbot/nag()
/obj/machinery/bot/floorbot/process_scan(var/scan_target)
/obj/machinery/bot/floorbot/repair(var/turf/target_turf)
/obj/machinery/bot/floorbot/set_custom_texts()
/obj/machinery/bot/floorbot/turn_off()
/obj/machinery/bot/floorbot/turn_on()
/obj/machinery/bot/floorbot/updateicon()
/obj/machinery/bot/get_mode()
/obj/machinery/bot/get_next_patrol_target()
/obj/machinery/bot/hack(mob/user)
/obj/machinery/bot/healthcheck()
/obj/machinery/bot/medbot
/obj/machinery/bot/medbot/Emag(mob/user as mob)
/obj/machinery/bot/medbot/New()
/obj/machinery/bot/medbot/Topic(href, href_list)
/obj/machinery/bot/medbot/assess_patient(mob/living/carbon/C as mob)
/obj/machinery/bot/medbot/attack_hand(mob/user as mob)
/obj/machinery/bot/medbot/attack_paw(mob/user as mob)
/obj/machinery/bot/medbot/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/bot/medbot/bot_process()
/obj/machinery/bot/medbot/bot_reset()
/obj/machinery/bot/medbot/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/bot/medbot/declare(var/crit_patient)
/obj/machinery/bot/medbot/derelict
/obj/machinery/bot/medbot/explode()
/obj/machinery/bot/medbot/medicate_patient(mob/living/carbon/C as mob)
/obj/machinery/bot/medbot/mysterious
/obj/machinery/bot/medbot/process_scan(var/mob/living/carbon/human/H)
/obj/machinery/bot/medbot/set_custom_texts()
/obj/machinery/bot/medbot/soft_reset()
/obj/machinery/bot/medbot/turn_off()
/obj/machinery/bot/medbot/turn_on()
/obj/machinery/bot/medbot/updateicon()
/obj/machinery/bot/mulebot
/obj/machinery/bot/mulebot/Bump(var/atom/obs)
/obj/machinery/bot/mulebot/MouseDrop_T(var/atom/movable/C, mob/user)
/obj/machinery/bot/mulebot/New()
/obj/machinery/bot/mulebot/RunOver(var/mob/living/carbon/human/H)
/obj/machinery/bot/mulebot/Topic(href, href_list)
/obj/machinery/bot/mulebot/alter_health()
/obj/machinery/bot/mulebot/at_target()
/obj/machinery/bot/mulebot/attack_ai(var/mob/user)
/obj/machinery/bot/mulebot/attack_hand(var/mob/user)
/obj/machinery/bot/mulebot/attackby(var/obj/item/I, var/mob/user, params)
/obj/machinery/bot/mulebot/bot_control(var/command, mob/user, pda= 0)
/obj/machinery/bot/mulebot/bot_process()
/obj/machinery/bot/mulebot/bot_reset()
/obj/machinery/bot/mulebot/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/bot/mulebot/calc_path(var/turf/avoid = null)
/obj/machinery/bot/mulebot/call_bot()
/obj/machinery/bot/mulebot/emag_act(mob/user as mob)
/obj/machinery/bot/mulebot/emp_act(severity)
/obj/machinery/bot/mulebot/ex_act(var/severity)
/obj/machinery/bot/mulebot/explode()
/obj/machinery/bot/mulebot/get_nav()
/obj/machinery/bot/mulebot/has_power()
/obj/machinery/bot/mulebot/interact(var/mob/user, var/ai=0)
/obj/machinery/bot/mulebot/load(var/atom/movable/C)
/obj/machinery/bot/mulebot/process_bot()
/obj/machinery/bot/mulebot/relaymove(var/mob/user)
/obj/machinery/bot/mulebot/set_destination(var/new_dest)
/obj/machinery/bot/mulebot/start()
/obj/machinery/bot/mulebot/start_home()
/obj/machinery/bot/mulebot/toggle_lock(var/mob/user)
/obj/machinery/bot/mulebot/unload(var/dirn)
/obj/machinery/bot/mulebot/wires()
/obj/machinery/bot/patrol_step()
/obj/machinery/bot/process_scan(var/scan_target)
/obj/machinery/bot/scan(var/scan_type, var/old_target, var/scan_range = 7)
/obj/machinery/bot/secbot
/obj/machinery/bot/secbot/Crossed(atom/movable/AM)
/obj/machinery/bot/secbot/Emag(mob/user as mob)
/obj/machinery/bot/secbot/New()
/obj/machinery/bot/secbot/Topic(href, href_list)
/obj/machinery/bot/secbot/attack_alien(var/mob/living/carbon/alien/user as mob)
/obj/machinery/bot/secbot/attack_hand(mob/user as mob)
/obj/machinery/bot/secbot/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/bot/secbot/back_to_hunt()
/obj/machinery/bot/secbot/back_to_idle()
/obj/machinery/bot/secbot/beepsky
/obj/machinery/bot/secbot/bot_process()
/obj/machinery/bot/secbot/bot_reset()
/obj/machinery/bot/secbot/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/bot/secbot/check_for_weapons(var/obj/item/slot_item)
/obj/machinery/bot/secbot/explode()
/obj/machinery/bot/secbot/interact(mob/user as mob)
/obj/machinery/bot/secbot/interact(mob/user as mob)/if(!locked || issilicon(user))
/obj/machinery/bot/secbot/look_for_perp()
/obj/machinery/bot/secbot/pingsky
/obj/machinery/bot/secbot/set_custom_texts()
/obj/machinery/bot/secbot/turn_off()
/obj/machinery/bot/secbot/turn_on()
/obj/machinery/bot/set_custom_texts()
/obj/machinery/bot/speak(var/message, freq)
/obj/machinery/bot/start_patrol()
/obj/machinery/bot/summon_step()
/obj/machinery/bot/topic_denied(mob/user)
/obj/machinery/bot/turn_off()
/obj/machinery/bot/turn_on()
/obj/machinery/camera
/obj/machinery/camera/Destroy()
/obj/machinery/camera/HasProximity(atom/movable/AM as mob|obj)
/obj/machinery/camera/New()
/obj/machinery/camera/all
/obj/machinery/camera/all/New()
/obj/machinery/camera/attack_ai(var/mob/living/silicon/ai/user as mob)
/obj/machinery/camera/attack_paw(mob/living/carbon/alien/humanoid/user as mob)
/obj/machinery/camera/attackby(obj/W, mob/living/user, params)
/obj/machinery/camera/autoname
/obj/machinery/camera/autoname/New()
/obj/machinery/camera/blob_act()
/obj/machinery/camera/bullet_act(var/obj/item/projectile/proj)
/obj/machinery/camera/can_see()
/obj/machinery/camera/can_use()
/obj/machinery/camera/cancelAlarm()
/obj/machinery/camera/cancelCameraAlarm()
/obj/machinery/camera/deactivate(mob/user, displaymessage = 1)
/obj/machinery/camera/deactivate(user as mob, var/choice = 1)
/obj/machinery/camera/emp_act(severity)
/obj/machinery/camera/emp_proof
/obj/machinery/camera/emp_proof/New()
/obj/machinery/camera/ex_act(severity, target)
/obj/machinery/camera/initialize()
/obj/machinery/camera/isEmpProof()
/obj/machinery/camera/isMotion()
/obj/machinery/camera/isXRay()
/obj/machinery/camera/lostTarget(var/mob/target)
/obj/machinery/camera/motion
/obj/machinery/camera/motion/New()
/obj/machinery/camera/newTarget(var/mob/target)
/obj/machinery/camera/portable
/obj/machinery/camera/portable/New()
/obj/machinery/camera/portable/process()
/obj/machinery/camera/process()
/obj/machinery/camera/setViewRange(var/num = 7)
/obj/machinery/camera/shock(var/mob/living/user)
/obj/machinery/camera/triggerAlarm()
/obj/machinery/camera/triggerCameraAlarm()
/obj/machinery/camera/upgradeEmpProof()
/obj/machinery/camera/upgradeMotion()
/obj/machinery/camera/upgradeXRay()
/obj/machinery/camera/weld(var/obj/item/weapon/weldingtool/WT, var/mob/living/user)
/obj/machinery/camera/xray
/obj/machinery/camera/xray/New()
/obj/machinery/can_be_used_by(mob/user)
/obj/machinery/cell_charger
/obj/machinery/cell_charger/attack_ai(mob/user)
/obj/machinery/cell_charger/attack_hand(mob/user)
/obj/machinery/cell_charger/attack_tk(mob/user)
/obj/machinery/cell_charger/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/cell_charger/emp_act(severity)
/obj/machinery/cell_charger/examine(mob/user)
/obj/machinery/cell_charger/process()
/obj/machinery/cell_charger/removecell()
/obj/machinery/cell_charger/updateicon()
/obj/machinery/chem_dispenser
/obj/machinery/chem_dispenser/New()
/obj/machinery/chem_dispenser/Topic(href, href_list)
/obj/machinery/chem_dispenser/attack_ai(mob/user as mob)
/obj/machinery/chem_dispenser/attack_hand(mob/user as mob)
/obj/machinery/chem_dispenser/attack_paw(mob/user as mob)
/obj/machinery/chem_dispenser/attackby(var/obj/item/weapon/reagent_containers/glass/B as obj, var/mob/user as mob, params)
/obj/machinery/chem_dispenser/blob_act()
/obj/machinery/chem_dispenser/constructable
/obj/machinery/chem_dispenser/constructable/New()
/obj/machinery/chem_dispenser/constructable/RefreshParts()
/obj/machinery/chem_dispenser/constructable/attackby(var/obj/item/I, var/mob/user, params)
/obj/machinery/chem_dispenser/constructable/list("oil", "ash", "acetone", "saltpetre", "ammonia", "diethylamine"))
/obj/machinery/chem_dispenser/drinks
/obj/machinery/chem_dispenser/drinks/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/chem_dispenser/drinks/beer
/obj/machinery/chem_dispenser/ex_act(severity, target)
/obj/machinery/chem_dispenser/power_change()
/obj/machinery/chem_dispenser/process()
/obj/machinery/chem_dispenser/recharge()
/obj/machinery/chem_dispenser/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/chem_heater
/obj/machinery/chem_heater/New()
/obj/machinery/chem_heater/RefreshParts()
/obj/machinery/chem_heater/Topic(href, href_list)
/obj/machinery/chem_heater/attack_hand(var/mob/user as mob)
/obj/machinery/chem_heater/attackby(var/obj/item/I as obj, var/mob/user as mob, params)
/obj/machinery/chem_heater/eject_beaker()
/obj/machinery/chem_heater/power_change()
/obj/machinery/chem_heater/process()
/obj/machinery/chem_heater/ui_interact(var/mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/chem_master
/obj/machinery/chem_master/New()
/obj/machinery/chem_master/Topic(href, href_list)
/obj/machinery/chem_master/attack_ai(mob/user as mob)
/obj/machinery/chem_master/attack_hand(mob/user as mob)
/obj/machinery/chem_master/attack_paw(mob/user as mob)
/obj/machinery/chem_master/attackby(var/obj/item/B as obj, var/mob/user as mob, params)
/obj/machinery/chem_master/blob_act()
/obj/machinery/chem_master/condimaster
/obj/machinery/chem_master/constructable
/obj/machinery/chem_master/constructable/New()
/obj/machinery/chem_master/constructable/attackby(var/obj/item/B as obj, var/mob/user as mob, params)
/obj/machinery/chem_master/ex_act(severity, target)
/obj/machinery/chem_master/isgoodnumber(var/num)
/obj/machinery/chem_master/power_change()
/obj/machinery/clonepod
/obj/machinery/clonepod/New()
/obj/machinery/clonepod/RefreshParts()
/obj/machinery/clonepod/attack_ai(mob/user as mob)
/obj/machinery/clonepod/attack_hand(mob/user as mob)
/obj/machinery/clonepod/attack_paw(mob/user as mob)
/obj/machinery/clonepod/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/clonepod/connected_message(var/message)
/obj/machinery/clonepod/emag_act(user as mob)
/obj/machinery/clonepod/emp_act(severity)
/obj/machinery/clonepod/ex_act(severity, target)
/obj/machinery/clonepod/go_out()
/obj/machinery/clonepod/growclone(var/ckey, var/clonename, var/ui, var/se, var/mindref, var/datum/species/mrace, var/list/features, var/factions)
/obj/machinery/clonepod/malfunction()
/obj/machinery/clonepod/process()
/obj/machinery/clonepod/relaymove(mob/user as mob)
/obj/machinery/clonepod/verb/eject()
/obj/machinery/close_machine(mob/living/target = null)
/obj/machinery/computer
/obj/machinery/computer/HolodeckControl
/obj/machinery/computer/HolodeckControl/Destroy()
/obj/machinery/computer/HolodeckControl/New()
/obj/machinery/computer/HolodeckControl/Topic(href, href_list)
/obj/machinery/computer/HolodeckControl/attack_hand(var/mob/user as mob)
/obj/machinery/computer/HolodeckControl/blob_act()
/obj/machinery/computer/HolodeckControl/checkInteg(var/area/A)
/obj/machinery/computer/HolodeckControl/derez(var/obj/obj , var/silent = 1)
/obj/machinery/computer/HolodeckControl/emag_act(mob/user as mob)
/obj/machinery/computer/HolodeckControl/emergencyShutdown()
/obj/machinery/computer/HolodeckControl/emp_act(severity)
/obj/machinery/computer/HolodeckControl/ex_act(severity, target)
/obj/machinery/computer/HolodeckControl/loadProgram(var/area/A)
/obj/machinery/computer/HolodeckControl/power_change()
/obj/machinery/computer/HolodeckControl/process()
/obj/machinery/computer/New(location, obj/item/weapon/circuitboard/C)
/obj/machinery/computer/aifixer
/obj/machinery/computer/aifixer/Topic(href, href_list)
/obj/machinery/computer/aifixer/attack_hand(var/mob/user as mob)
/obj/machinery/computer/aifixer/attackby(I as obj, user as mob, params)
/obj/machinery/computer/aifixer/interact(mob/user)
/obj/machinery/computer/aifixer/process()
/obj/machinery/computer/aifixer/transfer_ai(var/interaction, var/mob/user, var/mob/living/silicon/ai/AI, var/obj/item/device/aicard/card)
/obj/machinery/computer/aifixer/update_icon()
/obj/machinery/computer/arcade/
/obj/machinery/computer/arcade/New()
/obj/machinery/computer/arcade/battle
/obj/machinery/computer/arcade/battle/New()
/obj/machinery/computer/arcade/battle/Topic(href, href_list)
/obj/machinery/computer/arcade/battle/arcade_action()
/obj/machinery/computer/arcade/battle/attack_hand(mob/user as mob)
/obj/machinery/computer/arcade/battle/emag_act(mob/user as mob)
/obj/machinery/computer/arcade/emp_act(severity)
/obj/machinery/computer/arcade/orion_trail
/obj/machinery/computer/arcade/orion_trail/New()
/obj/machinery/computer/arcade/orion_trail/Topic(href, href_list)
/obj/machinery/computer/arcade/orion_trail/attack_hand(mob/user as mob)
/obj/machinery/computer/arcade/orion_trail/emag_act(mob/user as mob)
/obj/machinery/computer/arcade/orion_trail/event()
/obj/machinery/computer/arcade/orion_trail/newgame()
/obj/machinery/computer/arcade/orion_trail/win()
/obj/machinery/computer/arcade/prizevend()
/obj/machinery/computer/area_atmos
/obj/machinery/computer/area_atmos/New()
/obj/machinery/computer/area_atmos/Topic(href, href_list)
/obj/machinery/computer/area_atmos/area
/obj/machinery/computer/area_atmos/area/scanscrubbers()
/obj/machinery/computer/area_atmos/area/validscrubber( var/obj/machinery/portable_atmospherics/scrubber/huge/scrubber as obj )
/obj/machinery/computer/area_atmos/attack_hand(var/mob/user as mob)
/obj/machinery/computer/area_atmos/scanscrubbers()
/obj/machinery/computer/area_atmos/validscrubber( var/obj/machinery/portable_atmospherics/scrubber/huge/scrubber as obj )
/obj/machinery/computer/atmos_alert
/obj/machinery/computer/atmos_alert/Destroy()
/obj/machinery/computer/atmos_alert/Topic(href, href_list)
/obj/machinery/computer/atmos_alert/attack_hand(mob/user)
/obj/machinery/computer/atmos_alert/initialize()
/obj/machinery/computer/atmos_alert/interact(mob/user)
/obj/machinery/computer/atmos_alert/process()
/obj/machinery/computer/atmos_alert/receive_signal(datum/signal/signal)
/obj/machinery/computer/atmos_alert/return_text()
/obj/machinery/computer/atmos_alert/set_frequency(new_frequency)
/obj/machinery/computer/atmos_alert/update_icon()
/obj/machinery/computer/attack_alien(mob/living/user)
/obj/machinery/computer/attack_hand(user)
/obj/machinery/computer/attack_paw(mob/living/user)
/obj/machinery/computer/attackby(I as obj, user as mob, params)
/obj/machinery/computer/blob_act()
/obj/machinery/computer/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/computer/camera_advanced
/obj/machinery/computer/camera_advanced/CreateEye()
/obj/machinery/computer/camera_advanced/GrantActions(var/mob/living/carbon/user)
/obj/machinery/computer/camera_advanced/abductor
/obj/machinery/computer/camera_advanced/abductor/CreateEye()
/obj/machinery/computer/camera_advanced/abductor/GrantActions(var/mob/living/carbon/user)
/obj/machinery/computer/camera_advanced/abductor/IsAbductor(var/mob/living/carbon/human/H)
/obj/machinery/computer/camera_advanced/abductor/IsScientist(var/mob/living/carbon/human/H)
/obj/machinery/computer/camera_advanced/abductor/attack_hand(var/mob/user as mob)
/obj/machinery/computer/camera_advanced/attack_hand(var/mob/user as mob)
/obj/machinery/computer/camera_advanced/check_eye(var/mob/user as mob)
/obj/machinery/computer/card
/obj/machinery/computer/card/Topic(href, href_list)
/obj/machinery/computer/card/attack_hand(var/mob/user as mob)
/obj/machinery/computer/card/attackby(O as obj, user as mob, params)
/obj/machinery/computer/card/can_close_job(var/datum/job/job)
/obj/machinery/computer/card/can_open_job(var/datum/job/job)
/obj/machinery/computer/card/centcom
/obj/machinery/computer/card/get_subordinates(var/rank)
/obj/machinery/computer/card/job_blacklisted(jobtitle)
/obj/machinery/computer/card/minor
/obj/machinery/computer/card/minor/New()
/obj/machinery/computer/card/minor/ce
/obj/machinery/computer/card/minor/cmo
/obj/machinery/computer/card/minor/hos
/obj/machinery/computer/card/minor/rd
/obj/machinery/computer/cloning
/obj/machinery/computer/cloning/New()
/obj/machinery/computer/cloning/Topic(href, href_list)
/obj/machinery/computer/cloning/attack_hand(mob/user)
/obj/machinery/computer/cloning/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/machinery/computer/cloning/findcloner()
/obj/machinery/computer/cloning/findscanner()
/obj/machinery/computer/cloning/interact(mob/user)
/obj/machinery/computer/cloning/process()
/obj/machinery/computer/cloning/scan_mob(mob/living/carbon/human/subject as mob)
/obj/machinery/computer/cloning/updatemodules()
/obj/machinery/computer/communications
/obj/machinery/computer/communications/Destroy()
/obj/machinery/computer/communications/New()
/obj/machinery/computer/communications/Topic(href, href_list)
/obj/machinery/computer/communications/attack_hand(var/mob/user as mob)
/obj/machinery/computer/communications/attackby(var/obj/I as obj, var/mob/user as mob, params)
/obj/machinery/computer/communications/emag_act(mob/user as mob)
/obj/machinery/computer/communications/get_call_shuttle_form(var/ai_interface = 0)
/obj/machinery/computer/communications/get_cancel_shuttle_form()
/obj/machinery/computer/communications/get_javascript_header(var/form_id)
/obj/machinery/computer/communications/interact_ai(var/mob/living/silicon/ai/user as mob)
/obj/machinery/computer/communications/make_announcement(var/mob/living/user, var/is_silicon)
/obj/machinery/computer/communications/post_status(var/command, var/data1, var/data2)
/obj/machinery/computer/communications/process()
/obj/machinery/computer/crew
/obj/machinery/computer/crew/Topic(href, href_list)
/obj/machinery/computer/crew/attack_ai(mob/user)
/obj/machinery/computer/crew/attack_hand(mob/user)
/obj/machinery/computer/emergency_shuttle
/obj/machinery/computer/emergency_shuttle/attackby(var/obj/item/weapon/card/W as obj, var/mob/user as mob, params)
/obj/machinery/computer/emergency_shuttle/emag_act(mob/user as mob)
/obj/machinery/computer/emp_act(severity)
/obj/machinery/computer/ex_act(severity, target)
/obj/machinery/computer/general_air_control
/obj/machinery/computer/general_air_control/Destroy()
/obj/machinery/computer/general_air_control/New()
/obj/machinery/computer/general_air_control/Topic(href, href_list)
/obj/machinery/computer/general_air_control/attack_hand(mob/user)
/obj/machinery/computer/general_air_control/fuel_injection
/obj/machinery/computer/general_air_control/fuel_injection/Topic(href, href_list)
/obj/machinery/computer/general_air_control/fuel_injection/process()
/obj/machinery/computer/general_air_control/fuel_injection/receive_signal(datum/signal/signal)
/obj/machinery/computer/general_air_control/fuel_injection/return_text()
/obj/machinery/computer/general_air_control/initialize()
/obj/machinery/computer/general_air_control/interact(mob/user)
/obj/machinery/computer/general_air_control/large_tank_control
/obj/machinery/computer/general_air_control/large_tank_control/Topic(href, href_list)
/obj/machinery/computer/general_air_control/large_tank_control/receive_signal(datum/signal/signal)
/obj/machinery/computer/general_air_control/large_tank_control/reconnect(mob/user)
/obj/machinery/computer/general_air_control/large_tank_control/return_text()
/obj/machinery/computer/general_air_control/process()
/obj/machinery/computer/general_air_control/receive_signal(datum/signal/signal)
/obj/machinery/computer/general_air_control/return_text()
/obj/machinery/computer/general_air_control/set_frequency(new_frequency)
/obj/machinery/computer/initialize()
/obj/machinery/computer/libraryconsole
/obj/machinery/computer/libraryconsole/Topic(href, href_list)
/obj/machinery/computer/libraryconsole/attack_hand(var/mob/user as mob)
/obj/machinery/computer/libraryconsole/bookmanagement
/obj/machinery/computer/libraryconsole/bookmanagement/New()
/obj/machinery/computer/libraryconsole/bookmanagement/Topic(href, href_list)
/obj/machinery/computer/libraryconsole/bookmanagement/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/computer/libraryconsole/bookmanagement/build_library_menu()
/obj/machinery/computer/libraryconsole/bookmanagement/emag_act(mob/user as mob)
/obj/machinery/computer/libraryconsole/bookmanagement/interact(mob/user)
/obj/machinery/computer/libraryconsole/interact(mob/user)
/obj/machinery/computer/mech_bay_power_console
/obj/machinery/computer/mech_bay_power_console/Topic(href, href_list)
/obj/machinery/computer/mech_bay_power_console/attack_ai(mob/user)
/obj/machinery/computer/mech_bay_power_console/attack_hand(mob/user)
/obj/machinery/computer/mech_bay_power_console/initialize()
/obj/machinery/computer/mech_bay_power_console/interact(mob/user)
/obj/machinery/computer/mech_bay_power_console/process()
/obj/machinery/computer/mech_bay_power_console/reconnect()
/obj/machinery/computer/mech_bay_power_console/update_icon()
/obj/machinery/computer/mecha
/obj/machinery/computer/mecha/Topic(href, href_list)
/obj/machinery/computer/mecha/attack_hand(var/mob/user as mob)
/obj/machinery/computer/med_data
/obj/machinery/computer/med_data/Topic(href, href_list)
/obj/machinery/computer/med_data/attack_hand(mob/user as mob)
/obj/machinery/computer/med_data/attackby(obj/item/O as obj, mob/user as mob, params)
/obj/machinery/computer/med_data/canUseMedicalRecordsConsole(mob/user, message = 1, record1, record2)
/obj/machinery/computer/med_data/emp_act(severity)
/obj/machinery/computer/med_data/laptop
/obj/machinery/computer/message_monitor
/obj/machinery/computer/message_monitor/BruteForce(mob/user as mob)
/obj/machinery/computer/message_monitor/ResetMessage()
/obj/machinery/computer/message_monitor/Topic(href, href_list)
/obj/machinery/computer/message_monitor/UnmagConsole()
/obj/machinery/computer/message_monitor/attack_hand(var/mob/living/user as mob)
/obj/machinery/computer/message_monitor/attackby(obj/item/weapon/O as obj, mob/living/user as mob, params)
/obj/machinery/computer/message_monitor/emag_act(user as mob)
/obj/machinery/computer/message_monitor/initialize()
/obj/machinery/computer/monitor
/obj/machinery/computer/monitor/New()
/obj/machinery/computer/monitor/Topic(href, href_list)
/obj/machinery/computer/monitor/attack_hand(mob/user)
/obj/machinery/computer/monitor/interact(mob/user)
/obj/machinery/computer/monitor/process()
/obj/machinery/computer/operating
/obj/machinery/computer/operating/New()
/obj/machinery/computer/operating/attack_hand(mob/user)
/obj/machinery/computer/operating/find_table()
/obj/machinery/computer/operating/get_patient_info()
/obj/machinery/computer/operating/initialize()
/obj/machinery/computer/operating/interact(mob/user)
/obj/machinery/computer/ordercomp
/obj/machinery/computer/ordercomp/Topic(href, href_list)
/obj/machinery/computer/ordercomp/attack_hand(var/mob/user as mob)
/obj/machinery/computer/pandemic
/obj/machinery/computer/pandemic/GetResistancesByIndex(var/index)
/obj/machinery/computer/pandemic/GetVirusByIndex(var/index)
/obj/machinery/computer/pandemic/GetVirusTypeByIndex(var/index)
/obj/machinery/computer/pandemic/New()
/obj/machinery/computer/pandemic/Topic(href, href_list)
/obj/machinery/computer/pandemic/attack_hand(mob/user as mob)
/obj/machinery/computer/pandemic/attackby(var/obj/I as obj, var/mob/user as mob, params)
/obj/machinery/computer/pandemic/replicator_cooldown(var/waittime)
/obj/machinery/computer/pandemic/set_broken()
/obj/machinery/computer/pandemic/update_icon()
/obj/machinery/computer/pod
/obj/machinery/computer/pod/Topic(href, href_list)
/obj/machinery/computer/pod/alarm()
/obj/machinery/computer/pod/attack_hand(mob/user)
/obj/machinery/computer/pod/initialize()
/obj/machinery/computer/pod/old
/obj/machinery/computer/pod/old/swf
/obj/machinery/computer/pod/old/syndicate
/obj/machinery/computer/pod/old/syndicate/attack_hand(mob/user)
/obj/machinery/computer/pod/process()
/obj/machinery/computer/power_change()
/obj/machinery/computer/prisoner
/obj/machinery/computer/prisoner/Topic(href, href_list)
/obj/machinery/computer/prisoner/attack_hand(var/mob/user as mob)
/obj/machinery/computer/prisoner/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/machinery/computer/prisoner/process()
/obj/machinery/computer/process()
/obj/machinery/computer/rdconsole
/obj/machinery/computer/rdconsole/CallMaterialName(var/ID)
/obj/machinery/computer/rdconsole/CallTechName(var/ID)
/obj/machinery/computer/rdconsole/New()
/obj/machinery/computer/rdconsole/SyncRDevices()
/obj/machinery/computer/rdconsole/Topic(href, href_list)
/obj/machinery/computer/rdconsole/attack_hand(mob/user as mob)
/obj/machinery/computer/rdconsole/attackby(var/obj/item/weapon/D as obj, var/mob/user as mob, params)
/obj/machinery/computer/rdconsole/core
/obj/machinery/computer/rdconsole/emag_act(mob/user as mob)
/obj/machinery/computer/rdconsole/experiment
/obj/machinery/computer/rdconsole/griefProtection()
/obj/machinery/computer/rdconsole/initialize()
/obj/machinery/computer/rdconsole/interact(mob/user)
/obj/machinery/computer/rdconsole/list_categories(var/list/categories, var/menu_num as num)
/obj/machinery/computer/rdconsole/ninjadrain_act(var/obj/item/clothing/suit/space/space_ninja/S, var/mob/living/carbon/human/H, var/obj/item/clothing/gloves/space_ninja/G)
/obj/machinery/computer/rdconsole/robotics
/obj/machinery/computer/rdconsole/robotics/New()
/obj/machinery/computer/rdservercontrol
/obj/machinery/computer/rdservercontrol/Topic(href, href_list)
/obj/machinery/computer/rdservercontrol/attack_hand(mob/user as mob)
/obj/machinery/computer/rdservercontrol/attackby(var/obj/item/weapon/D as obj, var/mob/user as mob, params)
/obj/machinery/computer/rdservercontrol/emag_act(mob/user as mob)
/obj/machinery/computer/robotics
/obj/machinery/computer/robotics/Topic(href, href_list)
/obj/machinery/computer/robotics/attack_hand(var/mob/user as mob)
/obj/machinery/computer/robotics/can_control(var/mob/user, var/mob/living/silicon/robot/R)
/obj/machinery/computer/robotics/interact(var/mob/user as mob)
/obj/machinery/computer/scan_consolenew
/obj/machinery/computer/scan_consolenew/New()
/obj/machinery/computer/scan_consolenew/ShowInterface(mob/user, last_change)
/obj/machinery/computer/scan_consolenew/Topic(href, href_list)
/obj/machinery/computer/scan_consolenew/attack_hand(mob/user)
/obj/machinery/computer/scan_consolenew/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/machinery/computer/secure_data
/obj/machinery/computer/secure_data/Topic(href, href_list)
/obj/machinery/computer/secure_data/attack_hand(mob/user as mob)
/obj/machinery/computer/secure_data/attackby(obj/item/O as obj, mob/user as mob, params)
/obj/machinery/computer/secure_data/canUseSecurityRecordsConsole(mob/user, message1 = 0, record1, record2)
/obj/machinery/computer/secure_data/emp_act(severity)
/obj/machinery/computer/secure_data/get_photo(var/mob/user)
/obj/machinery/computer/security
/obj/machinery/computer/security/attack_hand(var/mob/user as mob)
/obj/machinery/computer/security/check_eye(var/mob/user as mob)
/obj/machinery/computer/security/close(mob/user)
/obj/machinery/computer/security/drawmap(var/mob/user as mob)
/obj/machinery/computer/security/mining
/obj/machinery/computer/security/telescreen
/obj/machinery/computer/security/telescreen/entertainment
/obj/machinery/computer/security/telescreen/update_icon()
/obj/machinery/computer/security/verb/station_map()
/obj/machinery/computer/security/wooden_tv
/obj/machinery/computer/set_broken()
/obj/machinery/computer/shuttle
/obj/machinery/computer/shuttle/New(location, obj/item/weapon/circuitboard/shuttle/C)
/obj/machinery/computer/shuttle/Topic(href, href_list)
/obj/machinery/computer/shuttle/attack_hand(user as mob)
/obj/machinery/computer/shuttle/emag_act(mob/user as mob)
/obj/machinery/computer/shuttle/ferry
/obj/machinery/computer/shuttle/ferry/request
/obj/machinery/computer/shuttle/ferry/request/Topic(href, href_list)
/obj/machinery/computer/shuttle/labor
/obj/machinery/computer/shuttle/labor/one_way
/obj/machinery/computer/shuttle/labor/one_way/Topic(href, href_list)
/obj/machinery/computer/shuttle/mining
/obj/machinery/computer/shuttle/syndicate
/obj/machinery/computer/shuttle/syndicate/recall
/obj/machinery/computer/shuttle/syndicate/whiteship
/obj/machinery/computer/shuttle/white_ship
/obj/machinery/computer/slot_machine
/obj/machinery/computer/slot_machine/New()
/obj/machinery/computer/slot_machine/Topic(href, href_list)
/obj/machinery/computer/slot_machine/attack_hand(mob/living/user)
/obj/machinery/computer/slot_machine/attackby(obj/item/I, mob/living/user, params)
/obj/machinery/computer/slot_machine/can_spin(mob/user)
/obj/machinery/computer/slot_machine/dispense(amount = 0, cointype = /obj/item/weapon/coin/silver, mob/living/target, throwit = 0)
/obj/machinery/computer/slot_machine/emag_act()
/obj/machinery/computer/slot_machine/emp_act(severity)
/obj/machinery/computer/slot_machine/get_lines()
/obj/machinery/computer/slot_machine/give_coins(amount)
/obj/machinery/computer/slot_machine/give_money(amount)
/obj/machinery/computer/slot_machine/give_prizes(usrname, mob/user)
/obj/machinery/computer/slot_machine/interact(mob/living/user)
/obj/machinery/computer/slot_machine/power_change()
/obj/machinery/computer/slot_machine/process()
/obj/machinery/computer/slot_machine/randomize_reels()
/obj/machinery/computer/slot_machine/spin(mob/user)
/obj/machinery/computer/slot_machine/toggle_reel_spin(value, delay = 0)
/obj/machinery/computer/slot_machine/update_icon()
/obj/machinery/computer/station_alert
/obj/machinery/computer/station_alert/Topic(href, href_list)
/obj/machinery/computer/station_alert/attack_hand(mob/user)
/obj/machinery/computer/station_alert/cancelAlarm(var/class, area/A as area, obj/origin)
/obj/machinery/computer/station_alert/interact(mob/user)
/obj/machinery/computer/station_alert/process()
/obj/machinery/computer/station_alert/triggerAlarm(var/class, area/A, var/O, var/obj/alarmsource)
/obj/machinery/computer/station_alert/update_icon()
/obj/machinery/computer/supplycomp
/obj/machinery/computer/supplycomp/New()
/obj/machinery/computer/supplycomp/Topic(href, href_list)
/obj/machinery/computer/supplycomp/attack_hand(var/mob/user as mob)
/obj/machinery/computer/supplycomp/emag_act(mob/user)
/obj/machinery/computer/supplycomp/post_signal(var/command)
/obj/machinery/computer/telecomms/monitor
/obj/machinery/computer/telecomms/monitor/Topic(href, href_list)
/obj/machinery/computer/telecomms/monitor/attack_hand(mob/user as mob)
/obj/machinery/computer/telecomms/monitor/attackby()
/obj/machinery/computer/telecomms/monitor/emag_act(mob/user as mob)
/obj/machinery/computer/telecomms/server
/obj/machinery/computer/telecomms/server/Topic(href, href_list)
/obj/machinery/computer/telecomms/server/attack_hand(mob/user as mob)
/obj/machinery/computer/telecomms/server/attackby()
/obj/machinery/computer/telecomms/server/emag_act(mob/user as mob)
/obj/machinery/computer/telecomms/traffic
/obj/machinery/computer/telecomms/traffic/Topic(href, href_list)
/obj/machinery/computer/telecomms/traffic/attack_hand(mob/user as mob)
/obj/machinery/computer/telecomms/traffic/attackby()
/obj/machinery/computer/telecomms/traffic/canAccess(var/mob/user)
/obj/machinery/computer/telecomms/traffic/create_log(var/entry, var/mob/user)
/obj/machinery/computer/telecomms/traffic/emag_act(mob/user as mob)
/obj/machinery/computer/telecomms/traffic/print_logs()
/obj/machinery/computer/telecomms/traffic/process()
/obj/machinery/computer/telecomms/traffic/stop_editing()
/obj/machinery/computer/telecrystals
/obj/machinery/computer/telecrystals/boss
/obj/machinery/computer/telecrystals/boss/Topic(href, href_list)
/obj/machinery/computer/telecrystals/boss/attack_hand(var/mob/user as mob)
/obj/machinery/computer/telecrystals/boss/getDangerous()
/obj/machinery/computer/telecrystals/boss/logTransfer(var/logmessage)
/obj/machinery/computer/telecrystals/boss/scaleTC(var/amt)
/obj/machinery/computer/telecrystals/boss/scanUplinkers()
/obj/machinery/computer/telecrystals/uplinker
/obj/machinery/computer/telecrystals/uplinker/New()
/obj/machinery/computer/telecrystals/uplinker/Topic(href, href_list)
/obj/machinery/computer/telecrystals/uplinker/attack_hand(mob/user as mob)
/obj/machinery/computer/telecrystals/uplinker/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/computer/telecrystals/uplinker/donateTC(var/amt, var/addLog = 1)
/obj/machinery/computer/telecrystals/uplinker/ejectuplink()
/obj/machinery/computer/telecrystals/uplinker/giveTC(var/amt, var/addLog = 1)
/obj/machinery/computer/telecrystals/uplinker/update_icon()
/obj/machinery/computer/teleporter
/obj/machinery/computer/teleporter/Destroy()
/obj/machinery/computer/teleporter/New()
/obj/machinery/computer/teleporter/Topic(href, href_list)
/obj/machinery/computer/teleporter/attack_ai(mob/user)
/obj/machinery/computer/teleporter/attack_hand(mob/user)
/obj/machinery/computer/teleporter/attackby(I as obj, mob/living/user as mob, params)
/obj/machinery/computer/teleporter/check_hub_connection()
/obj/machinery/computer/teleporter/eject()
/obj/machinery/computer/teleporter/initialize()
/obj/machinery/computer/teleporter/interact(mob/user)
/obj/machinery/computer/teleporter/link_power_station()
/obj/machinery/computer/teleporter/reset_regime()
/obj/machinery/computer/teleporter/set_target(mob/user)
/obj/machinery/computer/telescience
/obj/machinery/computer/telescience/Destroy()
/obj/machinery/computer/telescience/New()
/obj/machinery/computer/telescience/Topic(href, href_list)
/obj/machinery/computer/telescience/attack_ai(mob/user)
/obj/machinery/computer/telescience/attack_hand(mob/user)
/obj/machinery/computer/telescience/attack_paw(mob/user)
/obj/machinery/computer/telescience/attackby(obj/item/W, mob/user, params)
/obj/machinery/computer/telescience/doteleport(mob/user)
/obj/machinery/computer/telescience/eject()
/obj/machinery/computer/telescience/examine(mob/user)
/obj/machinery/computer/telescience/initialize()
/obj/machinery/computer/telescience/interact(mob/user)
/obj/machinery/computer/telescience/recalibrate()
/obj/machinery/computer/telescience/sparks()
/obj/machinery/computer/telescience/telefail()
/obj/machinery/computer/telescience/teleport(mob/user)
/obj/machinery/computer/turbine_computer
/obj/machinery/computer/turbine_computer/New()
/obj/machinery/computer/turbine_computer/Topic(href, href_list)
/obj/machinery/computer/turbine_computer/attack_hand(var/mob/user as mob)
/obj/machinery/computer/turbine_computer/interact(mob/user)
/obj/machinery/computer/turbine_computer/locate_machinery()
/obj/machinery/computer/turbine_computer/process()
/obj/machinery/computer/update_icon()
/obj/machinery/computer/upload
/obj/machinery/computer/upload/ai
/obj/machinery/computer/upload/ai/attack_hand(var/mob/user as mob)
/obj/machinery/computer/upload/ai/can_upload_to(var/mob/living/silicon/ai/A as mob)
/obj/machinery/computer/upload/attackby(obj/item/O as obj, mob/user as mob, params)
/obj/machinery/computer/upload/borg
/obj/machinery/computer/upload/borg/attack_hand(var/mob/user as mob)
/obj/machinery/computer/upload/borg/can_upload_to(var/mob/living/silicon/robot/B as mob)
/obj/machinery/computer/upload/can_upload_to(var/mob/living/silicon/S as mob)
/obj/machinery/constructable_frame
/obj/machinery/constructable_frame/get_req_components_amt()
/obj/machinery/constructable_frame/machine_frame/attackby(obj/item/P as obj, mob/user as mob, params)
/obj/machinery/constructable_frame/update_namelist()
/obj/machinery/constructable_frame/update_req_desc()
/obj/machinery/construction()
/obj/machinery/conveyor
/obj/machinery/conveyor/New(loc, newdir)
/obj/machinery/conveyor/attack_hand(mob/user as mob)
/obj/machinery/conveyor/attackby(var/obj/item/I, mob/user, params)
/obj/machinery/conveyor/auto/New(loc, newdir)
/obj/machinery/conveyor/auto/update()
/obj/machinery/conveyor/broken()
/obj/machinery/conveyor/centcom_auto
/obj/machinery/conveyor/power_change()
/obj/machinery/conveyor/process()
/obj/machinery/conveyor/set_operable(stepdir, match_id, op)
/obj/machinery/conveyor/setmove()
/obj/machinery/conveyor/update()
/obj/machinery/conveyor_switch
/obj/machinery/conveyor_switch/New(newloc, newid)
/obj/machinery/conveyor_switch/attack_hand(mob/user)
/obj/machinery/conveyor_switch/attackby(var/obj/item/I, mob/user, params)
/obj/machinery/conveyor_switch/oneway
/obj/machinery/conveyor_switch/process()
/obj/machinery/conveyor_switch/update()
/obj/machinery/crema_switch
/obj/machinery/crema_switch/attack_hand(mob/user as mob)
/obj/machinery/crema_switch/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/machinery/default_change_direction_wrench(var/mob/user, var/obj/item/weapon/wrench/W)
/obj/machinery/default_deconstruction_crowbar(var/obj/item/weapon/crowbar/C, var/ignore_panel = 0)
/obj/machinery/default_deconstruction_screwdriver(var/mob/user, var/icon_state_open, var/icon_state_closed, var/obj/item/weapon/screwdriver/S)
/obj/machinery/default_pry_open(var/obj/item/weapon/crowbar/C)
/obj/machinery/default_unfasten_wrench(mob/user, obj/item/weapon/wrench/W, time = 20)
/obj/machinery/deployable
/obj/machinery/deployable/barrier
/obj/machinery/deployable/barrier/CanPass(atom/movable/mover, turf/target, height=0)
/obj/machinery/deployable/barrier/New()
/obj/machinery/deployable/barrier/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/deployable/barrier/blob_act()
/obj/machinery/deployable/barrier/emp_act(severity)
/obj/machinery/deployable/barrier/ex_act(severity)
/obj/machinery/deployable/barrier/explode()
/obj/machinery/deployable/emag_act(user as mob)
/obj/machinery/disposal
/obj/machinery/disposal/CanPass(atom/movable/mover, turf/target, height=0)
/obj/machinery/disposal/Deconstruct()
/obj/machinery/disposal/Destroy()
/obj/machinery/disposal/MouseDrop_T(mob/living/target, mob/living/user)
/obj/machinery/disposal/New(loc, var/obj/structure/disposalconstruct/make_from)
/obj/machinery/disposal/Topic(href, href_list)
/obj/machinery/disposal/alter_health()
/obj/machinery/disposal/attack_ai(mob/user as mob)
/obj/machinery/disposal/attack_animal(var/mob/living/simple_animal/M)
/obj/machinery/disposal/attack_hand(mob/user as mob)
/obj/machinery/disposal/attack_paw(mob/user as mob)
/obj/machinery/disposal/attackby(var/obj/item/I, var/mob/user, params)
/obj/machinery/disposal/attempt_escape(mob/user as mob)
/obj/machinery/disposal/container_resist()
/obj/machinery/disposal/deliveryChute
/obj/machinery/disposal/deliveryChute/Bumped(var/atom/movable/AM)
/obj/machinery/disposal/deliveryChute/Destroy()
/obj/machinery/disposal/deliveryChute/New(loc,var/obj/structure/disposalconstruct/make_from)
/obj/machinery/disposal/deliveryChute/attackby(var/obj/item/I, var/mob/user, params)
/obj/machinery/disposal/deliveryChute/flushAnimation()
/obj/machinery/disposal/deliveryChute/interact()
/obj/machinery/disposal/deliveryChute/newHolderDestination(obj/structure/disposalholder/H)
/obj/machinery/disposal/deliveryChute/process()
/obj/machinery/disposal/deliveryChute/update()
/obj/machinery/disposal/eject()
/obj/machinery/disposal/expel(var/obj/structure/disposalholder/H)
/obj/machinery/disposal/flush()
/obj/machinery/disposal/flushAnimation()
/obj/machinery/disposal/go_out(mob/user)
/obj/machinery/disposal/initialize()
/obj/machinery/disposal/interact(mob/user, var/ai=0)
/obj/machinery/disposal/newHolderDestination(obj/structure/disposalholder/H)
/obj/machinery/disposal/power_change()
/obj/machinery/disposal/process()
/obj/machinery/disposal/relaymove(mob/user as mob)
/obj/machinery/disposal/singularity_pull(S, current_size)
/obj/machinery/disposal/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/obj/machinery/disposal/stuff_mob_in(mob/living/target, mob/living/user)
/obj/machinery/disposal/trunk_check()
/obj/machinery/disposal/update()
/obj/machinery/dna_scannernew
/obj/machinery/dna_scannernew/New()
/obj/machinery/dna_scannernew/RefreshParts()
/obj/machinery/dna_scannernew/attack_hand(mob/user)
/obj/machinery/dna_scannernew/attackby(var/obj/item/I, mob/user, params)
/obj/machinery/dna_scannernew/blob_act()
/obj/machinery/dna_scannernew/close_machine()
/obj/machinery/dna_scannernew/container_resist()
/obj/machinery/dna_scannernew/open_machine()
/obj/machinery/dna_scannernew/power_change()
/obj/machinery/dna_scannernew/relaymove(mob/user as mob)
/obj/machinery/dna_scannernew/toggle_open(var/mob/user)
/obj/machinery/dna_scannernew/update_icon()
/obj/machinery/dominator
/obj/machinery/dominator/Destroy()
/obj/machinery/dominator/New()
/obj/machinery/dominator/attack_alien(mob/living/user)
/obj/machinery/dominator/attack_animal(mob/living/user as mob)
/obj/machinery/dominator/attack_hand(mob/user)
/obj/machinery/dominator/attack_hulk(mob/user)
/obj/machinery/dominator/attackby(I as obj, user as mob, params)
/obj/machinery/dominator/attackby(obj/item/weapon/I as obj, mob/living/user as mob, params)
/obj/machinery/dominator/blob_act()
/obj/machinery/dominator/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/dominator/emp_act(severity)
/obj/machinery/dominator/ex_act(severity, target)
/obj/machinery/dominator/examine(mob/user)
/obj/machinery/dominator/healthcheck(var/damage)
/obj/machinery/dominator/mech_melee_attack(obj/mecha/M)
/obj/machinery/dominator/set_broken()
/obj/machinery/door
/obj/machinery/door/BlockSuperconductivity()
/obj/machinery/door/Bumped(atom/AM)
/obj/machinery/door/CanAStarPass(var/obj/item/weapon/card/id/ID)
/obj/machinery/door/CanAtmosPass()
/obj/machinery/door/CanPass(atom/movable/mover, turf/target, height=0)
/obj/machinery/door/Destroy()
/obj/machinery/door/Move()
/obj/machinery/door/New()
/obj/machinery/door/airlock
/obj/machinery/door/airlock/AIAltClick()
/obj/machinery/door/airlock/AICtrlClick()
/obj/machinery/door/airlock/AICtrlShiftClick()
/obj/machinery/door/airlock/AIShiftClick()
/obj/machinery/door/airlock/BorgAltClick()
/obj/machinery/door/airlock/BorgCtrlClick()
/obj/machinery/door/airlock/BorgCtrlShiftClick()
/obj/machinery/door/airlock/BorgShiftClick()
/obj/machinery/door/airlock/CanAStarPass(var/obj/item/weapon/card/id/ID)
/obj/machinery/door/airlock/Destroy()
/obj/machinery/door/airlock/HasProximity(atom/movable/AM as mob|obj)
/obj/machinery/door/airlock/New()
/obj/machinery/door/airlock/Topic(href, href_list, var/nowindow = 0)
/obj/machinery/door/airlock/alarmlock
/obj/machinery/door/airlock/alarmlock/Destroy()
/obj/machinery/door/airlock/alarmlock/New()
/obj/machinery/door/airlock/alarmlock/initialize()
/obj/machinery/door/airlock/alarmlock/receive_signal(datum/signal/signal)
/obj/machinery/door/airlock/atmos
/obj/machinery/door/airlock/attack_ai(mob/user as mob)
/obj/machinery/door/airlock/attack_hand(mob/user as mob)
/obj/machinery/door/airlock/attack_paw(mob/user as mob)
/obj/machinery/door/airlock/attackby(C as obj, mob/user as mob, params)
/obj/machinery/door/airlock/autoclose()
/obj/machinery/door/airlock/bolt()
/obj/machinery/door/airlock/bumpopen(mob/living/simple_animal/user as mob)
/obj/machinery/door/airlock/bumpopen(mob/living/user as mob)
/obj/machinery/door/airlock/canAIControl()
/obj/machinery/door/airlock/canAIHack()
/obj/machinery/door/airlock/centcom
/obj/machinery/door/airlock/change_paintjob(obj/item/C as obj, mob/user as mob)
/obj/machinery/door/airlock/close(surpress_send)
/obj/machinery/door/airlock/close(var/forced=0)
/obj/machinery/door/airlock/clown
/obj/machinery/door/airlock/command
/obj/machinery/door/airlock/diamond
/obj/machinery/door/airlock/do_animate(animation)
/obj/machinery/door/airlock/engineering
/obj/machinery/door/airlock/examine(mob/user)
/obj/machinery/door/airlock/external
/obj/machinery/door/airlock/freezer
/obj/machinery/door/airlock/glass
/obj/machinery/door/airlock/glass_atmos
/obj/machinery/door/airlock/glass_command
/obj/machinery/door/airlock/glass_engineering
/obj/machinery/door/airlock/glass_large
/obj/machinery/door/airlock/glass_medical
/obj/machinery/door/airlock/glass_mining
/obj/machinery/door/airlock/glass_research
/obj/machinery/door/airlock/glass_science
/obj/machinery/door/airlock/glass_security
/obj/machinery/door/airlock/glass_virology
/obj/machinery/door/airlock/gold
/obj/machinery/door/airlock/hack(mob/user as mob)
/obj/machinery/door/airlock/hasPower()
/obj/machinery/door/airlock/hatch
/obj/machinery/door/airlock/highsecurity
/obj/machinery/door/airlock/initialize()
/obj/machinery/door/airlock/isAllPowerCut()
/obj/machinery/door/airlock/isElectrified()
/obj/machinery/door/airlock/isWireCut(var/wireIndex)
/obj/machinery/door/airlock/loseBackupPower()
/obj/machinery/door/airlock/loseMainPower()
/obj/machinery/door/airlock/maintenance
/obj/machinery/door/airlock/maintenance_hatch
/obj/machinery/door/airlock/medical
/obj/machinery/door/airlock/mining
/obj/machinery/door/airlock/open(surpress_send)
/obj/machinery/door/airlock/open(var/forced=0)
/obj/machinery/door/airlock/plasma
/obj/machinery/door/airlock/plasma/BlockSuperconductivity()
/obj/machinery/door/airlock/plasma/PlasmaBurn(temperature)
/obj/machinery/door/airlock/plasma/attackby(C as obj, mob/user as mob, params)
/obj/machinery/door/airlock/plasma/ignite(exposed_temperature)
/obj/machinery/door/airlock/plasma/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/machinery/door/airlock/prison_open()
/obj/machinery/door/airlock/receive_signal(datum/signal/signal)
/obj/machinery/door/airlock/regainBackupPower()
/obj/machinery/door/airlock/regainMainPower()
/obj/machinery/door/airlock/requiresID()
/obj/machinery/door/airlock/research
/obj/machinery/door/airlock/sandstone
/obj/machinery/door/airlock/science
/obj/machinery/door/airlock/security
/obj/machinery/door/airlock/send_status()
/obj/machinery/door/airlock/set_frequency(new_frequency)
/obj/machinery/door/airlock/shock(mob/user, prb)
/obj/machinery/door/airlock/shuttle
/obj/machinery/door/airlock/silver
/obj/machinery/door/airlock/unbolt()
/obj/machinery/door/airlock/update_icon()
/obj/machinery/door/airlock/uranium
/obj/machinery/door/airlock/uranium/process()
/obj/machinery/door/airlock/uranium/radiate()
/obj/machinery/door/airlock/vault
/obj/machinery/door/airlock/virology
/obj/machinery/door/airlock/wood
/obj/machinery/door/attack_ai(mob/user as mob)
/obj/machinery/door/attack_hand(mob/user as mob)
/obj/machinery/door/attack_paw(mob/user as mob)
/obj/machinery/door/attack_tk(mob/user as mob)
/obj/machinery/door/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/machinery/door/blob_act()
/obj/machinery/door/bumpopen(mob/user as mob)
/obj/machinery/door/checkForMultipleDoors()
/obj/machinery/door/close()
/obj/machinery/door/crush()
/obj/machinery/door/do_animate(animation)
/obj/machinery/door/emag_act(mob/user as mob)
/obj/machinery/door/emp_act(severity)
/obj/machinery/door/ex_act(severity, target)
/obj/machinery/door/firedoor
/obj/machinery/door/firedoor/Bumped(atom/AM)
/obj/machinery/door/firedoor/attack_ai(mob/user as mob)
/obj/machinery/door/firedoor/attackby(obj/item/weapon/C as obj, mob/user as mob, params)
/obj/machinery/door/firedoor/border_only
/obj/machinery/door/firedoor/border_only/CanAtmosPass(var/turf/T)
/obj/machinery/door/firedoor/border_only/CanPass(atom/movable/mover, turf/target, height=0)
/obj/machinery/door/firedoor/border_only/CheckExit(atom/movable/mover as mob|obj, turf/target as turf)
/obj/machinery/door/firedoor/close()
/obj/machinery/door/firedoor/do_animate(animation)
/obj/machinery/door/firedoor/heavy
/obj/machinery/door/firedoor/latetoggle()
/obj/machinery/door/firedoor/open()
/obj/machinery/door/firedoor/power_change()
/obj/machinery/door/firedoor/update_icon()
/obj/machinery/door/hasPower()
/obj/machinery/door/morgue
/obj/machinery/door/open()
/obj/machinery/door/poddoor
/obj/machinery/door/poddoor/Bumped(atom/AM)
/obj/machinery/door/poddoor/attackby(obj/item/I, mob/user, params)
/obj/machinery/door/poddoor/close(ignorepower = 0)
/obj/machinery/door/poddoor/curtains
/obj/machinery/door/poddoor/curtains/New()
/obj/machinery/door/poddoor/curtains/close(ignorepower = 0)
/obj/machinery/door/poddoor/curtains/open(ignorepower = 0)
/obj/machinery/door/poddoor/curtains/preopen
/obj/machinery/door/poddoor/ert
/obj/machinery/door/poddoor/ex_act(severity, target)
/obj/machinery/door/poddoor/open(ignorepower = 0)
/obj/machinery/door/poddoor/preopen
/obj/machinery/door/poddoor/shutters
/obj/machinery/door/poddoor/shutters/New()
/obj/machinery/door/poddoor/shutters/close(ignorepower = 0)
/obj/machinery/door/poddoor/shutters/open(ignorepower = 0)
/obj/machinery/door/poddoor/shutters/preopen
/obj/machinery/door/proc/update_freelook_sight()
/obj/machinery/door/requiresID()
/obj/machinery/door/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/obj/machinery/door/unpowered
/obj/machinery/door/unpowered/Bumped(atom/AM)
/obj/machinery/door/unpowered/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/machinery/door/unpowered/emag_act()
/obj/machinery/door/unpowered/shuttle
/obj/machinery/door/update_freelook_sight()
/obj/machinery/door/update_icon()
/obj/machinery/door/window
/obj/machinery/door/window/Bumped(atom/movable/AM as mob|obj)
/obj/machinery/door/window/CanAStarPass(var/obj/item/weapon/card/id/ID, var/to_dir)
/obj/machinery/door/window/CanAtmosPass(var/turf/T)
/obj/machinery/door/window/CanPass(atom/movable/mover, turf/target, height=0)
/obj/machinery/door/window/CheckExit(atom/movable/mover as mob|obj, turf/target as turf)
/obj/machinery/door/window/Destroy()
/obj/machinery/door/window/New()
/obj/machinery/door/window/attack_ai(mob/user as mob)
/obj/machinery/door/window/attack_alien(mob/living/user as mob)
/obj/machinery/door/window/attack_animal(mob/living/user as mob)
/obj/machinery/door/window/attack_generic(mob/user as mob, damage = 0)
/obj/machinery/door/window/attack_hand(mob/user as mob)
/obj/machinery/door/window/attack_hulk(mob/user)
/obj/machinery/door/window/attack_paw(mob/user as mob)
/obj/machinery/door/window/attack_slime(mob/living/simple_animal/slime/user as mob)
/obj/machinery/door/window/attackby(obj/item/weapon/I as obj, mob/living/user as mob, params)
/obj/machinery/door/window/brigdoor
/obj/machinery/door/window/brigdoor/eastleft
/obj/machinery/door/window/brigdoor/eastright
/obj/machinery/door/window/brigdoor/northleft
/obj/machinery/door/window/brigdoor/northright
/obj/machinery/door/window/brigdoor/southleft
/obj/machinery/door/window/brigdoor/southright
/obj/machinery/door/window/brigdoor/westleft
/obj/machinery/door/window/brigdoor/westright
/obj/machinery/door/window/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/door/window/bumpopen(mob/user as mob)
/obj/machinery/door/window/close(var/forced=0)
/obj/machinery/door/window/eastleft
/obj/machinery/door/window/eastright
/obj/machinery/door/window/emag_act(mob/user as mob)
/obj/machinery/door/window/ex_act(severity, target)
/obj/machinery/door/window/hitby(AM as mob|obj)
/obj/machinery/door/window/mech_melee_attack(obj/mecha/M)
/obj/machinery/door/window/northleft
/obj/machinery/door/window/northright
/obj/machinery/door/window/open(var/forced=0)
/obj/machinery/door/window/open_and_close()
/obj/machinery/door/window/southleft
/obj/machinery/door/window/southright
/obj/machinery/door/window/take_damage(var/damage)
/obj/machinery/door/window/westleft
/obj/machinery/door/window/westright
/obj/machinery/doorButtons
/obj/machinery/doorButtons/access_button
/obj/machinery/doorButtons/access_button/attack_hand(mob/user)
/obj/machinery/doorButtons/access_button/findObjsByTag()
/obj/machinery/doorButtons/access_button/power_change()
/obj/machinery/doorButtons/access_button/removeMe(obj/O)
/obj/machinery/doorButtons/access_button/update_icon()
/obj/machinery/doorButtons/airlock_controller
/obj/machinery/doorButtons/airlock_controller/Destroy()
/obj/machinery/doorButtons/airlock_controller/Topic(href, href_list)
/obj/machinery/doorButtons/airlock_controller/attack_hand(mob/user)
/obj/machinery/doorButtons/airlock_controller/closeDoor(obj/machinery/door/airlock/A)
/obj/machinery/doorButtons/airlock_controller/cycleClose(obj/machinery/door/airlock/A)
/obj/machinery/doorButtons/airlock_controller/cycleOpen(obj/machinery/door/airlock/A)
/obj/machinery/doorButtons/airlock_controller/findObjsByTag()
/obj/machinery/doorButtons/airlock_controller/goIdle(var/update)
/obj/machinery/doorButtons/airlock_controller/onlyClose(obj/machinery/door/airlock/A)
/obj/machinery/doorButtons/airlock_controller/onlyOpen(obj/machinery/door/airlock/A)
/obj/machinery/doorButtons/airlock_controller/openDoor(obj/machinery/door/airlock/A)
/obj/machinery/doorButtons/airlock_controller/power_change()
/obj/machinery/doorButtons/airlock_controller/process()
/obj/machinery/doorButtons/airlock_controller/removeMe(obj/O)
/obj/machinery/doorButtons/airlock_controller/returnText()
/obj/machinery/doorButtons/airlock_controller/update_icon()
/obj/machinery/doorButtons/attackby(obj/O, mob/user)
/obj/machinery/doorButtons/findObjsByTag()
/obj/machinery/doorButtons/initialize()
/obj/machinery/doorButtons/removeMe()
/obj/machinery/door_control
/obj/machinery/door_control/attack_ai(mob/user as mob)
/obj/machinery/door_control/attack_hand(mob/user as mob)
/obj/machinery/door_control/attack_paw(mob/user as mob)
/obj/machinery/door_control/attackby(obj/item/weapon/W, mob/user as mob, params)
/obj/machinery/door_control/emag_act(user as mob)
/obj/machinery/door_control/power_change()
/obj/machinery/door_timer
/obj/machinery/door_timer/New()
/obj/machinery/door_timer/Topic(href, href_list)
/obj/machinery/door_timer/attack_ai(var/mob/user as mob)
/obj/machinery/door_timer/attack_hand(var/mob/user as mob)
/obj/machinery/door_timer/power_change()
/obj/machinery/door_timer/process()
/obj/machinery/door_timer/set_picture(var/state)
/obj/machinery/door_timer/timeleft()
/obj/machinery/door_timer/timer_end()
/obj/machinery/door_timer/timer_start()
/obj/machinery/door_timer/timeset(var/seconds)
/obj/machinery/door_timer/update_display(line1, line2)
/obj/machinery/door_timer/update_icon()
/obj/machinery/doppler_array
/obj/machinery/doppler_array/Destroy()
/obj/machinery/doppler_array/New()
/obj/machinery/doppler_array/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/doppler_array/power_change()
/obj/machinery/doppler_array/process()
/obj/machinery/doppler_array/verb/rotate()
/obj/machinery/doppler_array/verb/rotate()/for(var/message in messages)
/obj/machinery/doppler_array/verb/rotate()/if(devastation_range < orig_dev_range || heavy_impact_range < orig_heavy_range || light_impact_range < orig_light_range)
/obj/machinery/doppler_array/verb/rotate()/if(dx > dy)
/obj/machinery/driver_button
/obj/machinery/driver_button/attack_ai(mob/user as mob)
/obj/machinery/driver_button/attack_hand(mob/user as mob)
/obj/machinery/driver_button/attack_paw(mob/user as mob)
/obj/machinery/driver_button/attackby(obj/item/weapon/W, mob/user as mob, params)
/obj/machinery/droneDispenser
/obj/machinery/droneDispenser/Destroy()
/obj/machinery/droneDispenser/New()
/obj/machinery/droneDispenser/attackby(obj/item/O, mob/living/user)
/obj/machinery/droneDispenser/examine(mob/user)
/obj/machinery/droneDispenser/power_change()
/obj/machinery/droneDispenser/preloaded
/obj/machinery/droneDispenser/process()
/obj/machinery/droneDispenser/syndrone
/obj/machinery/dropContents()
/obj/machinery/embedded_controller
/obj/machinery/embedded_controller/Topic(href, href_list)
/obj/machinery/embedded_controller/attack_hand(mob/user as mob)
/obj/machinery/embedded_controller/interact(mob/user as mob)
/obj/machinery/embedded_controller/post_signal(datum/signal/signal, comm_line)
/obj/machinery/embedded_controller/process()
/obj/machinery/embedded_controller/radio
/obj/machinery/embedded_controller/radio/Destroy()
/obj/machinery/embedded_controller/radio/airlock_controller
/obj/machinery/embedded_controller/radio/airlock_controller/initialize()
/obj/machinery/embedded_controller/radio/airlock_controller/return_text()
/obj/machinery/embedded_controller/radio/airlock_controller/update_icon()
/obj/machinery/embedded_controller/radio/initialize()
/obj/machinery/embedded_controller/radio/post_signal(datum/signal/signal)
/obj/machinery/embedded_controller/radio/set_frequency(new_frequency)
/obj/machinery/embedded_controller/radio/simple_vent_controller
/obj/machinery/embedded_controller/radio/simple_vent_controller/initialize()
/obj/machinery/embedded_controller/radio/simple_vent_controller/return_text()
/obj/machinery/embedded_controller/radio/simple_vent_controller/update_icon()
/obj/machinery/embedded_controller/receive_signal(datum/signal/signal, receive_method, receive_param)
/obj/machinery/embedded_controller/return_text()
/obj/machinery/embedded_controller/update_icon()
/obj/machinery/emp_act(severity)
/obj/machinery/exchange_parts(mob/user, obj/item/weapon/storage/part_replacer/W)
/obj/machinery/field
/obj/machinery/field/CanPass(mob/mover as mob, turf/target, height=0)
/obj/machinery/field/CanPass(obj/mover as obj, turf/target, height=0)
/obj/machinery/field/bump(atom/movable/AM as mob|obj)
/obj/machinery/field/containment
/obj/machinery/field/containment/Crossed(mob/mover as mob)
/obj/machinery/field/containment/Crossed(obj/mover as obj)
/obj/machinery/field/containment/Destroy()
/obj/machinery/field/containment/Move()
/obj/machinery/field/containment/attack_hand(mob/user as mob)
/obj/machinery/field/containment/blob_act()
/obj/machinery/field/containment/ex_act(severity, target)
/obj/machinery/field/containment/set_master(var/master1,var/master2)
/obj/machinery/field/containment/shock(mob/living/user as mob)
/obj/machinery/field/generator
/obj/machinery/field/generator/Destroy()
/obj/machinery/field/generator/New()
/obj/machinery/field/generator/attack_hand(mob/user as mob)
/obj/machinery/field/generator/attackby(obj/item/W, mob/user, params)
/obj/machinery/field/generator/blob_act()
/obj/machinery/field/generator/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/field/generator/bump(atom/movable/AM as mob|obj)
/obj/machinery/field/generator/calc_power()
/obj/machinery/field/generator/cleanup()
/obj/machinery/field/generator/draw_power(var/draw = 0, var/failsafe = 0, var/obj/machinery/field/generator/G = null, var/obj/machinery/field/generator/last = null)
/obj/machinery/field/generator/emp_act()
/obj/machinery/field/generator/process()
/obj/machinery/field/generator/setup_field(var/NSEW)
/obj/machinery/field/generator/shock(mob/living/user as mob)
/obj/machinery/field/generator/start_fields()
/obj/machinery/field/generator/turn_off()
/obj/machinery/field/generator/turn_on()
/obj/machinery/field/generator/update_icon()
/obj/machinery/field/shock(mob/living/user as mob)
/obj/machinery/firealarm
/obj/machinery/firealarm/New(loc, dir, building)
/obj/machinery/firealarm/Topic(href, href_list)
/obj/machinery/firealarm/alarm()
/obj/machinery/firealarm/attack_ai(mob/user as mob)
/obj/machinery/firealarm/attack_hand(mob/user as mob)
/obj/machinery/firealarm/attack_paw(mob/user as mob)
/obj/machinery/firealarm/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/machinery/firealarm/bullet_act(BLAH)
/obj/machinery/firealarm/emag_act(mob/user as mob)
/obj/machinery/firealarm/emp_act(severity)
/obj/machinery/firealarm/partyalarm
/obj/machinery/firealarm/partyalarm/alarm()
/obj/machinery/firealarm/partyalarm/attack_hand(mob/user as mob)
/obj/machinery/firealarm/partyalarm/reset()
/obj/machinery/firealarm/power_change()
/obj/machinery/firealarm/process()
/obj/machinery/firealarm/reset()
/obj/machinery/firealarm/temperature_expose(datum/gas_mixture/air, temperature, volume)
/obj/machinery/firealarm/update_icon()
/obj/machinery/flasher
/obj/machinery/flasher/New()
/obj/machinery/flasher/attack_ai()
/obj/machinery/flasher/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/flasher/emp_act(severity)
/obj/machinery/flasher/flash()
/obj/machinery/flasher/portable
/obj/machinery/flasher/portable/HasProximity(atom/movable/AM)
/obj/machinery/flasher/portable/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/flasher/portable/flash()
/obj/machinery/flasher/power_change()
/obj/machinery/flasher_button
/obj/machinery/flasher_button/attack_ai(mob/user)
/obj/machinery/flasher_button/attack_hand(mob/user)
/obj/machinery/flasher_button/attack_paw(mob/user)
/obj/machinery/flasher_button/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/food_cart
/obj/machinery/food_cart/New()
/obj/machinery/food_cart/Topic(href, href_list)
/obj/machinery/food_cart/attack_hand(mob/user as mob)
/obj/machinery/food_cart/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/food_cart/interact(mob/user as mob)
/obj/machinery/food_cart/isFull()
/obj/machinery/gateway
/obj/machinery/gateway/centeraway
/obj/machinery/gateway/centeraway/Bumped(atom/movable/M as mob|obj)
/obj/machinery/gateway/centeraway/attack_ghost(mob/user as mob)
/obj/machinery/gateway/centeraway/attack_hand(mob/user as mob)
/obj/machinery/gateway/centeraway/attackby(obj/item/device/W as obj, mob/user as mob, params)
/obj/machinery/gateway/centeraway/detect()
/obj/machinery/gateway/centeraway/initialize()
/obj/machinery/gateway/centeraway/toggleoff()
/obj/machinery/gateway/centeraway/toggleon(mob/user as mob)
/obj/machinery/gateway/centeraway/update_icon()
/obj/machinery/gateway/centerstation
/obj/machinery/gateway/centerstation/Bumped(atom/movable/M as mob|obj)
/obj/machinery/gateway/centerstation/attack_ghost(mob/user as mob)
/obj/machinery/gateway/centerstation/attack_hand(mob/user as mob)
/obj/machinery/gateway/centerstation/attackby(obj/item/device/W as obj, mob/user as mob, params)
/obj/machinery/gateway/centerstation/detect()
/obj/machinery/gateway/centerstation/initialize()
/obj/machinery/gateway/centerstation/process()
/obj/machinery/gateway/centerstation/toggleoff()
/obj/machinery/gateway/centerstation/toggleon(mob/user as mob)
/obj/machinery/gateway/centerstation/update_icon()
/obj/machinery/gateway/initialize()
/obj/machinery/gateway/update_icon()
/obj/machinery/gibber
/obj/machinery/gibber/New()
/obj/machinery/gibber/RefreshParts()
/obj/machinery/gibber/attack_hand(mob/user as mob)
/obj/machinery/gibber/attack_paw(mob/user as mob)
/obj/machinery/gibber/attackby(obj/item/P as obj, mob/user as mob, params)
/obj/machinery/gibber/autogibber
/obj/machinery/gibber/autogibber/Bumped(var/atom/A)
/obj/machinery/gibber/autogibber/New()
/obj/machinery/gibber/container_resist()
/obj/machinery/gibber/go_out()
/obj/machinery/gibber/startgibbing(mob/user as mob)
/obj/machinery/gibber/update_icon()
/obj/machinery/gibber/verb/eject()
/obj/machinery/gravity_generator
/obj/machinery/gravity_generator/Move()
/obj/machinery/gravity_generator/ex_act(severity, target)
/obj/machinery/gravity_generator/get_status()
/obj/machinery/gravity_generator/main
/obj/machinery/gravity_generator/main/Destroy()
/obj/machinery/gravity_generator/main/Topic(href, href_list)
/obj/machinery/gravity_generator/main/attack_hand(mob/user as mob)
/obj/machinery/gravity_generator/main/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/machinery/gravity_generator/main/connected_parts()
/obj/machinery/gravity_generator/main/get_status()
/obj/machinery/gravity_generator/main/gravity_in_level()
/obj/machinery/gravity_generator/main/interact(mob/user as mob)
/obj/machinery/gravity_generator/main/power_change()
/obj/machinery/gravity_generator/main/process()
/obj/machinery/gravity_generator/main/pulse_radiation()
/obj/machinery/gravity_generator/main/set_broken()
/obj/machinery/gravity_generator/main/set_fix()
/obj/machinery/gravity_generator/main/set_power()
/obj/machinery/gravity_generator/main/set_state(var/new_state)
/obj/machinery/gravity_generator/main/setup_parts()
/obj/machinery/gravity_generator/main/shake_everyone()
/obj/machinery/gravity_generator/main/station/admin/New()
/obj/machinery/gravity_generator/main/station/initialize()
/obj/machinery/gravity_generator/main/update_icon()
/obj/machinery/gravity_generator/main/update_list()
/obj/machinery/gravity_generator/part
/obj/machinery/gravity_generator/part/Destroy()
/obj/machinery/gravity_generator/part/attack_hand(mob/user as mob)
/obj/machinery/gravity_generator/part/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/machinery/gravity_generator/part/get_status()
/obj/machinery/gravity_generator/part/set_broken()
/obj/machinery/gravity_generator/set_broken()
/obj/machinery/gravity_generator/set_fix()
/obj/machinery/gravity_generator/update_icon()
/obj/machinery/gun_turret
/obj/machinery/gun_turret/New()
/obj/machinery/gun_turret/attack_ai(mob/user)
/obj/machinery/gun_turret/attack_alien(mob/living/user as mob)
/obj/machinery/gun_turret/attack_hand(mob/user)
/obj/machinery/gun_turret/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/gun_turret/die()
/obj/machinery/gun_turret/emp_act()
/obj/machinery/gun_turret/ex_act(severity, target)
/obj/machinery/gun_turret/fire(atom/target)
/obj/machinery/gun_turret/get_target()
/obj/machinery/gun_turret/process()
/obj/machinery/gun_turret/take_damage(damage)
/obj/machinery/gun_turret/update_icon()
/obj/machinery/gun_turret/validate_target(atom/target)
/obj/machinery/hologram
/obj/machinery/hologram/blob_act()
/obj/machinery/hologram/ex_act(severity, target)
/obj/machinery/hologram/holopad
/obj/machinery/hologram/holopad/Destroy()
/obj/machinery/hologram/holopad/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/obj/machinery/hologram/holopad/New()
/obj/machinery/hologram/holopad/RefreshParts()
/obj/machinery/hologram/holopad/Topic(href, href_list)
/obj/machinery/hologram/holopad/activate_holo(mob/living/silicon/ai/user)
/obj/machinery/hologram/holopad/attack_ai(mob/living/silicon/ai/user)
/obj/machinery/hologram/holopad/attack_hand(var/mob/living/carbon/human/user)
/obj/machinery/hologram/holopad/attackby(obj/item/P as obj, mob/user as mob, params)
/obj/machinery/hologram/holopad/clear_holo(mob/living/silicon/ai/user)
/obj/machinery/hologram/holopad/create_holo(mob/living/silicon/ai/A, turf/T = loc)
/obj/machinery/hologram/holopad/move_hologram(mob/living/silicon/ai/user)
/obj/machinery/hologram/holopad/process()
/obj/machinery/hologram/power_change()
/obj/machinery/hologram/projector
/obj/machinery/hydroponics
/obj/machinery/hydroponics/FindConnected()
/obj/machinery/hydroponics/UpdateDescription()
/obj/machinery/hydroponics/adjustHealth(var/adjustamt)
/obj/machinery/hydroponics/adjustNutri(var/adjustamt)
/obj/machinery/hydroponics/adjustPests(var/adjustamt)
/obj/machinery/hydroponics/adjustSEnd(var/adjustamt)
/obj/machinery/hydroponics/adjustSLife(var/adjustamt)
/obj/machinery/hydroponics/adjustSPot(var/adjustamt)
/obj/machinery/hydroponics/adjustSProduct(var/adjustamt)
/obj/machinery/hydroponics/adjustSYield(var/adjustamt)
/obj/machinery/hydroponics/adjustToxic(var/adjustamt)
/obj/machinery/hydroponics/adjustWater(var/adjustamt)
/obj/machinery/hydroponics/adjustWeeds(var/adjustamt)
/obj/machinery/hydroponics/applyChemicals(var/datum/reagents/S)
/obj/machinery/hydroponics/attack_hand(mob/user as mob)
/obj/machinery/hydroponics/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/hydroponics/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/hydroponics/constructable
/obj/machinery/hydroponics/constructable/New()
/obj/machinery/hydroponics/constructable/RefreshParts()
/obj/machinery/hydroponics/constructable/attackby(obj/item/I, mob/user, params)
/obj/machinery/hydroponics/hardmutate()
/obj/machinery/hydroponics/mutate(var/lifemut = 2, var/endmut = 5, var/productmut = 1, var/yieldmut = 2, var/potmut = 25)
/obj/machinery/hydroponics/mutatepest()
/obj/machinery/hydroponics/mutatespecie()
/obj/machinery/hydroponics/mutateweed()
/obj/machinery/hydroponics/nutrimentMutation()
/obj/machinery/hydroponics/plantdies()
/obj/machinery/hydroponics/process()
/obj/machinery/hydroponics/soil
/obj/machinery/hydroponics/soil/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/hydroponics/soil/update_icon()
/obj/machinery/hydroponics/update_icon()
/obj/machinery/hydroponics/update_tray(mob/user = usr)
/obj/machinery/hydroponics/weedinvasion()
/obj/machinery/icecream_vat
/obj/machinery/icecream_vat/New()
/obj/machinery/icecream_vat/Topic(href, href_list)
/obj/machinery/icecream_vat/attack_hand(mob/user as mob)
/obj/machinery/icecream_vat/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/icecream_vat/get_flavour_name(var/flavour_type)
/obj/machinery/icecream_vat/get_ingredient_list(var/type)
/obj/machinery/icecream_vat/interact(mob/user as mob)
/obj/machinery/icecream_vat/make(var/mob/user, var/make_type, var/amount)
/obj/machinery/igniter
/obj/machinery/igniter/New()
/obj/machinery/igniter/attack_ai(mob/user as mob)
/obj/machinery/igniter/attack_hand(mob/user as mob)
/obj/machinery/igniter/attack_paw(mob/user as mob)
/obj/machinery/igniter/power_change()
/obj/machinery/igniter/process()
/obj/machinery/ignition_switch
/obj/machinery/ignition_switch/attack_ai(mob/user as mob)
/obj/machinery/ignition_switch/attack_hand(mob/user as mob)
/obj/machinery/ignition_switch/attack_paw(mob/user as mob)
/obj/machinery/ignition_switch/attackby(obj/item/weapon/W, mob/user as mob, params)
/obj/machinery/implantchair
/obj/machinery/implantchair/New()
/obj/machinery/implantchair/Topic(href, href_list)
/obj/machinery/implantchair/add_implants()
/obj/machinery/implantchair/attack_hand(mob/user as mob)
/obj/machinery/implantchair/attackby(var/obj/item/weapon/G as obj, var/mob/user as mob, params)
/obj/machinery/implantchair/go_out()
/obj/machinery/implantchair/go_out(var/mob/M)
/obj/machinery/implantchair/implant(var/mob/M)
/obj/machinery/implantchair/put_mob(mob/living/carbon/M as mob)
/obj/machinery/implantchair/verb/get_out()
/obj/machinery/implantchair/verb/move_inside()
/obj/machinery/is_operational()
/obj/machinery/iv_drip
/obj/machinery/iv_drip/MouseDrop(mob/living/target)
/obj/machinery/iv_drip/New()
/obj/machinery/iv_drip/attack_hand(mob/user)
/obj/machinery/iv_drip/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/iv_drip/examine()
/obj/machinery/iv_drip/process()
/obj/machinery/iv_drip/update_icon()
/obj/machinery/iv_drip/verb/eject_beaker(mob/user)
/obj/machinery/iv_drip/verb/toggle_mode()
/obj/machinery/juicer
/obj/machinery/juicer/New()
/obj/machinery/juicer/Topic(href, href_list)
/obj/machinery/juicer/attack_ai(mob/user as mob)
/obj/machinery/juicer/attack_hand(mob/user as mob)
/obj/machinery/juicer/attack_paw(mob/user as mob)
/obj/machinery/juicer/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/juicer/get_juice_amount(var/obj/item/weapon/reagent_containers/food/snacks/grown/O)
/obj/machinery/juicer/get_juice_id(var/obj/item/weapon/reagent_containers/food/snacks/grown/O)
/obj/machinery/juicer/interact(mob/user as mob)
/obj/machinery/juicer/juice()
/obj/machinery/juicer/update_icon()
/obj/machinery/juicer/verb/detach()
/obj/machinery/keycard_auth
/obj/machinery/keycard_auth/Topic(href, href_list)
/obj/machinery/keycard_auth/attack_ai(mob/user as mob)
/obj/machinery/keycard_auth/attack_hand(mob/user as mob)
/obj/machinery/keycard_auth/attack_paw(mob/user as mob)
/obj/machinery/keycard_auth/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/keycard_auth/broadcast_request()
/obj/machinery/keycard_auth/power_change()
/obj/machinery/keycard_auth/proc/trigger_event()
/obj/machinery/keycard_auth/receive_request(var/obj/machinery/keycard_auth/source)
/obj/machinery/keycard_auth/reset()
/obj/machinery/keycard_auth/trigger_event()
/obj/machinery/libraryscanner
/obj/machinery/libraryscanner/Topic(href, href_list)
/obj/machinery/libraryscanner/attack_hand(var/mob/user as mob)
/obj/machinery/libraryscanner/attackby(var/obj/O as obj, var/mob/user as mob, params)
/obj/machinery/light
/obj/machinery/light/Destroy()
/obj/machinery/light/Move()
/obj/machinery/light/New()
/obj/machinery/light/attack_ai(mob/user)
/obj/machinery/light/attack_alien(mob/living/carbon/alien/humanoid/user)
/obj/machinery/light/attack_animal(mob/living/simple_animal/M)
/obj/machinery/light/attack_hand(mob/living/carbon/human/user)
/obj/machinery/light/attack_tk(mob/user)
/obj/machinery/light/attackby(obj/item/W, mob/living/user, params)
/obj/machinery/light/blob_act()
/obj/machinery/light/broken(var/skip_sound_and_sparks = 0)
/obj/machinery/light/built/New()
/obj/machinery/light/ex_act(severity, target)
/obj/machinery/light/examine(mob/user)
/obj/machinery/light/explode()
/obj/machinery/light/fix()
/obj/machinery/light/flicker(var/amount = rand(10, 20))
/obj/machinery/light/get_light_range(radius)
/obj/machinery/light/has_power()
/obj/machinery/light/power_change()
/obj/machinery/light/seton(var/s)
/obj/machinery/light/small
/obj/machinery/light/small/built/New()
/obj/machinery/light/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/machinery/light/update(var/trigger = 1)
/obj/machinery/light/update_icon()
/obj/machinery/light_construct
/obj/machinery/light_construct/New()
/obj/machinery/light_construct/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/light_construct/examine(mob/user)
/obj/machinery/light_construct/small
/obj/machinery/light_switch
/obj/machinery/light_switch/New()
/obj/machinery/light_switch/attack_hand(mob/user)
/obj/machinery/light_switch/attack_paw(mob/user)
/obj/machinery/light_switch/emp_act(severity)
/obj/machinery/light_switch/examine(mob/user)
/obj/machinery/light_switch/power_change()
/obj/machinery/light_switch/updateicon()
/obj/machinery/locate_machinery()
/obj/machinery/magnetic_controller
/obj/machinery/magnetic_controller/Destroy()
/obj/machinery/magnetic_controller/MagnetMove()
/obj/machinery/magnetic_controller/New()
/obj/machinery/magnetic_controller/Topic(href, href_list)
/obj/machinery/magnetic_controller/attack_ai(mob/user as mob)
/obj/machinery/magnetic_controller/attack_hand(mob/user as mob)
/obj/machinery/magnetic_controller/filter_path()
/obj/machinery/magnetic_controller/process()
/obj/machinery/magnetic_module
/obj/machinery/magnetic_module/Cmd(var/command, var/modifier)
/obj/machinery/magnetic_module/Destroy()
/obj/machinery/magnetic_module/New()
/obj/machinery/magnetic_module/hide(var/intact)
/obj/machinery/magnetic_module/magnetic_process()
/obj/machinery/magnetic_module/process()
/obj/machinery/magnetic_module/receive_signal(datum/signal/signal)
/obj/machinery/magnetic_module/updateicon()
/obj/machinery/mass_driver
/obj/machinery/mass_driver/drive(amount)
/obj/machinery/mass_driver/emp_act(severity)
/obj/machinery/mech_bay_recharge_port
/obj/machinery/mech_bay_recharge_port/New()
/obj/machinery/mech_bay_recharge_port/RefreshParts()
/obj/machinery/mech_bay_recharge_port/attackby(obj/item/I, mob/user, params)
/obj/machinery/mech_bay_recharge_port/process()
/obj/machinery/mecha_part_fabricator
/obj/machinery/mecha_part_fabricator/New()
/obj/machinery/mecha_part_fabricator/RefreshParts()
/obj/machinery/mecha_part_fabricator/Topic(href, href_list)
/obj/machinery/mecha_part_fabricator/add_part_set_to_queue(set_name)
/obj/machinery/mecha_part_fabricator/add_to_queue(D)
/obj/machinery/mecha_part_fabricator/attack_hand(mob/user)
/obj/machinery/mecha_part_fabricator/attackby(obj/W as obj, mob/user as mob, params)
/obj/machinery/mecha_part_fabricator/build_part(datum/design/D)
/obj/machinery/mecha_part_fabricator/check_access(obj/item/weapon/card/id/I)
/obj/machinery/mecha_part_fabricator/check_resources(datum/design/D)
/obj/machinery/mecha_part_fabricator/emag()
/obj/machinery/mecha_part_fabricator/emag_act()
/obj/machinery/mecha_part_fabricator/get_construction_time_w_coeff(datum/design/D, roundto = 1)
/obj/machinery/mecha_part_fabricator/get_resource_cost_w_coeff(datum/design/D, resource, roundto = 1)
/obj/machinery/mecha_part_fabricator/interact(mob/user as mob)
/obj/machinery/mecha_part_fabricator/list_queue()
/obj/machinery/mecha_part_fabricator/material2name(var/ID)
/obj/machinery/mecha_part_fabricator/output_available_resources()
/obj/machinery/mecha_part_fabricator/output_part_cost(datum/design/D)
/obj/machinery/mecha_part_fabricator/output_part_info(datum/design/D)
/obj/machinery/mecha_part_fabricator/output_parts_list(set_name)
/obj/machinery/mecha_part_fabricator/process_queue()
/obj/machinery/mecha_part_fabricator/remove_from_queue(index)
/obj/machinery/mecha_part_fabricator/remove_material(var/mat_string, var/amount)
/obj/machinery/mecha_part_fabricator/remove_resources(datum/design/D)
/obj/machinery/mecha_part_fabricator/sync()
/obj/machinery/mecha_part_fabricator/update_queue_on_page()
/obj/machinery/mecha_part_fabricator/update_tech()
/obj/machinery/message_server
/obj/machinery/message_server/Destroy()
/obj/machinery/message_server/GenerateKey()
/obj/machinery/message_server/New()
/obj/machinery/message_server/attack_hand(user as mob)
/obj/machinery/message_server/process()
/obj/machinery/message_server/send_chat_message(var/sender = "", var/channel = "", var/message = "")
/obj/machinery/message_server/send_pda_message(var/recipient = "",var/sender = "",var/message = "",var/photo=null)
/obj/machinery/message_server/send_rc_message(var/recipient = "",var/sender = "",var/message = "",var/stamp = "", var/id_auth = "", var/priority = 1)
/obj/machinery/message_server/update_icon()
/obj/machinery/meter
/obj/machinery/meter/Destroy()
/obj/machinery/meter/New()
/obj/machinery/meter/attack_ai(var/mob/user as mob)
/obj/machinery/meter/attack_hand(var/mob/user as mob)
/obj/machinery/meter/attack_paw(var/mob/user as mob)
/obj/machinery/meter/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob, params)
/obj/machinery/meter/examine(mob/user)
/obj/machinery/meter/initialize()
/obj/machinery/meter/process_atmos()
/obj/machinery/meter/status()
/obj/machinery/meter/turf/New()
/obj/machinery/meter/turf/initialize()
/obj/machinery/microwave
/obj/machinery/microwave/New()
/obj/machinery/microwave/RefreshParts()
/obj/machinery/microwave/Topic(href, href_list)
/obj/machinery/microwave/abort()
/obj/machinery/microwave/attack_ai(mob/user as mob)
/obj/machinery/microwave/attack_hand(mob/user as mob)
/obj/machinery/microwave/attack_paw(mob/user as mob)
/obj/machinery/microwave/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/microwave/broke()
/obj/machinery/microwave/cook()
/obj/machinery/microwave/dispose()
/obj/machinery/microwave/has_extra_item()
/obj/machinery/microwave/interact(mob/user as mob)
/obj/machinery/microwave/microwaving(var/seconds as num)
/obj/machinery/microwave/muck_finish()
/obj/machinery/microwave/muck_start()
/obj/machinery/microwave/start()
/obj/machinery/microwave/stop()
/obj/machinery/mineral
/obj/machinery/mineral/equipment_vendor
/obj/machinery/mineral/equipment_vendor/New()
/obj/machinery/mineral/equipment_vendor/RedeemVoucher(obj/item/weapon/mining_voucher/voucher, mob/redeemer)
/obj/machinery/mineral/equipment_vendor/Topic(href, href_list)
/obj/machinery/mineral/equipment_vendor/attack_hand(user as mob)
/obj/machinery/mineral/equipment_vendor/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/machinery/mineral/equipment_vendor/ex_act(severity, target)
/obj/machinery/mineral/equipment_vendor/interact(mob/user)
/obj/machinery/mineral/input
/obj/machinery/mineral/input/New()
/obj/machinery/mineral/labor_claim_console
/obj/machinery/mineral/labor_claim_console/New()
/obj/machinery/mineral/labor_claim_console/Topic(href, href_list)
/obj/machinery/mineral/labor_claim_console/attack_hand(user as mob)
/obj/machinery/mineral/labor_claim_console/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/machinery/mineral/labor_claim_console/check_auth()
/obj/machinery/mineral/labor_claim_console/emag_act(mob/user as mob)
/obj/machinery/mineral/labor_points_checker
/obj/machinery/mineral/labor_points_checker/attack_hand(mob/user)
/obj/machinery/mineral/labor_points_checker/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/machinery/mineral/mint
/obj/machinery/mineral/mint/Topic(href, href_list)
/obj/machinery/mineral/mint/attack_hand(user as mob)
/obj/machinery/mineral/mint/create_coins(var/P)
/obj/machinery/mineral/mint/process()
/obj/machinery/mineral/ore_redemption
/obj/machinery/mineral/ore_redemption/New()
/obj/machinery/mineral/ore_redemption/RefreshParts()
/obj/machinery/mineral/ore_redemption/SmeltMineral(var/obj/item/weapon/ore/O)
/obj/machinery/mineral/ore_redemption/Topic(href, href_list)
/obj/machinery/mineral/ore_redemption/attack_hand(user as mob)
/obj/machinery/mineral/ore_redemption/attackby(var/obj/item/weapon/W, var/mob/user, params)
/obj/machinery/mineral/ore_redemption/empty_content()
/obj/machinery/mineral/ore_redemption/ex_act(severity, target)
/obj/machinery/mineral/ore_redemption/get_ore_values()
/obj/machinery/mineral/ore_redemption/interact(mob/user)
/obj/machinery/mineral/ore_redemption/process()
/obj/machinery/mineral/ore_redemption/process_sheet(obj/item/weapon/ore/O)
/obj/machinery/mineral/output
/obj/machinery/mineral/output/New()
/obj/machinery/mineral/processing_unit
/obj/machinery/mineral/processing_unit/generate_mineral(var/P)
/obj/machinery/mineral/processing_unit/process()
/obj/machinery/mineral/processing_unit_console
/obj/machinery/mineral/processing_unit_console/New()
/obj/machinery/mineral/processing_unit_console/Topic(href, href_list)
/obj/machinery/mineral/processing_unit_console/attack_hand(user as mob)
/obj/machinery/mineral/stacking_machine
/obj/machinery/mineral/stacking_machine/laborstacker
/obj/machinery/mineral/stacking_machine/laborstacker/get_ore_values()
/obj/machinery/mineral/stacking_machine/laborstacker/process_sheet(obj/item/stack/sheet/inp)
/obj/machinery/mineral/stacking_machine/process()
/obj/machinery/mineral/stacking_machine/process_sheet(obj/item/stack/sheet/inp)
/obj/machinery/mineral/stacking_unit_console
/obj/machinery/mineral/stacking_unit_console/New()
/obj/machinery/mineral/stacking_unit_console/Topic(href, href_list)
/obj/machinery/mineral/stacking_unit_console/attack_hand(user as mob)
/obj/machinery/mineral/unload_mineral(var/atom/movable/S)
/obj/machinery/mineral/unloading_machine
/obj/machinery/mineral/unloading_machine/process()
/obj/machinery/monkey_recycler
/obj/machinery/monkey_recycler/New()
/obj/machinery/monkey_recycler/RefreshParts()
/obj/machinery/monkey_recycler/attack_hand(var/mob/user as mob)
/obj/machinery/monkey_recycler/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/navbeacon
/obj/machinery/navbeacon/Destroy()
/obj/machinery/navbeacon/New()
/obj/machinery/navbeacon/Topic(href, href_list)
/obj/machinery/navbeacon/attack_ai(var/mob/user)
/obj/machinery/navbeacon/attack_hand(var/mob/user)
/obj/machinery/navbeacon/attack_paw()
/obj/machinery/navbeacon/attackby(var/obj/item/I, var/mob/user, params)
/obj/machinery/navbeacon/hide(var/intact)
/obj/machinery/navbeacon/interact(var/mob/user, var/ai = 0)
/obj/machinery/navbeacon/set_codes()
/obj/machinery/navbeacon/updateicon()
/obj/machinery/newscaster
/obj/machinery/newscaster/AttachPhoto(mob/user)
/obj/machinery/newscaster/Destroy()
/obj/machinery/newscaster/New()
/obj/machinery/newscaster/Topic(href, href_list)
/obj/machinery/newscaster/attack_ai(mob/user)
/obj/machinery/newscaster/attack_hand(mob/user)
/obj/machinery/newscaster/attack_paw(mob/user)
/obj/machinery/newscaster/attackby(obj/item/I, mob/living/user, params)
/obj/machinery/newscaster/ex_act(severity, target)
/obj/machinery/newscaster/newsAlert(channel)
/obj/machinery/newscaster/power_change()
/obj/machinery/newscaster/print_paper()
/obj/machinery/newscaster/scan_user(mob/living/user)
/obj/machinery/newscaster/security_unit
/obj/machinery/newscaster/update_icon()
/obj/machinery/nuclearbomb
/obj/machinery/nuclearbomb/New()
/obj/machinery/nuclearbomb/Topic(href, href_list)
/obj/machinery/nuclearbomb/attack_ai(mob/user as mob)
/obj/machinery/nuclearbomb/attack_hand(mob/user as mob)
/obj/machinery/nuclearbomb/attack_paw(mob/user as mob)
/obj/machinery/nuclearbomb/attackby(obj/item/weapon/I as obj, mob/user as mob, params)
/obj/machinery/nuclearbomb/blob_act()
/obj/machinery/nuclearbomb/ex_act(severity, target)
/obj/machinery/nuclearbomb/explode()
/obj/machinery/nuclearbomb/process()
/obj/machinery/nuclearbomb/selfdestruct
/obj/machinery/nuclearbomb/selfdestruct/SetTurfs()
/obj/machinery/nuclearbomb/selfdestruct/Topic()
/obj/machinery/open_machine()
/obj/machinery/particle_accelerator
/obj/machinery/particle_accelerator/attackby(obj/item/W, mob/user, params)
/obj/machinery/particle_accelerator/blob_act()
/obj/machinery/particle_accelerator/control_box
/obj/machinery/particle_accelerator/control_box/Destroy()
/obj/machinery/particle_accelerator/control_box/New()
/obj/machinery/particle_accelerator/control_box/Topic(href, href_list)
/obj/machinery/particle_accelerator/control_box/add_strength(var/s)
/obj/machinery/particle_accelerator/control_box/attack_hand(mob/user as mob)
/obj/machinery/particle_accelerator/control_box/check_part(var/turf/T, var/type)
/obj/machinery/particle_accelerator/control_box/interact(mob/user)
/obj/machinery/particle_accelerator/control_box/part_scan()
/obj/machinery/particle_accelerator/control_box/power_change()
/obj/machinery/particle_accelerator/control_box/process()
/obj/machinery/particle_accelerator/control_box/remove_strength(var/s)
/obj/machinery/particle_accelerator/control_box/strength_change()
/obj/machinery/particle_accelerator/control_box/toggle_power()
/obj/machinery/particle_accelerator/control_box/update_icon()
/obj/machinery/particle_accelerator/control_box/update_state()
/obj/machinery/particle_accelerator/examine(mob/user)
/obj/machinery/particle_accelerator/process_tool_hit(var/obj/O, var/mob/user)
/obj/machinery/particle_accelerator/update_icon()
/obj/machinery/particle_accelerator/update_state()
/obj/machinery/particle_accelerator/verb/rotate()
/obj/machinery/particle_accelerator/verb/rotateccw()
/obj/machinery/pdapainter
/obj/machinery/pdapainter/New()
/obj/machinery/pdapainter/attack_hand(mob/user as mob)
/obj/machinery/pdapainter/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/pdapainter/power_change()
/obj/machinery/pdapainter/update_icon()
/obj/machinery/pdapainter/verb/ejectpda()
/obj/machinery/photocopier
/obj/machinery/photocopier/MouseDrop_T(mob/target, mob/user)
/obj/machinery/photocopier/Topic(href, href_list)
/obj/machinery/photocopier/attack_ai(mob/user)
/obj/machinery/photocopier/attack_hand(mob/user)
/obj/machinery/photocopier/attack_paw(mob/user)
/obj/machinery/photocopier/attackby(obj/item/O, mob/user, params)
/obj/machinery/photocopier/blob_act()
/obj/machinery/photocopier/check_ass()
/obj/machinery/photocopier/copier_blocked()
/obj/machinery/photocopier/copier_empty()
/obj/machinery/photocopier/ex_act(severity, target)
/obj/machinery/pipedispenser
/obj/machinery/pipedispenser/Topic(href, href_list)
/obj/machinery/pipedispenser/attack_hand(user as mob)
/obj/machinery/pipedispenser/attack_paw(user as mob)
/obj/machinery/pipedispenser/attackby(var/obj/item/W as obj, var/mob/user as mob, params)
/obj/machinery/pipedispenser/disposal
/obj/machinery/pipedispenser/disposal/MouseDrop_T(var/obj/structure/pipe as obj, mob/usr as mob)
/obj/machinery/pipedispenser/disposal/Topic(href, href_list)
/obj/machinery/pipedispenser/disposal/attack_hand(user as mob)
/obj/machinery/pipedispenser/disposal/transit_tube
/obj/machinery/pipedispenser/disposal/transit_tube/Topic(href, href_list)
/obj/machinery/pipedispenser/disposal/transit_tube/attack_hand(user as mob)
/obj/machinery/porta_turret
/obj/machinery/porta_turret/Destroy()
/obj/machinery/porta_turret/New()
/obj/machinery/porta_turret/Topic(href, href_list)
/obj/machinery/porta_turret/assess_perp(mob/living/carbon/human/perp)
/obj/machinery/porta_turret/attack_ai(mob/user)
/obj/machinery/porta_turret/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/obj/machinery/porta_turret/attack_animal(mob/living/simple_animal/M as mob)
/obj/machinery/porta_turret/attack_hand(mob/user)
/obj/machinery/porta_turret/attackby(obj/item/I, mob/user, params)
/obj/machinery/porta_turret/bullet_act(obj/item/projectile/Proj)
/obj/machinery/porta_turret/die()
/obj/machinery/porta_turret/emag_act(user as mob)
/obj/machinery/porta_turret/emp_act(severity)
/obj/machinery/porta_turret/ex_act(severity, target)
/obj/machinery/porta_turret/popDown()
/obj/machinery/porta_turret/popUp()
/obj/machinery/porta_turret/power_change()
/obj/machinery/porta_turret/process()
/obj/machinery/porta_turret/setState(var/on, var/emagged)
/obj/machinery/porta_turret/setup()
/obj/machinery/porta_turret/shootAt(var/atom/movable/target)
/obj/machinery/porta_turret/stationary
/obj/machinery/porta_turret/stationary/New()
/obj/machinery/porta_turret/take_damage(damage)
/obj/machinery/porta_turret/target(var/atom/movable/target)
/obj/machinery/porta_turret/tryToShootAt(var/list/atom/movable/targets)
/obj/machinery/porta_turret_construct
/obj/machinery/porta_turret_construct/attack_ai()
/obj/machinery/porta_turret_construct/attack_hand(mob/user)
/obj/machinery/porta_turret_construct/attackby(obj/item/I, mob/user, params)
/obj/machinery/porta_turret_cover
/obj/machinery/porta_turret_cover/Topic(href, href_list)
/obj/machinery/porta_turret_cover/attack_ai(mob/user)
/obj/machinery/porta_turret_cover/attack_ai(mob/user)/onclose(user, "autosec")
/obj/machinery/porta_turret_cover/attack_hand(mob/user)
/obj/machinery/porta_turret_cover/attackby(obj/item/I, mob/user, params)
/obj/machinery/porta_turret_cover/emag_act(user as mob)
/obj/machinery/portable_atmospherics
/obj/machinery/portable_atmospherics/Destroy()
/obj/machinery/portable_atmospherics/New()
/obj/machinery/portable_atmospherics/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob, params)
/obj/machinery/portable_atmospherics/canister
/obj/machinery/portable_atmospherics/canister/Topic(href, href_list)
/obj/machinery/portable_atmospherics/canister/air
/obj/machinery/portable_atmospherics/canister/air/New()
/obj/machinery/portable_atmospherics/canister/attack_ai(var/mob/user as mob)
/obj/machinery/portable_atmospherics/canister/attack_hand(var/mob/user as mob)
/obj/machinery/portable_atmospherics/canister/attack_paw(var/mob/user as mob)
/obj/machinery/portable_atmospherics/canister/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob, params)
/obj/machinery/portable_atmospherics/canister/blob_act()
/obj/machinery/portable_atmospherics/canister/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/portable_atmospherics/canister/carbon_dioxide
/obj/machinery/portable_atmospherics/canister/carbon_dioxide/New()
/obj/machinery/portable_atmospherics/canister/check_change()
/obj/machinery/portable_atmospherics/canister/ex_act(severity, target)
/obj/machinery/portable_atmospherics/canister/healthcheck()
/obj/machinery/portable_atmospherics/canister/nitrogen
/obj/machinery/portable_atmospherics/canister/nitrogen/New()
/obj/machinery/portable_atmospherics/canister/oxygen
/obj/machinery/portable_atmospherics/canister/oxygen/New()
/obj/machinery/portable_atmospherics/canister/process()
/obj/machinery/portable_atmospherics/canister/process_atmos()
/obj/machinery/portable_atmospherics/canister/return_air()
/obj/machinery/portable_atmospherics/canister/return_pressure()
/obj/machinery/portable_atmospherics/canister/return_temperature()
/obj/machinery/portable_atmospherics/canister/sleeping_agent
/obj/machinery/portable_atmospherics/canister/sleeping_agent/New()
/obj/machinery/portable_atmospherics/canister/sleeping_agent/roomfiller/New()
/obj/machinery/portable_atmospherics/canister/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/machinery/portable_atmospherics/canister/toxins
/obj/machinery/portable_atmospherics/canister/toxins/New()
/obj/machinery/portable_atmospherics/canister/ui_interact(mob/user, ui_key = "main")
/obj/machinery/portable_atmospherics/canister/update_icon()
/obj/machinery/portable_atmospherics/connect(obj/machinery/atmospherics/unary/portables_connector/new_port)
/obj/machinery/portable_atmospherics/disconnect()
/obj/machinery/portable_atmospherics/portableConnectorReturnAir()
/obj/machinery/portable_atmospherics/process()
/obj/machinery/portable_atmospherics/process_atmos()
/obj/machinery/portable_atmospherics/pump
/obj/machinery/portable_atmospherics/pump/Topic(href, href_list)
/obj/machinery/portable_atmospherics/pump/attack_ai(var/mob/user as mob)
/obj/machinery/portable_atmospherics/pump/attack_hand(var/mob/user as mob)
/obj/machinery/portable_atmospherics/pump/attack_paw(var/mob/user as mob)
/obj/machinery/portable_atmospherics/pump/emp_act(severity)
/obj/machinery/portable_atmospherics/pump/process()
/obj/machinery/portable_atmospherics/pump/process_atmos()
/obj/machinery/portable_atmospherics/pump/return_air()
/obj/machinery/portable_atmospherics/pump/update_icon()
/obj/machinery/portable_atmospherics/scrubber
/obj/machinery/portable_atmospherics/scrubber/Topic(href, href_list)
/obj/machinery/portable_atmospherics/scrubber/attack_ai(var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/attack_hand(var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/attack_paw(var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/emp_act(severity)
/obj/machinery/portable_atmospherics/scrubber/huge
/obj/machinery/portable_atmospherics/scrubber/huge/New()
/obj/machinery/portable_atmospherics/scrubber/huge/attack_hand(var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/huge/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/huge/stationary
/obj/machinery/portable_atmospherics/scrubber/huge/stationary/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/huge/update_icon()
/obj/machinery/portable_atmospherics/scrubber/process_atmos()
/obj/machinery/portable_atmospherics/scrubber/return_air()
/obj/machinery/portable_atmospherics/scrubber/update_icon()
/obj/machinery/portable_atmospherics/update_icon()
/obj/machinery/power
/obj/machinery/power/Destroy()
/obj/machinery/power/add_avail(var/amount)
/obj/machinery/power/add_load(var/amount)
/obj/machinery/power/am_control_unit
/obj/machinery/power/am_control_unit/Destroy()
/obj/machinery/power/am_control_unit/New()
/obj/machinery/power/am_control_unit/Topic(href, href_list)
/obj/machinery/power/am_control_unit/add_shielding(var/obj/machinery/am_shielding/AMS, var/AMS_linking = 0)
/obj/machinery/power/am_control_unit/attack_hand(mob/user as mob)
/obj/machinery/power/am_control_unit/attackby(obj/item/W, mob/user, params)
/obj/machinery/power/am_control_unit/blob_act()
/obj/machinery/power/am_control_unit/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/power/am_control_unit/check_core_stability()
/obj/machinery/power/am_control_unit/check_shield_icons()
/obj/machinery/power/am_control_unit/check_stability()
/obj/machinery/power/am_control_unit/emp_act(severity)
/obj/machinery/power/am_control_unit/ex_act(severity, target)
/obj/machinery/power/am_control_unit/interact(mob/user)
/obj/machinery/power/am_control_unit/power_change()
/obj/machinery/power/am_control_unit/process()
/obj/machinery/power/am_control_unit/produce_power()
/obj/machinery/power/am_control_unit/remove_shielding(var/obj/machinery/am_shielding/AMS)
/obj/machinery/power/am_control_unit/toggle_power()
/obj/machinery/power/am_control_unit/update_icon()
/obj/machinery/power/apc
/obj/machinery/power/apc/AICtrlClick()
/obj/machinery/power/apc/BorgCtrlClick()
/obj/machinery/power/apc/Destroy()
/obj/machinery/power/apc/New(turf/loc, var/ndir, var/building=0)
/obj/machinery/power/apc/Topic(href, href_list)
/obj/machinery/power/apc/add_load(var/amount)
/obj/machinery/power/apc/attack_alien(mob/living/carbon/alien/humanoid/user)
/obj/machinery/power/apc/attack_hand(mob/user)
/obj/machinery/power/apc/attackby(obj/item/W, mob/living/user, params)
/obj/machinery/power/apc/autoset(var/val, var/on)
/obj/machinery/power/apc/avail()
/obj/machinery/power/apc/blob_act()
/obj/machinery/power/apc/can_terminal_dismantle()
/obj/machinery/power/apc/can_use(mob/user as mob, var/loud = 0)
/obj/machinery/power/apc/check_updates()
/obj/machinery/power/apc/connect_to_network()
/obj/machinery/power/apc/disconnect_terminal()
/obj/machinery/power/apc/emag_act(mob/user as mob)
/obj/machinery/power/apc/emp_act(severity)
/obj/machinery/power/apc/ex_act(severity, target)
/obj/machinery/power/apc/examine(mob/user)
/obj/machinery/power/apc/get_malf_status(mob/user)
/obj/machinery/power/apc/init()
/obj/machinery/power/apc/interact(mob/user)
/obj/machinery/power/apc/ion_act()
/obj/machinery/power/apc/isWireCut(var/wireIndex)
/obj/machinery/power/apc/make_terminal()
/obj/machinery/power/apc/malfoccupy(var/mob/living/silicon/ai/malf)
/obj/machinery/power/apc/malfvacate(var/forced)
/obj/machinery/power/apc/ninjadrain_act(var/obj/item/clothing/suit/space/space_ninja/S, var/mob/living/carbon/human/H, var/obj/item/clothing/gloves/space_ninja/G)
/obj/machinery/power/apc/overload_lighting()
/obj/machinery/power/apc/process()
/obj/machinery/power/apc/queue_icon_update()
/obj/machinery/power/apc/report()
/obj/machinery/power/apc/set_broken()
/obj/machinery/power/apc/setsubsystem(val)
/obj/machinery/power/apc/shock(mob/user, prb)
/obj/machinery/power/apc/surplus()
/obj/machinery/power/apc/toggle_breaker()
/obj/machinery/power/apc/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/power/apc/update()
/obj/machinery/power/apc/updateDialog()
/obj/machinery/power/apc/update_icon()
/obj/machinery/power/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/power/avail()
/obj/machinery/power/can_terminal_dismantle()
/obj/machinery/power/compressor
/obj/machinery/power/compressor/CanAtmosPass(var/turf/T)
/obj/machinery/power/compressor/New()
/obj/machinery/power/compressor/RefreshParts()
/obj/machinery/power/compressor/attackby(obj/item/I, mob/user, params)
/obj/machinery/power/compressor/locate_machinery()
/obj/machinery/power/compressor/process()
/obj/machinery/power/connect_to_network()
/obj/machinery/power/disconnect_from_network()
/obj/machinery/power/disconnect_terminal()
/obj/machinery/power/emitter
/obj/machinery/power/emitter/Destroy()
/obj/machinery/power/emitter/New()
/obj/machinery/power/emitter/RefreshParts()
/obj/machinery/power/emitter/attack_hand(mob/user as mob)
/obj/machinery/power/emitter/attackby(obj/item/W, mob/user, params)
/obj/machinery/power/emitter/emag_act(mob/user as mob)
/obj/machinery/power/emitter/emp_act(var/severity)
/obj/machinery/power/emitter/energycannon
/obj/machinery/power/emitter/initialize()
/obj/machinery/power/emitter/process()
/obj/machinery/power/emitter/update_icon()
/obj/machinery/power/emitter/verb/rotate()
/obj/machinery/power/generator
/obj/machinery/power/generator/Topic(href, href_list)
/obj/machinery/power/generator/attack_hand(mob/user)
/obj/machinery/power/generator/get_menu(var/include_link = 1)
/obj/machinery/power/generator/initialize()
/obj/machinery/power/generator/interact(mob/user)
/obj/machinery/power/generator/power_change()
/obj/machinery/power/generator/process()
/obj/machinery/power/generator/update_icon()
/obj/machinery/power/get_connections()
/obj/machinery/power/get_indirect_connections()
/obj/machinery/power/get_marked_connections()
/obj/machinery/power/port_gen
/obj/machinery/power/port_gen/DropFuel()
/obj/machinery/power/port_gen/HasFuel()
/obj/machinery/power/port_gen/UseFuel()
/obj/machinery/power/port_gen/attack_hand(mob/user as mob)
/obj/machinery/power/port_gen/examine(mob/user)
/obj/machinery/power/port_gen/handleInactive()
/obj/machinery/power/port_gen/pacman
/obj/machinery/power/port_gen/pacman/Destroy()
/obj/machinery/power/port_gen/pacman/DropFuel()
/obj/machinery/power/port_gen/pacman/HasFuel()
/obj/machinery/power/port_gen/pacman/New()
/obj/machinery/power/port_gen/pacman/RefreshParts()
/obj/machinery/power/port_gen/pacman/Topic(href, href_list)
/obj/machinery/power/port_gen/pacman/UseFuel()
/obj/machinery/power/port_gen/pacman/attack_ai(mob/user as mob)
/obj/machinery/power/port_gen/pacman/attack_hand(mob/user as mob)
/obj/machinery/power/port_gen/pacman/attack_paw(mob/user as mob)
/obj/machinery/power/port_gen/pacman/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/power/port_gen/pacman/emag_act(mob/user as mob)
/obj/machinery/power/port_gen/pacman/examine(mob/user)
/obj/machinery/power/port_gen/pacman/handleInactive()
/obj/machinery/power/port_gen/pacman/initialize()
/obj/machinery/power/port_gen/pacman/interact(mob/user)
/obj/machinery/power/port_gen/pacman/mrs
/obj/machinery/power/port_gen/pacman/mrs/overheat()
/obj/machinery/power/port_gen/pacman/overheat()
/obj/machinery/power/port_gen/pacman/super
/obj/machinery/power/port_gen/pacman/super/overheat()
/obj/machinery/power/port_gen/process()
/obj/machinery/power/rad_collector
/obj/machinery/power/rad_collector/Destroy()
/obj/machinery/power/rad_collector/New()
/obj/machinery/power/rad_collector/attack_hand(mob/user as mob)
/obj/machinery/power/rad_collector/attackby(obj/item/W, mob/user, params)
/obj/machinery/power/rad_collector/eject()
/obj/machinery/power/rad_collector/ex_act(severity, target)
/obj/machinery/power/rad_collector/process()
/obj/machinery/power/rad_collector/receive_pulse(var/pulse_strength)
/obj/machinery/power/rad_collector/toggle_power()
/obj/machinery/power/rad_collector/update_icons()
/obj/machinery/power/singularity_beacon
/obj/machinery/power/singularity_beacon/Activate(mob/user = null)
/obj/machinery/power/singularity_beacon/Deactivate(mob/user = null)
/obj/machinery/power/singularity_beacon/Destroy()
/obj/machinery/power/singularity_beacon/attack_ai(mob/user as mob)
/obj/machinery/power/singularity_beacon/attack_hand(var/mob/user as mob)
/obj/machinery/power/singularity_beacon/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/power/singularity_beacon/process()
/obj/machinery/power/singularity_beacon/syndicate
/obj/machinery/power/smes
/obj/machinery/power/smes/Destroy()
/obj/machinery/power/smes/New()
/obj/machinery/power/smes/RefreshParts()
/obj/machinery/power/smes/Topic(href, href_list)
/obj/machinery/power/smes/add_load(var/amount)
/obj/machinery/power/smes/attack_ai(mob/user)
/obj/machinery/power/smes/attack_hand(mob/user)
/obj/machinery/power/smes/attackby(obj/item/I, mob/user, params)
/obj/machinery/power/smes/can_terminal_dismantle()
/obj/machinery/power/smes/chargedisplay()
/obj/machinery/power/smes/disconnect_terminal()
/obj/machinery/power/smes/emp_act(severity)
/obj/machinery/power/smes/engineering
/obj/machinery/power/smes/log_smes(var/user = "")
/obj/machinery/power/smes/magical
/obj/machinery/power/smes/magical/process()
/obj/machinery/power/smes/make_terminal(var/turf/T)
/obj/machinery/power/smes/ninjadrain_act(var/obj/item/clothing/suit/space/space_ninja/S, var/mob/living/carbon/human/H, var/obj/item/clothing/gloves/space_ninja/G)
/obj/machinery/power/smes/process()
/obj/machinery/power/smes/restore()
/obj/machinery/power/smes/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/power/smes/update_icon()
/obj/machinery/power/solar
/obj/machinery/power/solar/Destroy()
/obj/machinery/power/solar/Make(var/obj/item/solar_assembly/S)
/obj/machinery/power/solar/New(var/turf/loc, var/obj/item/solar_assembly/S)
/obj/machinery/power/solar/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/power/solar/blob_act()
/obj/machinery/power/solar/broken()
/obj/machinery/power/solar/ex_act(severity, target)
/obj/machinery/power/solar/fake/New(var/turf/loc, var/obj/item/solar_assembly/S)
/obj/machinery/power/solar/fake/process()
/obj/machinery/power/solar/healthcheck()
/obj/machinery/power/solar/occlusion()
/obj/machinery/power/solar/process()
/obj/machinery/power/solar/set_control(var/obj/machinery/power/solar_control/SC)
/obj/machinery/power/solar/unset_control()
/obj/machinery/power/solar/update_icon()
/obj/machinery/power/solar/update_solar_exposure()
/obj/machinery/power/solar_control
/obj/machinery/power/solar_control/Destroy()
/obj/machinery/power/solar_control/New()
/obj/machinery/power/solar_control/Topic(href, href_list)
/obj/machinery/power/solar_control/attack_hand(mob/user)
/obj/machinery/power/solar_control/attackby(I as obj, user as mob, params)
/obj/machinery/power/solar_control/blob_act()
/obj/machinery/power/solar_control/broken()
/obj/machinery/power/solar_control/connect_to_network()
/obj/machinery/power/solar_control/disconnect_from_network()
/obj/machinery/power/solar_control/ex_act(severity, target)
/obj/machinery/power/solar_control/initialize()
/obj/machinery/power/solar_control/power_change()
/obj/machinery/power/solar_control/process()
/obj/machinery/power/solar_control/search_for_connected()
/obj/machinery/power/solar_control/set_panels(var/cdir)
/obj/machinery/power/solar_control/ui_interact(mob/user, ui_key = "main")
/obj/machinery/power/solar_control/update()
/obj/machinery/power/solar_control/update_icon()
/obj/machinery/power/supermatter_shard
/obj/machinery/power/supermatter_shard/Bumped(atom/AM as mob|obj)
/obj/machinery/power/supermatter_shard/Consume(atom/movable/AM)
/obj/machinery/power/supermatter_shard/Destroy()
/obj/machinery/power/supermatter_shard/New()
/obj/machinery/power/supermatter_shard/attack_ai(mob/user as mob)
/obj/machinery/power/supermatter_shard/attack_hand(mob/living/user as mob)
/obj/machinery/power/supermatter_shard/attack_paw(mob/user as mob)
/obj/machinery/power/supermatter_shard/attack_robot(mob/user as mob)
/obj/machinery/power/supermatter_shard/attackby(obj/item/W as obj, mob/living/user as mob, params)
/obj/machinery/power/supermatter_shard/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/power/supermatter_shard/explode()
/obj/machinery/power/supermatter_shard/process()
/obj/machinery/power/supermatter_shard/singularity_act()
/obj/machinery/power/supermatter_shard/transfer_energy()
/obj/machinery/power/surplus()
/obj/machinery/power/terminal
/obj/machinery/power/terminal/Destroy()
/obj/machinery/power/terminal/New()
/obj/machinery/power/terminal/attackby(obj/item/W, mob/living/user, params)
/obj/machinery/power/terminal/dismantle(var/mob/living/user)
/obj/machinery/power/terminal/hide(var/i)
/obj/machinery/power/tracker
/obj/machinery/power/tracker/Destroy()
/obj/machinery/power/tracker/Make(var/obj/item/solar_assembly/S)
/obj/machinery/power/tracker/New(var/turf/loc, var/obj/item/solar_assembly/S)
/obj/machinery/power/tracker/attackby(var/obj/item/weapon/W, var/mob/user, params)
/obj/machinery/power/tracker/set_angle(var/angle)
/obj/machinery/power/tracker/set_control(var/obj/machinery/power/solar_control/SC)
/obj/machinery/power/tracker/unset_control()
/obj/machinery/power/turbine
/obj/machinery/power/turbine/CanAtmosPass(var/turf/T)
/obj/machinery/power/turbine/New()
/obj/machinery/power/turbine/RefreshParts()
/obj/machinery/power/turbine/Topic(href, href_list)
/obj/machinery/power/turbine/attack_hand(mob/user)
/obj/machinery/power/turbine/attackby(obj/item/I, mob/user, params)
/obj/machinery/power/turbine/interact(mob/user)
/obj/machinery/power/turbine/locate_machinery()
/obj/machinery/power/turbine/process()
/obj/machinery/power_change()
/obj/machinery/powered(var/chan = -1)
/obj/machinery/process()
/obj/machinery/process_atmos()
/obj/machinery/processor
/obj/machinery/processor/New()
/obj/machinery/processor/RefreshParts()
/obj/machinery/processor/attack_hand(var/mob/user as mob)
/obj/machinery/processor/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/processor/empty()
/obj/machinery/processor/select_recipe(var/X)
/obj/machinery/processor/verb/eject()
/obj/machinery/r_n_d
/obj/machinery/r_n_d/
/obj/machinery/r_n_d//shock(mob/user, prb)
/obj/machinery/r_n_d/New()
/obj/machinery/r_n_d/Topic(href, href_list)
/obj/machinery/r_n_d/attack_hand(mob/user as mob)
/obj/machinery/r_n_d/circuit_imprinter
/obj/machinery/r_n_d/circuit_imprinter/New()
/obj/machinery/r_n_d/circuit_imprinter/RefreshParts()
/obj/machinery/r_n_d/circuit_imprinter/TotalMaterials()
/obj/machinery/r_n_d/circuit_imprinter/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/r_n_d/circuit_imprinter/blob_act()
/obj/machinery/r_n_d/circuit_imprinter/check_mat(datum/design/being_built, var/M)
/obj/machinery/r_n_d/destructive_analyzer
/obj/machinery/r_n_d/destructive_analyzer/ConvertReqString2List(var/list/source_list)
/obj/machinery/r_n_d/destructive_analyzer/New()
/obj/machinery/r_n_d/destructive_analyzer/RefreshParts()
/obj/machinery/r_n_d/destructive_analyzer/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/r_n_d/experimentor
/obj/machinery/r_n_d/experimentor/ConvertReqString2List(var/list/source_list)
/obj/machinery/r_n_d/experimentor/New()
/obj/machinery/r_n_d/experimentor/RefreshParts()
/obj/machinery/r_n_d/experimentor/SetTypeReactions()
/obj/machinery/r_n_d/experimentor/Topic(href, href_list)
/obj/machinery/r_n_d/experimentor/attack_hand(mob/user as mob)
/obj/machinery/r_n_d/experimentor/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/r_n_d/experimentor/checkCircumstances(var/obj/item/O as obj)
/obj/machinery/r_n_d/experimentor/default_deconstruction_crowbar(var/obj/item/O)
/obj/machinery/r_n_d/experimentor/ejectItem(var/delete=FALSE)
/obj/machinery/r_n_d/experimentor/experiment(var/exp,var/obj/item/exp_on)
/obj/machinery/r_n_d/experimentor/matchReaction(var/matching,var/reaction)
/obj/machinery/r_n_d/experimentor/pickWeighted(var/list/from)
/obj/machinery/r_n_d/experimentor/throwSmoke(var/turf/where)
/obj/machinery/r_n_d/experimentor/warn_admins(var/mob/user, var/ReactionName)
/obj/machinery/r_n_d/protolathe
/obj/machinery/r_n_d/protolathe/New()
/obj/machinery/r_n_d/protolathe/RefreshParts()
/obj/machinery/r_n_d/protolathe/TotalMaterials()
/obj/machinery/r_n_d/protolathe/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/r_n_d/protolathe/check_mat(datum/design/being_built, var/M)
/obj/machinery/r_n_d/server
/obj/machinery/r_n_d/server/Destroy()
/obj/machinery/r_n_d/server/New()
/obj/machinery/r_n_d/server/RefreshParts()
/obj/machinery/r_n_d/server/attack_hand(mob/user as mob)
/obj/machinery/r_n_d/server/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/r_n_d/server/blob_act()
/obj/machinery/r_n_d/server/centcom
/obj/machinery/r_n_d/server/centcom/initialize()
/obj/machinery/r_n_d/server/centcom/process()
/obj/machinery/r_n_d/server/core
/obj/machinery/r_n_d/server/emp_act(severity)
/obj/machinery/r_n_d/server/ex_act(severity, target)
/obj/machinery/r_n_d/server/griefProtection()
/obj/machinery/r_n_d/server/initialize()
/obj/machinery/r_n_d/server/ninjadrain_act(var/obj/item/clothing/suit/space/space_ninja/S, var/mob/living/carbon/human/H, var/obj/item/clothing/gloves/space_ninja/G)
/obj/machinery/r_n_d/server/process()
/obj/machinery/r_n_d/server/produce_heat(heat_amt)
/obj/machinery/r_n_d/server/robotics
/obj/machinery/readybutton
/obj/machinery/readybutton/New()
/obj/machinery/readybutton/attack_ai(mob/user as mob)
/obj/machinery/readybutton/attack_hand(mob/user as mob)
/obj/machinery/readybutton/attack_paw(mob/user as mob)
/obj/machinery/readybutton/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/readybutton/begin_event()
/obj/machinery/readybutton/update_icon()
/obj/machinery/reagentgrinder
/obj/machinery/reagentgrinder/New()
/obj/machinery/reagentgrinder/Topic(href, href_list)
/obj/machinery/reagentgrinder/attack_ai(mob/user as mob)
/obj/machinery/reagentgrinder/attack_hand(mob/user as mob)
/obj/machinery/reagentgrinder/attack_paw(mob/user as mob)
/obj/machinery/reagentgrinder/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/reagentgrinder/detach()
/obj/machinery/reagentgrinder/eject()
/obj/machinery/reagentgrinder/get_allowed_by_id(var/obj/item/O)
/obj/machinery/reagentgrinder/get_allowed_juice_by_id(var/obj/item/weapon/reagent_containers/food/snacks/O)
/obj/machinery/reagentgrinder/get_allowed_snack_by_id(var/obj/item/weapon/reagent_containers/food/snacks/O)
/obj/machinery/reagentgrinder/get_grownweapon_amount(var/obj/item/weapon/grown/O)
/obj/machinery/reagentgrinder/get_juice_amount(var/obj/item/weapon/reagent_containers/food/snacks/grown/O)
/obj/machinery/reagentgrinder/grind()
/obj/machinery/reagentgrinder/interact(mob/user as mob)
/obj/machinery/reagentgrinder/is_allowed(var/obj/item/weapon/reagent_containers/O)
/obj/machinery/reagentgrinder/juice()
/obj/machinery/reagentgrinder/remove_object(var/obj/item/O)
/obj/machinery/reagentgrinder/update_icon()
/obj/machinery/recharge_station
/obj/machinery/recharge_station/New()
/obj/machinery/recharge_station/RefreshParts()
/obj/machinery/recharge_station/attack_ai(user as mob)
/obj/machinery/recharge_station/attack_hand(user as mob)
/obj/machinery/recharge_station/attack_paw(user as mob)
/obj/machinery/recharge_station/attackby(obj/item/P as obj, mob/user as mob, params)
/obj/machinery/recharge_station/close_machine()
/obj/machinery/recharge_station/emp_act(severity)
/obj/machinery/recharge_station/ex_act(severity, target)
/obj/machinery/recharge_station/open_machine()
/obj/machinery/recharge_station/power_change()
/obj/machinery/recharge_station/process()
/obj/machinery/recharge_station/process_occupant()
/obj/machinery/recharge_station/relaymove(mob/user as mob)
/obj/machinery/recharge_station/restock_modules()
/obj/machinery/recharge_station/toggle_open()
/obj/machinery/recharge_station/update_icon()
/obj/machinery/recharger
/obj/machinery/recharger/attack_hand(mob/user)
/obj/machinery/recharger/attack_paw(mob/user)
/obj/machinery/recharger/attack_tk(mob/user)
/obj/machinery/recharger/attackby(obj/item/weapon/G, mob/user, params)
/obj/machinery/recharger/emp_act(severity)
/obj/machinery/recharger/process()
/obj/machinery/recharger/update_icon()
/obj/machinery/recycler
/obj/machinery/recycler/Bump(var/atom/movable/AM)
/obj/machinery/recycler/Bumped(var/atom/movable/AM)
/obj/machinery/recycler/New()
/obj/machinery/recycler/RefreshParts()
/obj/machinery/recycler/attackby(var/obj/item/I, var/mob/user, params)
/obj/machinery/recycler/eat(var/mob/living/L)
/obj/machinery/recycler/emag_act(user as mob)
/obj/machinery/recycler/examine(mob/user)
/obj/machinery/recycler/power_change()
/obj/machinery/recycler/recycle(var/obj/item/I, var/sound = 1)
/obj/machinery/recycler/stop(var/mob/living/L)
/obj/machinery/recycler/update_icon()
/obj/machinery/removeStaticPower(value, powerchannel)
/obj/machinery/requests_console
/obj/machinery/requests_console/New()
/obj/machinery/requests_console/Topic(href, href_list)
/obj/machinery/requests_console/attack_hand(var/mob/user)
/obj/machinery/requests_console/attackby(var/obj/item/weapon/O as obj, var/mob/user as mob, params)
/obj/machinery/requests_console/createmessage(source, title, message, priority, paper)
/obj/machinery/requests_console/power_change()
/obj/machinery/requests_console/update_icon()
/obj/machinery/robotic_fabricator
/obj/machinery/robotic_fabricator/Topic(href, href_list)
/obj/machinery/robotic_fabricator/attack_hand(user as mob)
/obj/machinery/robotic_fabricator/attack_paw(user as mob)
/obj/machinery/robotic_fabricator/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/robotic_fabricator/power_change()
/obj/machinery/say_quote(var/input, list/spans)
/obj/machinery/seed_extractor
/obj/machinery/seed_extractor/New()
/obj/machinery/seed_extractor/RefreshParts()
/obj/machinery/seed_extractor/Topic(var/href, var/list/href_list)
/obj/machinery/seed_extractor/add(var/obj/item/seeds/O as obj)
/obj/machinery/seed_extractor/attack_hand(mob/user as mob)
/obj/machinery/seed_extractor/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/seed_extractor/interact(mob/user as mob)
/obj/machinery/shield
/obj/machinery/shield/CanAtmosPass(var/turf/T)
/obj/machinery/shield/CanPass(atom/movable/mover, turf/target, height)
/obj/machinery/shield/Destroy()
/obj/machinery/shield/Move()
/obj/machinery/shield/New()
/obj/machinery/shield/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/shield/blob_act()
/obj/machinery/shield/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/shield/emp_act(severity)
/obj/machinery/shield/ex_act(severity, target)
/obj/machinery/shield/hitby(AM as mob|obj)
/obj/machinery/shieldgen
/obj/machinery/shieldgen/Destroy()
/obj/machinery/shieldgen/attack_hand(mob/user as mob)
/obj/machinery/shieldgen/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/shieldgen/checkhp()
/obj/machinery/shieldgen/emag_act()
/obj/machinery/shieldgen/emp_act(severity)
/obj/machinery/shieldgen/ex_act(severity, target)
/obj/machinery/shieldgen/process()
/obj/machinery/shieldgen/shields_down()
/obj/machinery/shieldgen/shields_up()
/obj/machinery/shieldgen/update_icon()
/obj/machinery/shieldwall
/obj/machinery/shieldwall/CanPass(atom/movable/mover, turf/target, height=0)
/obj/machinery/shieldwall/New(var/obj/machinery/shieldwallgen/A, var/obj/machinery/shieldwallgen/B)
/obj/machinery/shieldwall/attack_hand(mob/user as mob)
/obj/machinery/shieldwall/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/shieldwall/ex_act(severity, target)
/obj/machinery/shieldwall/process()
/obj/machinery/shieldwallgen
/obj/machinery/shieldwallgen/Destroy()
/obj/machinery/shieldwallgen/attack_hand(mob/user as mob)
/obj/machinery/shieldwallgen/attackby(obj/item/W, mob/user, params)
/obj/machinery/shieldwallgen/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/shieldwallgen/cleanup(var/NSEW)
/obj/machinery/shieldwallgen/power()
/obj/machinery/shieldwallgen/process()
/obj/machinery/shieldwallgen/setup_field(var/NSEW = 0)
/obj/machinery/shower
/obj/machinery/shower/Crossed(atom/movable/O)
/obj/machinery/shower/Uncrossed(atom/movable/O)
/obj/machinery/shower/attack_hand(mob/M)
/obj/machinery/shower/attackby(obj/item/I, mob/user, params)
/obj/machinery/shower/check_heat(mob/M)
/obj/machinery/shower/process()
/obj/machinery/shower/update_icon()
/obj/machinery/shower/wash(atom/movable/O)
/obj/machinery/sleep_console
/obj/machinery/sleeper
/obj/machinery/sleeper/MouseDrop_T(mob/target, mob/user)
/obj/machinery/sleeper/New()
/obj/machinery/sleeper/RefreshParts()
/obj/machinery/sleeper/Topic(href, href_list)
/obj/machinery/sleeper/attack_ai(mob/user)
/obj/machinery/sleeper/attack_animal(var/mob/living/simple_animal/M)
/obj/machinery/sleeper/attack_hand(mob/user)
/obj/machinery/sleeper/attack_paw(mob/user)
/obj/machinery/sleeper/attackby(obj/item/I, mob/user, params)
/obj/machinery/sleeper/blob_act()
/obj/machinery/sleeper/close_machine(mob/target)
/obj/machinery/sleeper/container_resist()
/obj/machinery/sleeper/emp_act(severity)
/obj/machinery/sleeper/ex_act(severity, target)
/obj/machinery/sleeper/go_out()
/obj/machinery/sleeper/inject_chem(mob/user, chem)
/obj/machinery/sleeper/open_machine()
/obj/machinery/sleeper/relaymove(var/mob/user)
/obj/machinery/sleeper/sleeperUI(mob/user)
/obj/machinery/sleeper/update_icon()
/obj/machinery/smartfridge
/obj/machinery/smartfridge/New()
/obj/machinery/smartfridge/RefreshParts()
/obj/machinery/smartfridge/Topic(var/href, var/list/href_list)
/obj/machinery/smartfridge/accept_check(var/obj/item/O as obj)
/obj/machinery/smartfridge/attack_ai(mob/user as mob)
/obj/machinery/smartfridge/attack_hand(mob/user as mob)
/obj/machinery/smartfridge/attack_paw(mob/user as mob)
/obj/machinery/smartfridge/attackby(var/obj/item/O as obj, var/mob/user as mob, params)
/obj/machinery/smartfridge/chemistry
/obj/machinery/smartfridge/chemistry/New()
/obj/machinery/smartfridge/chemistry/accept_check(var/obj/item/O as obj)
/obj/machinery/smartfridge/chemistry/virology
/obj/machinery/smartfridge/drinks
/obj/machinery/smartfridge/drinks/accept_check(var/obj/item/O as obj)
/obj/machinery/smartfridge/drying_rack
/obj/machinery/smartfridge/drying_rack/Topic(var/href, var/list/href_list)
/obj/machinery/smartfridge/drying_rack/accept_check(var/obj/item/O as obj)
/obj/machinery/smartfridge/drying_rack/emp_act(severity)
/obj/machinery/smartfridge/drying_rack/interact(mob/user as mob)
/obj/machinery/smartfridge/drying_rack/load()
/obj/machinery/smartfridge/drying_rack/power_change()
/obj/machinery/smartfridge/drying_rack/process()
/obj/machinery/smartfridge/drying_rack/rack_dry()
/obj/machinery/smartfridge/drying_rack/toggle_drying(var/forceoff = 0)
/obj/machinery/smartfridge/drying_rack/update_icon()
/obj/machinery/smartfridge/extract
/obj/machinery/smartfridge/extract/New()
/obj/machinery/smartfridge/extract/accept_check(var/obj/item/O as obj)
/obj/machinery/smartfridge/interact(mob/user as mob)
/obj/machinery/smartfridge/load(var/obj/item/O as obj)
/obj/machinery/smartfridge/power_change()
/obj/machinery/smartfridge/update_icon()
/obj/machinery/space_heater
/obj/machinery/space_heater/New()
/obj/machinery/space_heater/Topic(href, href_list)
/obj/machinery/space_heater/attack_hand(mob/user as mob)
/obj/machinery/space_heater/attackby(obj/item/I, mob/user, params)
/obj/machinery/space_heater/emp_act(severity)
/obj/machinery/space_heater/examine(mob/user)
/obj/machinery/space_heater/process()
/obj/machinery/space_heater/update_icon()
/obj/machinery/sparker
/obj/machinery/sparker/New()
/obj/machinery/sparker/attack_ai()
/obj/machinery/sparker/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/sparker/emp_act(severity)
/obj/machinery/sparker/ignite()
/obj/machinery/sparker/power_change()
/obj/machinery/status_display
/obj/machinery/status_display/Destroy()
/obj/machinery/status_display/New()
/obj/machinery/status_display/emp_act(severity)
/obj/machinery/status_display/examine(mob/user)
/obj/machinery/status_display/get_shuttle_timer()
/obj/machinery/status_display/get_supply_shuttle_timer()
/obj/machinery/status_display/process()
/obj/machinery/status_display/receive_signal(datum/signal/signal)
/obj/machinery/status_display/remove_display()
/obj/machinery/status_display/set_message(m1, m2)
/obj/machinery/status_display/set_picture(state)
/obj/machinery/status_display/update()
/obj/machinery/status_display/update_display(line1, line2)
/obj/machinery/suit_storage_unit
/obj/machinery/suit_storage_unit/MouseDrop_T(mob/M as mob, mob/user as mob)
/obj/machinery/suit_storage_unit/New()
/obj/machinery/suit_storage_unit/Topic(href, href_list)
/obj/machinery/suit_storage_unit/atmos
/obj/machinery/suit_storage_unit/attack_ai(mob/user as mob)
/obj/machinery/suit_storage_unit/attack_hand(mob/user as mob)
/obj/machinery/suit_storage_unit/attack_paw(mob/user as mob)
/obj/machinery/suit_storage_unit/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/machinery/suit_storage_unit/captain
/obj/machinery/suit_storage_unit/ce
/obj/machinery/suit_storage_unit/cmo
/obj/machinery/suit_storage_unit/container_resist()
/obj/machinery/suit_storage_unit/cycletimeleft()
/obj/machinery/suit_storage_unit/dispense_helmet()
/obj/machinery/suit_storage_unit/dispense_mask()
/obj/machinery/suit_storage_unit/dispense_suit()
/obj/machinery/suit_storage_unit/dump_everything()
/obj/machinery/suit_storage_unit/eject(atom/movable/ITEM)
/obj/machinery/suit_storage_unit/eject_occupant(mob/user as mob)
/obj/machinery/suit_storage_unit/eject_storage()
/obj/machinery/suit_storage_unit/engine
/obj/machinery/suit_storage_unit/ertCom
/obj/machinery/suit_storage_unit/ertEngi
/obj/machinery/suit_storage_unit/ertMed
/obj/machinery/suit_storage_unit/ertSec
/obj/machinery/suit_storage_unit/ex_act(severity, target)
/obj/machinery/suit_storage_unit/hos
/obj/machinery/suit_storage_unit/mining
/obj/machinery/suit_storage_unit/power_change()
/obj/machinery/suit_storage_unit/security
/obj/machinery/suit_storage_unit/standard_unit
/obj/machinery/suit_storage_unit/start_UV(mob/user as mob)
/obj/machinery/suit_storage_unit/store_mob(mob/living/M as mob, mob/user as mob)
/obj/machinery/suit_storage_unit/syndicate
/obj/machinery/suit_storage_unit/toggleUV(mob/user as mob)
/obj/machinery/suit_storage_unit/toggle_lock(mob/user as mob)
/obj/machinery/suit_storage_unit/toggle_open(mob/user as mob)
/obj/machinery/suit_storage_unit/togglesafeties(mob/user as mob)
/obj/machinery/suit_storage_unit/update_icon()
/obj/machinery/syndicate_beacon
/obj/machinery/syndicate_beacon/Topic(href, href_list)
/obj/machinery/syndicate_beacon/attack_hand(var/mob/user as mob)
/obj/machinery/syndicate_beacon/selfdestruct()
/obj/machinery/syndicatebomb
/obj/machinery/syndicatebomb/New()
/obj/machinery/syndicatebomb/attack_ai()
/obj/machinery/syndicatebomb/attack_hand(var/mob/user)
/obj/machinery/syndicatebomb/attackby(var/obj/item/I, var/mob/user, params)
/obj/machinery/syndicatebomb/badmin
/obj/machinery/syndicatebomb/badmin/clown
/obj/machinery/syndicatebomb/badmin/varplosion
/obj/machinery/syndicatebomb/examine(mob/user)
/obj/machinery/syndicatebomb/interact(var/mob/user)
/obj/machinery/syndicatebomb/isWireCut(var/index)
/obj/machinery/syndicatebomb/process()
/obj/machinery/syndicatebomb/settings(var/mob/user)
/obj/machinery/syndicatebomb/training
/obj/machinery/syndicatebomb/update_icon()
/obj/machinery/telecomms
/obj/machinery/telecomms/Destroy()
/obj/machinery/telecomms/New()
/obj/machinery/telecomms/Options_Menu()
/obj/machinery/telecomms/Options_Topic(href, href_list)
/obj/machinery/telecomms/Topic(href, href_list)
/obj/machinery/telecomms/add_link(var/obj/machinery/telecomms/T)
/obj/machinery/telecomms/allinone
/obj/machinery/telecomms/allinone/attackby(obj/item/P as obj, mob/user as mob, params)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)
/obj/machinery/telecomms/attack_ai(var/mob/user as mob)
/obj/machinery/telecomms/attack_hand(var/mob/user as mob)
/obj/machinery/telecomms/attackby(obj/item/P as obj, mob/user as mob, params)
/obj/machinery/telecomms/broadcaster
/obj/machinery/telecomms/broadcaster/Destroy()
/obj/machinery/telecomms/broadcaster/New()
/obj/machinery/telecomms/broadcaster/preset_left
/obj/machinery/telecomms/broadcaster/preset_right
/obj/machinery/telecomms/broadcaster/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/bus
/obj/machinery/telecomms/bus/New()
/obj/machinery/telecomms/bus/Options_Menu()
/obj/machinery/telecomms/bus/Options_Topic(href, href_list)
/obj/machinery/telecomms/bus/preset_four
/obj/machinery/telecomms/bus/preset_four/New()
/obj/machinery/telecomms/bus/preset_one
/obj/machinery/telecomms/bus/preset_three
/obj/machinery/telecomms/bus/preset_two
/obj/machinery/telecomms/bus/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/canAccess(var/mob/user)
/obj/machinery/telecomms/emp_act(severity)
/obj/machinery/telecomms/get_multitool(mob/user as mob)
/obj/machinery/telecomms/hub
/obj/machinery/telecomms/hub/New()
/obj/machinery/telecomms/hub/preset
/obj/machinery/telecomms/hub/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/initialize()
/obj/machinery/telecomms/is_freq_listening(datum/signal/signal)
/obj/machinery/telecomms/process()
/obj/machinery/telecomms/processor
/obj/machinery/telecomms/processor/New()
/obj/machinery/telecomms/processor/preset_four
/obj/machinery/telecomms/processor/preset_one
/obj/machinery/telecomms/processor/preset_three
/obj/machinery/telecomms/processor/preset_two
/obj/machinery/telecomms/processor/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/receiver
/obj/machinery/telecomms/receiver/New()
/obj/machinery/telecomms/receiver/check_receive_level(datum/signal/signal)
/obj/machinery/telecomms/receiver/preset_left
/obj/machinery/telecomms/receiver/preset_right
/obj/machinery/telecomms/receiver/preset_right/New()
/obj/machinery/telecomms/receiver/receive_signal(datum/signal/signal)
/obj/machinery/telecomms/relay
/obj/machinery/telecomms/relay/New()
/obj/machinery/telecomms/relay/Options_Menu()
/obj/machinery/telecomms/relay/Options_Topic(href, href_list)
/obj/machinery/telecomms/relay/can(datum/signal/signal)
/obj/machinery/telecomms/relay/can_receive(datum/signal/signal)
/obj/machinery/telecomms/relay/can_send(datum/signal/signal)
/obj/machinery/telecomms/relay/preset
/obj/machinery/telecomms/relay/preset/mining
/obj/machinery/telecomms/relay/preset/ruskie
/obj/machinery/telecomms/relay/preset/station
/obj/machinery/telecomms/relay/preset/telecomms
/obj/machinery/telecomms/relay/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/relay/toggle_level()
/obj/machinery/telecomms/relay_direct_information(datum/signal/signal, obj/machinery/telecomms/machine)
/obj/machinery/telecomms/relay_information(datum/signal/signal, filter, copysig, amount = 20)
/obj/machinery/telecomms/server
/obj/machinery/telecomms/server/Destroy()
/obj/machinery/telecomms/server/New()
/obj/machinery/telecomms/server/add_entry(var/content, var/input)
/obj/machinery/telecomms/server/admin_log(var/mob/mob)
/obj/machinery/telecomms/server/compile(var/mob/user)
/obj/machinery/telecomms/server/presets
/obj/machinery/telecomms/server/presets/New()
/obj/machinery/telecomms/server/presets/command
/obj/machinery/telecomms/server/presets/common
/obj/machinery/telecomms/server/presets/common/New()
/obj/machinery/telecomms/server/presets/engineering
/obj/machinery/telecomms/server/presets/medical
/obj/machinery/telecomms/server/presets/science
/obj/machinery/telecomms/server/presets/security
/obj/machinery/telecomms/server/presets/service
/obj/machinery/telecomms/server/presets/supply
/obj/machinery/telecomms/server/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/server/setcode(var/t)
/obj/machinery/telecomms/server/update_logs()
/obj/machinery/telecomms/update_icon()
/obj/machinery/telecomms/update_power()
/obj/machinery/telepad
/obj/machinery/telepad/New()
/obj/machinery/telepad/RefreshParts()
/obj/machinery/telepad/attackby(obj/item/I, mob/user, params)
/obj/machinery/telepad_cargo
/obj/machinery/telepad_cargo/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/teleport
/obj/machinery/teleport/hub
/obj/machinery/teleport/hub/Bumped(M as mob|obj)
/obj/machinery/teleport/hub/Destroy()
/obj/machinery/teleport/hub/New()
/obj/machinery/teleport/hub/RefreshParts()
/obj/machinery/teleport/hub/attack_ghost(mob/user as mob)
/obj/machinery/teleport/hub/attackby(obj/item/W, mob/user, params)
/obj/machinery/teleport/hub/initialize()
/obj/machinery/teleport/hub/link_power_station()
/obj/machinery/teleport/hub/syndicate/New()
/obj/machinery/teleport/hub/teleport(atom/movable/M as mob|obj, turf/T)
/obj/machinery/teleport/hub/update_icon()
/obj/machinery/teleport/station
/obj/machinery/teleport/station/Destroy()
/obj/machinery/teleport/station/New()
/obj/machinery/teleport/station/RefreshParts()
/obj/machinery/teleport/station/attack_ai()
/obj/machinery/teleport/station/attack_hand(mob/user)
/obj/machinery/teleport/station/attack_paw()
/obj/machinery/teleport/station/attackby(var/obj/item/weapon/W, mob/user, params)
/obj/machinery/teleport/station/initialize()
/obj/machinery/teleport/station/link_console_and_hub()
/obj/machinery/teleport/station/power_change()
/obj/machinery/teleport/station/toggle(mob/user)
/obj/machinery/teleport/station/update_icon()
/obj/machinery/the_singularitygen/
/obj/machinery/the_singularitygen/attackby(obj/item/W, mob/user, params)
/obj/machinery/the_singularitygen/process()
/obj/machinery/transformer
/obj/machinery/transformer/Bumped(var/atom/movable/AM)
/obj/machinery/transformer/CanPass(atom/movable/mover, turf/target, height=0)
/obj/machinery/transformer/New()
/obj/machinery/transformer/conveyor/New()
/obj/machinery/transformer/do_transform(var/mob/living/carbon/human/H)
/obj/machinery/transformer/power_change()
/obj/machinery/transformer/update_icon()
/obj/machinery/turret
/obj/machinery/turret/New()
/obj/machinery/turret/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/obj/machinery/turret/attack_animal(mob/living/simple_animal/M as mob)
/obj/machinery/turret/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/turret/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/turret/check_target(var/atom/movable/T as mob|obj)
/obj/machinery/turret/die()
/obj/machinery/turret/emp_act(severity)
/obj/machinery/turret/ex_act(severity, target)
/obj/machinery/turret/get_new_target()
/obj/machinery/turret/get_protected_area()
/obj/machinery/turret/isDown()
/obj/machinery/turret/isPopping()
/obj/machinery/turret/popDown()
/obj/machinery/turret/popUp()
/obj/machinery/turret/power_change()
/obj/machinery/turret/process()
/obj/machinery/turret/setState(var/enabled, var/lethal)
/obj/machinery/turret/shootAt(var/atom/movable/target)
/obj/machinery/turret/target()
/obj/machinery/turretcover
/obj/machinery/turretid
/obj/machinery/turretid/AIAltClick()
/obj/machinery/turretid/AICtrlClick()
/obj/machinery/turretid/BorgAltClick()
/obj/machinery/turretid/BorgCtrlClick()
/obj/machinery/turretid/New()
/obj/machinery/turretid/Topic(href, href_list)
/obj/machinery/turretid/attack_ai(mob/user as mob)
/obj/machinery/turretid/attack_hand(mob/user as mob)
/obj/machinery/turretid/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/turretid/emag_act(mob/user as mob)
/obj/machinery/turretid/power_change()
/obj/machinery/turretid/toggle_lethal()
/obj/machinery/turretid/toggle_on()
/obj/machinery/turretid/updateTurrets()
/obj/machinery/turretid/update_icon()
/obj/machinery/use_power(var/amount, var/chan = -1)
/obj/machinery/vending
/obj/machinery/vending/Destroy()
/obj/machinery/vending/New()
/obj/machinery/vending/RefreshParts()
/obj/machinery/vending/Topic(href, href_list)
/obj/machinery/vending/assist
/obj/machinery/vending/attack_ai(mob/user)
/obj/machinery/vending/attack_hand(mob/user)
/obj/machinery/vending/attack_paw(mob/user)
/obj/machinery/vending/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/vending/autodrobe
/obj/machinery/vending/blob_act()
/obj/machinery/vending/boozeomat
/obj/machinery/vending/build_inventory(list/productlist, hidden=0, req_coin=0, start_empty = null)
/obj/machinery/vending/cart
/obj/machinery/vending/cigarette
/obj/machinery/vending/clothing
/obj/machinery/vending/coffee
/obj/machinery/vending/cola
/obj/machinery/vending/default_deconstruction_crowbar(var/obj/item/O)
/obj/machinery/vending/dinnerware
/obj/machinery/vending/emag_act(user as mob)
/obj/machinery/vending/engineering
/obj/machinery/vending/engivend
/obj/machinery/vending/ex_act(severity, target)
/obj/machinery/vending/hydronutrients
/obj/machinery/vending/hydroseeds
/obj/machinery/vending/liberationstation
/obj/machinery/vending/magivend
/obj/machinery/vending/malfunction()
/obj/machinery/vending/medical
/obj/machinery/vending/plasmaresearch
/obj/machinery/vending/power_change()
/obj/machinery/vending/process()
/obj/machinery/vending/refill_inventory(obj/item/weapon/vending_refill/refill, datum/data/vending_product/machine)
/obj/machinery/vending/robotics
/obj/machinery/vending/security
/obj/machinery/vending/shock(mob/user, prb)
/obj/machinery/vending/snack
/obj/machinery/vending/snack/Destroy()
/obj/machinery/vending/snack/attackby(obj/item/weapon/W, mob/user, params)
/obj/machinery/vending/snack/compartment_access_check(user)
/obj/machinery/vending/snack/food_load(obj/item/weapon/reagent_containers/food/snacks/S)
/obj/machinery/vending/snack/iscompartmentfull(mob/user)
/obj/machinery/vending/snack/junk_check(obj/item/weapon/reagent_containers/food/snacks/S)
/obj/machinery/vending/sovietsoda
/obj/machinery/vending/speak(message)
/obj/machinery/vending/sustenance
/obj/machinery/vending/throw_item()
/obj/machinery/vending/tool
/obj/machinery/vending/wallmed
/obj/machinery/vending/wires()
/obj/machinery/washing_machine
/obj/machinery/washing_machine/attack_hand(mob/user as mob)
/obj/machinery/washing_machine/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/machinery/washing_machine/update_icon()
/obj/machinery/washing_machine/verb/climb_out()
/obj/machinery/washing_machine/verb/start()
/obj/machinery/wish_granter
/obj/machinery/wish_granter/attack_hand(var/mob/living/carbon/user)
/obj/machinery/wish_granter_dark
/obj/machinery/wish_granter_dark/attack_hand(var/mob/living/carbon/human/user as mob)
/obj/machinery/zvent
/obj/machinery/zvent/Destroy()
/obj/machinery/zvent/New()
/obj/machinery/zvent/process_atmos()
/obj/mecha
/obj/mecha/Bump(var/atom/obstacle)
/obj/mecha/Destroy()
/obj/mecha/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans)
/obj/mecha/MouseDrop_T(mob/M as mob, mob/user as mob)
/obj/mecha/Move(atom/newloc, direct)
/obj/mecha/New()
/obj/mecha/Process_Spacemove(var/movement_dir = 0)
/obj/mecha/Topic(href, href_list)
/obj/mecha/absorbDamage(damage,damage_type)
/obj/mecha/addVerb(verb_path)
/obj/mecha/add_airtank()
/obj/mecha/add_cabin()
/obj/mecha/add_cell(var/obj/item/weapon/stock_parts/cell/C=null)
/obj/mecha/add_iterators()
/obj/mecha/add_radio()
/obj/mecha/ai_enter_mech(var/mob/living/silicon/ai/AI, var/interaction)
/obj/mecha/allow_drop()
/obj/mecha/attack_ai(var/mob/living/silicon/ai/user as mob)
/obj/mecha/attack_alien(mob/living/user as mob)
/obj/mecha/attack_animal(mob/living/simple_animal/user as mob)
/obj/mecha/attack_hand(mob/living/user as mob)
/obj/mecha/attack_hulk(mob/living/carbon/human/user)
/obj/mecha/attack_paw(mob/user as mob)
/obj/mecha/attack_tk()
/obj/mecha/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/mecha/blob_act()
/obj/mecha/bullet_act(var/obj/item/projectile/Proj)
/obj/mecha/can_use(mob/user)
/obj/mecha/check_for_internal_damage(var/list/possible_int_damage,var/ignore_threshold=null)
/obj/mecha/clearInternalDamage(int_dam_flag)
/obj/mecha/click_action(atom/target,mob/user)
/obj/mecha/combat
/obj/mecha/combat/Topic(href,href_list)
/obj/mecha/combat/durand
/obj/mecha/combat/durand/Topic(href, href_list)
/obj/mecha/combat/durand/get_commands()
/obj/mecha/combat/durand/get_stats_part()
/obj/mecha/combat/durand/relaymove(mob/user,direction)
/obj/mecha/combat/durand/verb/defence_mode()
/obj/mecha/combat/go_out()
/obj/mecha/combat/gygax
/obj/mecha/combat/gygax/Topic(href, href_list)
/obj/mecha/combat/gygax/dark
/obj/mecha/combat/gygax/dark/add_cell(var/obj/item/weapon/stock_parts/cell/C=null)
/obj/mecha/combat/gygax/dark/loaded/New()
/obj/mecha/combat/gygax/dyndomove(direction)
/obj/mecha/combat/gygax/get_commands()
/obj/mecha/combat/gygax/get_stats_part()
/obj/mecha/combat/gygax/verb/overload()
/obj/mecha/combat/honker
/obj/mecha/combat/honker/Topic(href, href_list)
/obj/mecha/combat/honker/get_commands()
/obj/mecha/combat/honker/get_equipment_list()
/obj/mecha/combat/honker/get_stats_html()
/obj/mecha/combat/honker/get_stats_part()
/obj/mecha/combat/honker/mechstep(direction)
/obj/mecha/combat/marauder
/obj/mecha/combat/marauder/Destroy()
/obj/mecha/combat/marauder/Process_Spacemove(var/movement_dir = 0)
/obj/mecha/combat/marauder/Topic(href, href_list)
/obj/mecha/combat/marauder/get_commands()
/obj/mecha/combat/marauder/get_stats_part()
/obj/mecha/combat/marauder/go_out()
/obj/mecha/combat/marauder/loaded/New()
/obj/mecha/combat/marauder/mauler
/obj/mecha/combat/marauder/mauler/loaded/New()
/obj/mecha/combat/marauder/relaymove(mob/user,direction)
/obj/mecha/combat/marauder/seraph
/obj/mecha/combat/marauder/seraph/New()
/obj/mecha/combat/marauder/verb/smoke()
/obj/mecha/combat/marauder/verb/toggle_thrusters()
/obj/mecha/combat/marauder/verb/zoom()
/obj/mecha/combat/mmi_moved_inside(var/obj/item/device/mmi/mmi_as_oc as obj,mob/user as mob)
/obj/mecha/combat/moved_inside(var/mob/living/carbon/human/H as mob)
/obj/mecha/combat/phazon
/obj/mecha/combat/phazon/Bump(var/atom/obstacle)
/obj/mecha/combat/phazon/Topic(href, href_list)
/obj/mecha/combat/phazon/click_action(atom/target,mob/user)
/obj/mecha/combat/phazon/get_commands()
/obj/mecha/combat/phazon/verb/switch_damtype()
/obj/mecha/combat/reticence
/obj/mecha/combat/reticence/loaded/New()
/obj/mecha/connect(obj/machinery/atmospherics/unary/portables_connector/new_port)
/obj/mecha/container_resist()
/obj/mecha/disconnect()
/obj/mecha/disposalEnterTry()
/obj/mecha/do_after(delay as num)
/obj/mecha/domove(direction)
/obj/mecha/drop_item()
/obj/mecha/dynabsorbdamage(damage,damage_type)
/obj/mecha/dynattackby(obj/item/weapon/W as obj, mob/living/user as mob)
/obj/mecha/dynbulletdamage(var/obj/item/projectile/Proj)
/obj/mecha/dyndomove(direction)
/obj/mecha/dyngetcharge()
/obj/mecha/dynhitby(atom/movable/A)
/obj/mecha/dynusepower(amount)
/obj/mecha/emp_act(severity)
/obj/mecha/enter_after(delay as num, var/mob/user as mob, var/numticks = 5)
/obj/mecha/ex_act(severity, target)
/obj/mecha/examine(mob/user)
/obj/mecha/get_charge()
/obj/mecha/get_commands()
/obj/mecha/get_equipment_list()
/obj/mecha/get_equipment_menu()
/obj/mecha/get_log_html()
/obj/mecha/get_stats_html()
/obj/mecha/get_stats_part()
/obj/mecha/give_power(amount)
/obj/mecha/go_out(var/forced)
/obj/mecha/hasInternalDamage(int_dam_flag=null)
/obj/mecha/has_charge(amount)
/obj/mecha/hitby(atom/movable/A as mob|obj)
/obj/mecha/internals_access_allowed(mob/M)
/obj/mecha/log_append_to_last(message as text,red=null)
/obj/mecha/log_message(message as text,red=null)
/obj/mecha/mech_melee_attack(obj/mecha/M)
/obj/mecha/mech_toxin_damage(mob/living/target)
/obj/mecha/mechstep(direction)
/obj/mecha/mechsteprand()
/obj/mecha/mechturn(direction)
/obj/mecha/medical/New()
/obj/mecha/medical/mechstep(direction)
/obj/mecha/medical/mechsteprand()
/obj/mecha/medical/mechturn(direction)
/obj/mecha/medical/odysseus
/obj/mecha/medical/odysseus/go_out()
/obj/mecha/medical/odysseus/moved_inside(var/mob/living/carbon/human/H as mob)
/obj/mecha/mmi_move_inside(var/obj/item/device/mmi/mmi_as_oc as obj,mob/user as mob)
/obj/mecha/mmi_moved_inside(var/obj/item/device/mmi/mmi_as_oc as obj,mob/user as mob)
/obj/mecha/moved_inside(var/mob/living/carbon/human/H as mob)
/obj/mecha/ninjadrain_act(var/obj/item/clothing/suit/space/space_ninja/S, var/mob/living/carbon/human/H, var/obj/item/clothing/gloves/space_ninja/G)
/obj/mecha/occupant_message(message as text)
/obj/mecha/operation_allowed(mob/M)
/obj/mecha/output_access_dialog(obj/item/weapon/card/id/id_card, mob/user)
/obj/mecha/output_maintenance_dialog(obj/item/weapon/card/id/id_card,mob/user)
/obj/mecha/portableConnectorReturnAir()
/obj/mecha/proc/log_append_to_last(message as text,red=null)
/obj/mecha/range_action(atom/target)
/obj/mecha/relaymove(mob/user,direction)
/obj/mecha/removeVerb(verb_path)
/obj/mecha/remove_air(amount)
/obj/mecha/report_internal_damage()
/obj/mecha/return_air()
/obj/mecha/return_pressure()
/obj/mecha/return_temperature()
/obj/mecha/setInternalDamage(int_dam_flag)
/obj/mecha/take_damage(amount, type="brute")
/obj/mecha/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/mecha/transfer_ai(var/interaction, mob/user, var/mob/living/silicon/ai/AI, var/obj/item/device/aicard/card)
/obj/mecha/update_health()
/obj/mecha/use_power(amount)
/obj/mecha/verb/connect_to_port()
/obj/mecha/verb/disconnect_from_port()
/obj/mecha/verb/eject()
/obj/mecha/verb/toggle_internal_tank()
/obj/mecha/verb/toggle_lights()
/obj/mecha/verb/view_stats()
/obj/mecha/working
/obj/mecha/working/New()
/obj/mecha/working/ripley
/obj/mecha/working/ripley/Destroy()
/obj/mecha/working/ripley/Exit(atom/movable/O)
/obj/mecha/working/ripley/Move()
/obj/mecha/working/ripley/Topic(href, href_list)
/obj/mecha/working/ripley/deathripley
/obj/mecha/working/ripley/deathripley/New()
/obj/mecha/working/ripley/firefighter
/obj/mecha/working/ripley/get_stats_part()
/obj/mecha/working/ripley/go_out()
/obj/mecha/working/ripley/mining
/obj/mecha/working/ripley/mining/New()
/obj/mecha/working/ripley/mmi_moved_inside(var/obj/item/device/mmi/mmi_as_oc as obj,mob/user as mob)
/obj/mecha/working/ripley/moved_inside(var/mob/living/carbon/human/H as mob)
/obj/mecha/working/ripley/update_pressure()
/obj/on_log()
/obj/portableConnectorReturnAir()
/obj/post_buckle_mob(mob/living/M)
/obj/receive_signal(datum/signal/signal, receive_method, receive_param)
/obj/remove_air(amount)
/obj/return_air()
/obj/screen
/obj/screen/Click(location, control, params)
/obj/screen/Destroy()
/obj/screen/act_intent
/obj/screen/act_intent/Click(location, control, params)
/obj/screen/ai
/obj/screen/ai/aicore
/obj/screen/ai/aicore/Click()
/obj/screen/ai/alerts
/obj/screen/ai/alerts/Click()
/obj/screen/ai/announcement
/obj/screen/ai/announcement/Click()
/obj/screen/ai/call_shuttle
/obj/screen/ai/call_shuttle/Click()
/obj/screen/ai/camera_light
/obj/screen/ai/camera_light/Click()
/obj/screen/ai/camera_list
/obj/screen/ai/camera_list/Click()
/obj/screen/ai/camera_track
/obj/screen/ai/camera_track/Click()
/obj/screen/ai/crew_manifest
/obj/screen/ai/crew_manifest/Click()
/obj/screen/ai/crew_monitor
/obj/screen/ai/crew_monitor/Click()
/obj/screen/ai/image_take
/obj/screen/ai/image_take/Click()
/obj/screen/ai/image_view
/obj/screen/ai/image_view/Click()
/obj/screen/ai/pda_msg_send
/obj/screen/ai/pda_msg_send/Click()
/obj/screen/ai/pda_msg_show
/obj/screen/ai/pda_msg_show/Click()
/obj/screen/ai/sensors
/obj/screen/ai/sensors/Click()
/obj/screen/ai/state_laws
/obj/screen/ai/state_laws/Click()
/obj/screen/alert
/obj/screen/alert/Click(location, control, params)
/obj/screen/alert/Destroy()
/obj/screen/alert/alien_fire
/obj/screen/alert/alien_tox
/obj/screen/alert/asleep
/obj/screen/alert/blind
/obj/screen/alert/buckled
/obj/screen/alert/cold
/obj/screen/alert/drunk
/obj/screen/alert/embeddedobject
/obj/screen/alert/emptycell
/obj/screen/alert/fat
/obj/screen/alert/hacked
/obj/screen/alert/handcuffed
/obj/screen/alert/high
/obj/screen/alert/highpressure
/obj/screen/alert/hot
/obj/screen/alert/hungry
/obj/screen/alert/locked
/obj/screen/alert/lowcell
/obj/screen/alert/lowpressure
/obj/screen/alert/newlaw
/obj/screen/alert/nocell
/obj/screen/alert/not_enough_co2
/obj/screen/alert/not_enough_tox
/obj/screen/alert/oxy
/obj/screen/alert/starving
/obj/screen/alert/too_much_co2
/obj/screen/alert/too_much_oxy
/obj/screen/alert/tox_in_air
/obj/screen/alert/weightless
/obj/screen/alien
/obj/screen/alien/leap
/obj/screen/alien/leap/Click()
/obj/screen/alien/nightvision
/obj/screen/alien/nightvision/Click()
/obj/screen/close
/obj/screen/close/Click()
/obj/screen/drop
/obj/screen/drop/Click()
/obj/screen/grab
/obj/screen/grab/Click()
/obj/screen/grab/attack_hand()
/obj/screen/grab/attackby()
/obj/screen/human
/obj/screen/human/equip
/obj/screen/human/equip/Click()
/obj/screen/human/toggle
/obj/screen/human/toggle/Click()
/obj/screen/internals
/obj/screen/internals/Click()
/obj/screen/inventory
/obj/screen/inventory/Click()
/obj/screen/ling
/obj/screen/ling/chems
/obj/screen/ling/sting
/obj/screen/ling/sting/Click()
/obj/screen/mov_intent
/obj/screen/mov_intent/Click()
/obj/screen/movable
/obj/screen/movable/MouseDrop(over_object, src_location, over_location, src_control, over_control, params)
/obj/screen/movable/action_button
/obj/screen/movable/action_button/Click(location,control,params)
/obj/screen/movable/action_button/UpdateIcon()
/obj/screen/movable/action_button/hide_toggle
/obj/screen/movable/action_button/hide_toggle/Click()
/obj/screen/movable/action_button/hide_toggle/InitialiseIcon(var/mob/living/user)
/obj/screen/movable/action_button/hide_toggle/UpdateIcon()
/obj/screen/movable/snap
/obj/screen/pull
/obj/screen/pull/Click()
/obj/screen/pull/update_icon(mob/mymob)
/obj/screen/resist
/obj/screen/resist/Click()
/obj/screen/robot
/obj/screen/robot/module
/obj/screen/robot/module/Click()
/obj/screen/robot/module1
/obj/screen/robot/module1/Click()
/obj/screen/robot/module2
/obj/screen/robot/module2/Click()
/obj/screen/robot/module3
/obj/screen/robot/module3/Click()
/obj/screen/robot/radio
/obj/screen/robot/radio/Click()
/obj/screen/robot/store
/obj/screen/robot/store/Click()
/obj/screen/storage
/obj/screen/storage/Click(location, control, params)
/obj/screen/text
/obj/screen/throw_catch
/obj/screen/throw_catch/Click()
/obj/screen/zone_sel
/obj/screen/zone_sel/Click(location, control,params)
/obj/screen/zone_sel/alien/update_icon()
/obj/screen/zone_sel/update_icon()
/obj/singularity
/obj/singularity/Bump(atom/A)
/obj/singularity/Bumped(atom/A)
/obj/singularity/Destroy()
/obj/singularity/Move(atom/newloc, direct)
/obj/singularity/New(loc, var/starting_energy = 50, var/temp = 0)
/obj/singularity/Process_Spacemove()
/obj/singularity/academy
/obj/singularity/academy/admin_investigate_setup()
/obj/singularity/academy/process()
/obj/singularity/admin_investigate_setup()
/obj/singularity/attack_ai()
/obj/singularity/attack_hand(mob/user as mob)
/obj/singularity/blob_act(severity)
/obj/singularity/bullet_act(obj/item/projectile/P)
/obj/singularity/can_move(var/turf/T)
/obj/singularity/check_energy()
/obj/singularity/check_turfs_in(var/direction = 0, var/step = 0)
/obj/singularity/combust_mobs()
/obj/singularity/consume(var/atom/A)
/obj/singularity/dissipate()
/obj/singularity/eat()
/obj/singularity/emp_area()
/obj/singularity/event()
/obj/singularity/ex_act(severity, target)
/obj/singularity/expand(var/force_size = 0)
/obj/singularity/mezzer()
/obj/singularity/move(var/force_move = 0)
/obj/singularity/narsie
/obj/singularity/narsie/Bump(atom/A)
/obj/singularity/narsie/Bumped(atom/A)
/obj/singularity/narsie/acquire(var/mob/food)
/obj/singularity/narsie/consume(var/atom/A)
/obj/singularity/narsie/ex_act()
/obj/singularity/narsie/godsmack(var/atom/A)
/obj/singularity/narsie/large
/obj/singularity/narsie/large/New()
/obj/singularity/narsie/large/attack_ghost(mob/dead/observer/user as mob)
/obj/singularity/narsie/mezzer()
/obj/singularity/narsie/narsie_spawn_animation()
/obj/singularity/narsie/pickcultist()
/obj/singularity/narsie/process()
/obj/singularity/narsie/sc_Narsie
/obj/singularity/narsie/sc_Narsie/admin_investigate_setup()
/obj/singularity/narsie/sc_Narsie/consume(var/atom/A)
/obj/singularity/narsie/sc_Narsie/ex_act()
/obj/singularity/narsie/sc_Narsie/process()
/obj/singularity/narsie/wizard
/obj/singularity/narsie/wizard/eat()
/obj/singularity/process()
/obj/singularity/pulse()
/obj/singularity/singularity_act()
/obj/singularity/toxmob()
/obj/singularity_act()
/obj/singularity_pull(S, current_size)
/obj/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/obj/structure
/obj/structure/AIcore
/obj/structure/AIcore/attackby(obj/item/P as obj, mob/user as mob, params)
/obj/structure/AIcore/deactivated
/obj/structure/AIcore/deactivated/attackby(var/obj/item/A as obj, var/mob/user as mob, params)
/obj/structure/AIcore/deactivated/transfer_ai(var/interaction, var/mob/user, var/mob/living/silicon/ai/AI, var/obj/item/device/aicard/card)
/obj/structure/Destroy()
/obj/structure/New()
/obj/structure/alien
/obj/structure/alien/egg
/obj/structure/alien/egg/Burst(var/kill = 1)
/obj/structure/alien/egg/GetFacehugger()
/obj/structure/alien/egg/Grow()
/obj/structure/alien/egg/HasProximity(atom/movable/AM)
/obj/structure/alien/egg/New()
/obj/structure/alien/egg/attack_hand(mob/user)
/obj/structure/alien/egg/attack_paw(mob/user)
/obj/structure/alien/egg/attackby(obj/item/I, mob/user, params)
/obj/structure/alien/egg/bullet_act(obj/item/projectile/Proj)
/obj/structure/alien/egg/healthcheck()
/obj/structure/alien/egg/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/alien/resin
/obj/structure/alien/resin/CanAtmosPass()
/obj/structure/alien/resin/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/alien/resin/Destroy()
/obj/structure/alien/resin/Move()
/obj/structure/alien/resin/New(location)
/obj/structure/alien/resin/attack_alien(mob/living/user)
/obj/structure/alien/resin/attack_hulk(mob/living/carbon/human/user)
/obj/structure/alien/resin/attack_paw(mob/user)
/obj/structure/alien/resin/attackby(obj/item/I, mob/living/user, params)
/obj/structure/alien/resin/blob_act()
/obj/structure/alien/resin/bullet_act(obj/item/projectile/Proj)
/obj/structure/alien/resin/ex_act(severity, target)
/obj/structure/alien/resin/healthcheck()
/obj/structure/alien/resin/hitby(atom/movable/AM)
/obj/structure/alien/resin/membrane
/obj/structure/alien/resin/membrane/New()
/obj/structure/alien/resin/relativewall()
/obj/structure/alien/resin/wall
/obj/structure/alien/resin/wall/BlockSuperconductivity()
/obj/structure/alien/resin/wall/New()
/obj/structure/alien/resin/wall/shadowling
/obj/structure/alien/weeds
/obj/structure/alien/weeds/Destroy()
/obj/structure/alien/weeds/Life()
/obj/structure/alien/weeds/New(pos, node)
/obj/structure/alien/weeds/attackby(obj/item/I, mob/user, params)
/obj/structure/alien/weeds/ex_act(severity, target)
/obj/structure/alien/weeds/fullUpdateWeedOverlays()
/obj/structure/alien/weeds/healthcheck()
/obj/structure/alien/weeds/node
/obj/structure/alien/weeds/node/New()
/obj/structure/alien/weeds/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/alien/weeds/updateWeedOverlays()
/obj/structure/artilleryplaceholder
/obj/structure/artilleryplaceholder/decorative
/obj/structure/barricade/wooden
/obj/structure/barricade/wooden/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/barricade/wooden/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/structure/barricade/wooden/blob_act()
/obj/structure/barricade/wooden/ex_act(severity, target)
/obj/structure/bedsheetbin
/obj/structure/bedsheetbin/attack_hand(mob/user as mob)
/obj/structure/bedsheetbin/attack_paw(mob/user as mob)
/obj/structure/bedsheetbin/attack_tk(mob/user as mob)
/obj/structure/bedsheetbin/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/structure/bedsheetbin/examine(mob/user)
/obj/structure/bedsheetbin/update_icon()
/obj/structure/bigDelivery
/obj/structure/bigDelivery/Destroy()
/obj/structure/bigDelivery/attack_hand(mob/user as mob)
/obj/structure/bigDelivery/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/structure/blob_act()
/obj/structure/bodycontainer
/obj/structure/bodycontainer/Destroy()
/obj/structure/bodycontainer/New()
/obj/structure/bodycontainer/alter_health()
/obj/structure/bodycontainer/attack_hand(mob/user as mob)
/obj/structure/bodycontainer/attack_paw(mob/user as mob)
/obj/structure/bodycontainer/attackby(P as obj, mob/user as mob, params)
/obj/structure/bodycontainer/close()
/obj/structure/bodycontainer/container_resist()
/obj/structure/bodycontainer/crematorium
/obj/structure/bodycontainer/crematorium/Destroy()
/obj/structure/bodycontainer/crematorium/New()
/obj/structure/bodycontainer/crematorium/cremate(mob/user as mob)
/obj/structure/bodycontainer/crematorium/update_icon()
/obj/structure/bodycontainer/morgue
/obj/structure/bodycontainer/morgue/New()
/obj/structure/bodycontainer/morgue/update_icon()
/obj/structure/bodycontainer/on_log()
/obj/structure/bodycontainer/open()
/obj/structure/bodycontainer/update_icon()
/obj/structure/bookcase
/obj/structure/bookcase/attack_hand(mob/user)
/obj/structure/bookcase/attackby(obj/item/I, mob/user, params)
/obj/structure/bookcase/ex_act(severity, target)
/obj/structure/bookcase/initialize()
/obj/structure/bookcase/manuals/engineering
/obj/structure/bookcase/manuals/engineering/New()
/obj/structure/bookcase/manuals/medical
/obj/structure/bookcase/manuals/medical/New()
/obj/structure/bookcase/manuals/research_and_development
/obj/structure/bookcase/manuals/research_and_development/New()
/obj/structure/bookcase/update_icon()
/obj/structure/c_transit_tube
/obj/structure/c_transit_tube/attackby(var/obj/item/I, var/mob/user, params)
/obj/structure/c_transit_tube/buildtube()
/obj/structure/c_transit_tube/station
/obj/structure/c_transit_tube/station/block
/obj/structure/c_transit_tube/station/block/buildtube()
/obj/structure/c_transit_tube/station/buildtube()
/obj/structure/c_transit_tube/station/reverse
/obj/structure/c_transit_tube/station/reverse/buildtube()
/obj/structure/c_transit_tube/station/tube_flip()
/obj/structure/c_transit_tube/station/tube_turn(var/angle)
/obj/structure/c_transit_tube/tube_flip()
/obj/structure/c_transit_tube/tube_turn(var/angle)
/obj/structure/c_transit_tube/verb/flip()
/obj/structure/c_transit_tube/verb/rotate()
/obj/structure/c_transit_tube/verb/rotate_ccw()
/obj/structure/c_transit_tube_pod
/obj/structure/cable
/obj/structure/cable/Deconstruct()
/obj/structure/cable/Destroy()
/obj/structure/cable/New()
/obj/structure/cable/add_avail(var/amount)
/obj/structure/cable/add_load(var/amount)
/obj/structure/cable/attack_tk(mob/user)
/obj/structure/cable/attackby(obj/item/W, mob/user, params)
/obj/structure/cable/avail()
/obj/structure/cable/blue
/obj/structure/cable/cableColor(var/colorC = "red")
/obj/structure/cable/cut_cable_from_powernet()
/obj/structure/cable/cyan
/obj/structure/cable/denode()
/obj/structure/cable/ex_act(severity, target)
/obj/structure/cable/get_connections(var/powernetless_only = 0)
/obj/structure/cable/get_powernet()
/obj/structure/cable/green
/obj/structure/cable/hide(var/i)
/obj/structure/cable/mergeConnectedNetworks(var/direction)
/obj/structure/cable/mergeConnectedNetworksOnTurf()
/obj/structure/cable/mergeDiagonalsNetworks(var/direction)
/obj/structure/cable/ninjadrain_act(var/obj/item/clothing/suit/space/space_ninja/S, var/mob/living/carbon/human/H, var/obj/item/clothing/gloves/space_ninja/G)
/obj/structure/cable/orange
/obj/structure/cable/pink
/obj/structure/cable/proc/cut_cable_from_powernet()
/obj/structure/cable/shock(mob/user, prb, var/siemens_coeff = 1.0)
/obj/structure/cable/singularity_pull(S, current_size)
/obj/structure/cable/surplus()
/obj/structure/cable/update_stored(var/length = 1, var/color = "red")
/obj/structure/cable/updateicon()
/obj/structure/cable/white
/obj/structure/cable/yellow
/obj/structure/closet
/obj/structure/closet/AltClick(var/mob/user)
/obj/structure/closet/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/closet/Exit(atom/movable/AM)
/obj/structure/closet/MouseDrop_T(atom/movable/O as mob|obj, mob/user as mob, var/needs_opened = 1, var/show_message = 1, var/move_them = 1)
/obj/structure/closet/New()
/obj/structure/closet/abductor
/obj/structure/closet/acloset
/obj/structure/closet/alter_health()
/obj/structure/closet/ammunitionlocker
/obj/structure/closet/ammunitionlocker/New()
/obj/structure/closet/athletic_mixed
/obj/structure/closet/athletic_mixed/New()
/obj/structure/closet/attack_animal(mob/living/simple_animal/user as mob)
/obj/structure/closet/attack_hand(mob/user as mob)
/obj/structure/closet/attack_paw(mob/user as mob)
/obj/structure/closet/attack_self_tk(mob/user as mob)
/obj/structure/closet/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/closet/blob_act()
/obj/structure/closet/body_bag
/obj/structure/closet/body_bag/MouseDrop(over_object, src_location, over_location)
/obj/structure/closet/body_bag/attackby(obj/item/I, mob/user, params)
/obj/structure/closet/body_bag/bluespace
/obj/structure/closet/body_bag/close()
/obj/structure/closet/bombcloset
/obj/structure/closet/bombcloset/New()
/obj/structure/closet/bombclosetsecurity
/obj/structure/closet/bombclosetsecurity/New()
/obj/structure/closet/boxinggloves
/obj/structure/closet/boxinggloves/New()
/obj/structure/closet/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/closet/cabinet
/obj/structure/closet/can_close()
/obj/structure/closet/can_open()
/obj/structure/closet/chefcloset
/obj/structure/closet/chefcloset/New()
/obj/structure/closet/close()
/obj/structure/closet/coffin
/obj/structure/closet/container_resist()
/obj/structure/closet/crate
/obj/structure/closet/crate/New()
/obj/structure/closet/crate/attack_hand(mob/user as mob)
/obj/structure/closet/crate/attack_paw(mob/user as mob)
/obj/structure/closet/crate/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/closet/crate/bin
/obj/structure/closet/crate/bin/MouseDrop_T(atom/movable/O as mob|obj, mob/user as mob)
/obj/structure/closet/crate/bin/New()
/obj/structure/closet/crate/bin/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/closet/crate/bin/close()
/obj/structure/closet/crate/bin/do_animate()
/obj/structure/closet/crate/bin/insert(var/obj/item/I, var/include_mobs = 0, var/animate = 0)
/obj/structure/closet/crate/bin/open()
/obj/structure/closet/crate/bin/place(var/mob/user, var/obj/item/I)
/obj/structure/closet/crate/bin/update_icon()
/obj/structure/closet/crate/close()
/obj/structure/closet/crate/freezer
/obj/structure/closet/crate/freezer/return_air()
/obj/structure/closet/crate/hydroponics
/obj/structure/closet/crate/hydroponics/prespawned
/obj/structure/closet/crate/hydroponics/prespawned/New()
/obj/structure/closet/crate/insert(var/atom/movable/AM, var/include_mobs = 0)
/obj/structure/closet/crate/internals
/obj/structure/closet/crate/juice/New()
/obj/structure/closet/crate/medical
/obj/structure/closet/crate/miningcar
/obj/structure/closet/crate/open()
/obj/structure/closet/crate/radiation
/obj/structure/closet/crate/radiation/New()
/obj/structure/closet/crate/rcd
/obj/structure/closet/crate/rcd/New()
/obj/structure/closet/crate/secure
/obj/structure/closet/crate/secure/attack_hand(mob/user as mob)
/obj/structure/closet/crate/secure/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/closet/crate/secure/emag_act(mob/user as mob)
/obj/structure/closet/crate/secure/emp_act(severity)
/obj/structure/closet/crate/secure/gear
/obj/structure/closet/crate/secure/hydrosec
/obj/structure/closet/crate/secure/plasma
/obj/structure/closet/crate/secure/update_icon()
/obj/structure/closet/crate/secure/weapon
/obj/structure/closet/crate/tear_manifest(mob/user as mob)
/obj/structure/closet/crate/trashcart
/obj/structure/closet/crate/update_icon()
/obj/structure/closet/critter
/obj/structure/closet/critter/attack_hand(mob/user as mob)
/obj/structure/closet/critter/butterfly
/obj/structure/closet/critter/can_open()
/obj/structure/closet/critter/cat
/obj/structure/closet/critter/cat/New()
/obj/structure/closet/critter/chick
/obj/structure/closet/critter/chick/New()
/obj/structure/closet/critter/close()
/obj/structure/closet/critter/corgi
/obj/structure/closet/critter/corgi/New()
/obj/structure/closet/critter/cow
/obj/structure/closet/critter/fox
/obj/structure/closet/critter/goat
/obj/structure/closet/critter/open()
/obj/structure/closet/critter/pug
/obj/structure/closet/dump_contents()
/obj/structure/closet/emag_act(mob/user as mob)
/obj/structure/closet/emcloset
/obj/structure/closet/emcloset/New()
/obj/structure/closet/emp_act(severity)
/obj/structure/closet/ex_act(severity, target)
/obj/structure/closet/examine(mob/user)
/obj/structure/closet/firecloset
/obj/structure/closet/firecloset/New()
/obj/structure/closet/firecloset/full/New()
/obj/structure/closet/gimmick
/obj/structure/closet/gimmick/russian
/obj/structure/closet/gimmick/russian/New()
/obj/structure/closet/gimmick/tacticool
/obj/structure/closet/gimmick/tacticool/New()
/obj/structure/closet/gmcloset
/obj/structure/closet/gmcloset/New()
/obj/structure/closet/initialize()
/obj/structure/closet/insert(var/atom/movable/AM)
/obj/structure/closet/jcloset
/obj/structure/closet/jcloset/New()
/obj/structure/closet/l3closet
/obj/structure/closet/l3closet/New()
/obj/structure/closet/l3closet/janitor
/obj/structure/closet/l3closet/janitor/New()
/obj/structure/closet/l3closet/scientist
/obj/structure/closet/l3closet/scientist/New()
/obj/structure/closet/l3closet/security
/obj/structure/closet/l3closet/security/New()
/obj/structure/closet/l3closet/virology
/obj/structure/closet/l3closet/virology/New()
/obj/structure/closet/lasertag/blue
/obj/structure/closet/lasertag/blue/New()
/obj/structure/closet/lasertag/red
/obj/structure/closet/lasertag/red/New()
/obj/structure/closet/lawcloset
/obj/structure/closet/lawcloset/New()
/obj/structure/closet/malf/suits
/obj/structure/closet/malf/suits/New()
/obj/structure/closet/masks
/obj/structure/closet/masks/New()
/obj/structure/closet/open()
/obj/structure/closet/place(var/mob/user, var/obj/item/I)
/obj/structure/closet/radiation
/obj/structure/closet/radiation/New()
/obj/structure/closet/relaymove(mob/user as mob)
/obj/structure/closet/secure_closet
/obj/structure/closet/secure_closet/CMO
/obj/structure/closet/secure_closet/CMO/New()
/obj/structure/closet/secure_closet/RD
/obj/structure/closet/secure_closet/RD/New()
/obj/structure/closet/secure_closet/animal
/obj/structure/closet/secure_closet/animal/New()
/obj/structure/closet/secure_closet/atmospherics
/obj/structure/closet/secure_closet/atmospherics/New()
/obj/structure/closet/secure_closet/bar
/obj/structure/closet/secure_closet/bar/New()
/obj/structure/closet/secure_closet/brig
/obj/structure/closet/secure_closet/brig/New()
/obj/structure/closet/secure_closet/captains
/obj/structure/closet/secure_closet/captains/New()
/obj/structure/closet/secure_closet/cargotech
/obj/structure/closet/secure_closet/cargotech/New()
/obj/structure/closet/secure_closet/chemical
/obj/structure/closet/secure_closet/chemical/New()
/obj/structure/closet/secure_closet/courtroom
/obj/structure/closet/secure_closet/courtroom/New()
/obj/structure/closet/secure_closet/detective
/obj/structure/closet/secure_closet/detective/New()
/obj/structure/closet/secure_closet/engineering_chief
/obj/structure/closet/secure_closet/engineering_chief/New()
/obj/structure/closet/secure_closet/engineering_electrical
/obj/structure/closet/secure_closet/engineering_electrical/New()
/obj/structure/closet/secure_closet/engineering_personal
/obj/structure/closet/secure_closet/engineering_personal/New()
/obj/structure/closet/secure_closet/engineering_welding
/obj/structure/closet/secure_closet/engineering_welding/New()
/obj/structure/closet/secure_closet/ertCom
/obj/structure/closet/secure_closet/ertCom/New()
/obj/structure/closet/secure_closet/ertEngi
/obj/structure/closet/secure_closet/ertEngi/New()
/obj/structure/closet/secure_closet/ertMed
/obj/structure/closet/secure_closet/ertMed/New()
/obj/structure/closet/secure_closet/ertSec
/obj/structure/closet/secure_closet/ertSec/New()
/obj/structure/closet/secure_closet/exile
/obj/structure/closet/secure_closet/exile/New()
/obj/structure/closet/secure_closet/freezer
/obj/structure/closet/secure_closet/freezer/fridge
/obj/structure/closet/secure_closet/freezer/fridge/New()
/obj/structure/closet/secure_closet/freezer/kitchen
/obj/structure/closet/secure_closet/freezer/kitchen/New()
/obj/structure/closet/secure_closet/freezer/kitchen/mining
/obj/structure/closet/secure_closet/freezer/meat
/obj/structure/closet/secure_closet/freezer/meat/New()
/obj/structure/closet/secure_closet/freezer/money
/obj/structure/closet/secure_closet/freezer/money/New()
/obj/structure/closet/secure_closet/hop
/obj/structure/closet/secure_closet/hop/New()
/obj/structure/closet/secure_closet/hos
/obj/structure/closet/secure_closet/hos/New()
/obj/structure/closet/secure_closet/hydroponics
/obj/structure/closet/secure_closet/hydroponics/New()
/obj/structure/closet/secure_closet/injection
/obj/structure/closet/secure_closet/injection/New()
/obj/structure/closet/secure_closet/medical1
/obj/structure/closet/secure_closet/medical1/New()
/obj/structure/closet/secure_closet/medical2
/obj/structure/closet/secure_closet/medical2/New()
/obj/structure/closet/secure_closet/medical3
/obj/structure/closet/secure_closet/medical3/New()
/obj/structure/closet/secure_closet/miner
/obj/structure/closet/secure_closet/miner/New()
/obj/structure/closet/secure_closet/personal
/obj/structure/closet/secure_closet/personal/New()
/obj/structure/closet/secure_closet/personal/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/structure/closet/secure_closet/personal/cabinet
/obj/structure/closet/secure_closet/personal/cabinet/New()
/obj/structure/closet/secure_closet/personal/patient
/obj/structure/closet/secure_closet/personal/patient/New()
/obj/structure/closet/secure_closet/quartermaster
/obj/structure/closet/secure_closet/quartermaster/New()
/obj/structure/closet/secure_closet/scientist
/obj/structure/closet/secure_closet/scientist/New()
/obj/structure/closet/secure_closet/security
/obj/structure/closet/secure_closet/security/New()
/obj/structure/closet/secure_closet/security/cargo
/obj/structure/closet/secure_closet/security/cargo/New()
/obj/structure/closet/secure_closet/security/engine
/obj/structure/closet/secure_closet/security/engine/New()
/obj/structure/closet/secure_closet/security/med
/obj/structure/closet/secure_closet/security/med/New()
/obj/structure/closet/secure_closet/security/science
/obj/structure/closet/secure_closet/security/science/New()
/obj/structure/closet/secure_closet/security/sec
/obj/structure/closet/secure_closet/security/sec/New()
/obj/structure/closet/secure_closet/warden
/obj/structure/closet/secure_closet/warden/New()
/obj/structure/closet/statue
/obj/structure/closet/statue/MouseDrop_T()
/obj/structure/closet/statue/New(loc, var/mob/living/L)
/obj/structure/closet/statue/attack_animal(mob/living/simple_animal/user as mob)
/obj/structure/closet/statue/attack_hand()
/obj/structure/closet/statue/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/structure/closet/statue/blob_act()
/obj/structure/closet/statue/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/closet/statue/close()
/obj/structure/closet/statue/container_resist()
/obj/structure/closet/statue/dump_contents()
/obj/structure/closet/statue/insert()
/obj/structure/closet/statue/open()
/obj/structure/closet/statue/place()
/obj/structure/closet/statue/process()
/obj/structure/closet/statue/relaymove()
/obj/structure/closet/statue/shatter(mob/user as mob)
/obj/structure/closet/statue/take_contents()
/obj/structure/closet/statue/toggle()
/obj/structure/closet/statue/update_icon()
/obj/structure/closet/statue/verb_toggleopen()
/obj/structure/closet/syndicate
/obj/structure/closet/syndicate/nuclear
/obj/structure/closet/syndicate/nuclear/New()
/obj/structure/closet/syndicate/personal
/obj/structure/closet/syndicate/personal/New()
/obj/structure/closet/syndicate/resources
/obj/structure/closet/syndicate/resources/New()
/obj/structure/closet/syndicate/resources/everything
/obj/structure/closet/syndicate/resources/everything/New()
/obj/structure/closet/take_contents()
/obj/structure/closet/thunderdome
/obj/structure/closet/thunderdome/tdgreen
/obj/structure/closet/thunderdome/tdgreen/New()
/obj/structure/closet/thunderdome/tdred
/obj/structure/closet/thunderdome/tdred/New()
/obj/structure/closet/toggle()
/obj/structure/closet/togglelock(mob/user as mob)
/obj/structure/closet/toolcloset
/obj/structure/closet/toolcloset/New()
/obj/structure/closet/update_icon()
/obj/structure/closet/verb/verb_toggleopen()
/obj/structure/closet/wardrobe
/obj/structure/closet/wardrobe/New()
/obj/structure/closet/wardrobe/atmospherics_yellow
/obj/structure/closet/wardrobe/atmospherics_yellow/New()
/obj/structure/closet/wardrobe/black
/obj/structure/closet/wardrobe/black/New()
/obj/structure/closet/wardrobe/chaplain_black
/obj/structure/closet/wardrobe/chaplain_black/New()
/obj/structure/closet/wardrobe/chemistry_white
/obj/structure/closet/wardrobe/chemistry_white/New()
/obj/structure/closet/wardrobe/engineering_yellow
/obj/structure/closet/wardrobe/engineering_yellow/New()
/obj/structure/closet/wardrobe/genetics_white
/obj/structure/closet/wardrobe/genetics_white/New()
/obj/structure/closet/wardrobe/green
/obj/structure/closet/wardrobe/green/New()
/obj/structure/closet/wardrobe/grey
/obj/structure/closet/wardrobe/grey/New()
/obj/structure/closet/wardrobe/mixed
/obj/structure/closet/wardrobe/mixed/New()
/obj/structure/closet/wardrobe/orange
/obj/structure/closet/wardrobe/orange/New()
/obj/structure/closet/wardrobe/pink
/obj/structure/closet/wardrobe/pink/New()
/obj/structure/closet/wardrobe/pjs
/obj/structure/closet/wardrobe/pjs/New()
/obj/structure/closet/wardrobe/red
/obj/structure/closet/wardrobe/red/New()
/obj/structure/closet/wardrobe/robotics_black
/obj/structure/closet/wardrobe/robotics_black/New()
/obj/structure/closet/wardrobe/toxins_white
/obj/structure/closet/wardrobe/toxins_white/New()
/obj/structure/closet/wardrobe/virology_white
/obj/structure/closet/wardrobe/virology_white/New()
/obj/structure/closet/wardrobe/white
/obj/structure/closet/wardrobe/white/New()
/obj/structure/closet/wardrobe/white/medical
/obj/structure/closet/wardrobe/white/medical/New()
/obj/structure/closet/wardrobe/yellow
/obj/structure/closet/wardrobe/yellow/New()
/obj/structure/computerframe
/obj/structure/computerframe/attackby(obj/item/P as obj, mob/user as mob, params)
/obj/structure/constructshell
/obj/structure/constructshell/attackby(obj/item/O as obj, mob/user as mob, params)
/obj/structure/constructshell/attackby(obj/item/O as obj, mob/user as mob, params)/switch(choice)
/obj/structure/cult
/obj/structure/cult/forge
/obj/structure/cult/pylon
/obj/structure/cult/talisman
/obj/structure/cult/tome
/obj/structure/cultgirder
/obj/structure/cultgirder/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/structure/cultgirder/blob_act()
/obj/structure/cultgirder/ex_act(severity, target)
/obj/structure/dispenser
/obj/structure/dispenser/New()
/obj/structure/dispenser/Topic(href, href_list)
/obj/structure/dispenser/attack_hand(mob/user as mob)
/obj/structure/dispenser/attack_paw(mob/user as mob)
/obj/structure/dispenser/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/structure/dispenser/oxygen
/obj/structure/dispenser/plasma
/obj/structure/dispenser/update_icon()
/obj/structure/displaycase
/obj/structure/displaycase/attack_hand(mob/user as mob)
/obj/structure/displaycase/attack_paw(mob/user as mob)
/obj/structure/displaycase/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/displaycase/blob_act()
/obj/structure/displaycase/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/displaycase/ex_act(severity, target)
/obj/structure/displaycase/healthcheck()
/obj/structure/displaycase/update_icon()
/obj/structure/disposalconstruct
/obj/structure/disposalconstruct/New(var/loc, var/pipe_type, var/direction = 1)
/obj/structure/disposalconstruct/attackby(var/obj/item/I, var/mob/user, params)
/obj/structure/disposalconstruct/can_place()
/obj/structure/disposalconstruct/dpipetype()
/obj/structure/disposalconstruct/hide(var/intact)
/obj/structure/disposalconstruct/is_pipe()
/obj/structure/disposalconstruct/update()
/obj/structure/disposalconstruct/verb/flip()
/obj/structure/disposalconstruct/verb/rotate()
/obj/structure/disposalholder
/obj/structure/disposalholder/Destroy()
/obj/structure/disposalholder/allow_drop()
/obj/structure/disposalholder/findpipe(var/turf/T)
/obj/structure/disposalholder/init(var/obj/machinery/disposal/D)
/obj/structure/disposalholder/merge(var/obj/structure/disposalholder/other)
/obj/structure/disposalholder/move()
/obj/structure/disposalholder/nextloc()
/obj/structure/disposalholder/relaymove(mob/user as mob)
/obj/structure/disposalholder/start(var/obj/machinery/disposal/D)
/obj/structure/disposalholder/vent_gas(var/atom/location)
/obj/structure/disposaloutlet
/obj/structure/disposaloutlet/Destroy()
/obj/structure/disposaloutlet/New(loc, var/obj/structure/disposalconstruct/make_from)
/obj/structure/disposaloutlet/attackby(var/obj/item/I, var/mob/user, params)
/obj/structure/disposaloutlet/expel(var/obj/structure/disposalholder/H)
/obj/structure/disposalpipe
/obj/structure/disposalpipe/Deconstruct()
/obj/structure/disposalpipe/Destroy()
/obj/structure/disposalpipe/New(loc,var/obj/structure/disposalconstruct/make_from)
/obj/structure/disposalpipe/attackby(var/obj/item/I, var/mob/user, params)
/obj/structure/disposalpipe/broken
/obj/structure/disposalpipe/broken(var/remains = 0)
/obj/structure/disposalpipe/broken/Deconstruct()
/obj/structure/disposalpipe/broken/New()
/obj/structure/disposalpipe/ex_act(severity, target)
/obj/structure/disposalpipe/expel(var/obj/structure/disposalholder/H, var/turf/T, var/direction)
/obj/structure/disposalpipe/healthcheck()
/obj/structure/disposalpipe/hide(var/intact)
/obj/structure/disposalpipe/junction
/obj/structure/disposalpipe/junction/New()
/obj/structure/disposalpipe/junction/nextdir(var/fromdir)
/obj/structure/disposalpipe/nextdir(var/fromdir)
/obj/structure/disposalpipe/segment
/obj/structure/disposalpipe/segment/New()
/obj/structure/disposalpipe/singularity_pull(S, current_size)
/obj/structure/disposalpipe/sortjunction
/obj/structure/disposalpipe/sortjunction/New()
/obj/structure/disposalpipe/sortjunction/attackby(var/obj/item/I, var/mob/user, params)
/obj/structure/disposalpipe/sortjunction/nextdir(var/fromdir, var/sortTag)
/obj/structure/disposalpipe/sortjunction/transfer(var/obj/structure/disposalholder/H)
/obj/structure/disposalpipe/sortjunction/updatedesc()
/obj/structure/disposalpipe/sortjunction/updatedir()
/obj/structure/disposalpipe/transfer(var/obj/structure/disposalholder/H)
/obj/structure/disposalpipe/trunk
/obj/structure/disposalpipe/trunk/New()
/obj/structure/disposalpipe/trunk/attackby(var/obj/item/I, var/mob/user, params)
/obj/structure/disposalpipe/trunk/getlinked()
/obj/structure/disposalpipe/trunk/nextdir(var/fromdir)
/obj/structure/disposalpipe/trunk/transfer(var/obj/structure/disposalholder/H)
/obj/structure/disposalpipe/update()
/obj/structure/disposalpipe/updateicon()
/obj/structure/disposalpipe/wrapsortjunction
/obj/structure/disposalpipe/wrapsortjunction/New()
/obj/structure/disposalpipe/wrapsortjunction/nextdir(var/fromdir, var/istomail)
/obj/structure/disposalpipe/wrapsortjunction/transfer(var/obj/structure/disposalholder/H)
/obj/structure/door_assembly
/obj/structure/door_assembly/New()
/obj/structure/door_assembly/attack_hand()
/obj/structure/door_assembly/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/structure/door_assembly/door_assembly_0
/obj/structure/door_assembly/door_assembly_atmo
/obj/structure/door_assembly/door_assembly_atmo/glass
/obj/structure/door_assembly/door_assembly_clown
/obj/structure/door_assembly/door_assembly_com
/obj/structure/door_assembly/door_assembly_com/glass
/obj/structure/door_assembly/door_assembly_diamond
/obj/structure/door_assembly/door_assembly_eng
/obj/structure/door_assembly/door_assembly_eng/glass
/obj/structure/door_assembly/door_assembly_ext
/obj/structure/door_assembly/door_assembly_fre
/obj/structure/door_assembly/door_assembly_glass
/obj/structure/door_assembly/door_assembly_gold
/obj/structure/door_assembly/door_assembly_hatch
/obj/structure/door_assembly/door_assembly_highsecurity
/obj/structure/door_assembly/door_assembly_mai
/obj/structure/door_assembly/door_assembly_med
/obj/structure/door_assembly/door_assembly_med/glass
/obj/structure/door_assembly/door_assembly_mhatch
/obj/structure/door_assembly/door_assembly_min
/obj/structure/door_assembly/door_assembly_min/glass
/obj/structure/door_assembly/door_assembly_plasma
/obj/structure/door_assembly/door_assembly_research
/obj/structure/door_assembly/door_assembly_research/glass
/obj/structure/door_assembly/door_assembly_sandstone
/obj/structure/door_assembly/door_assembly_science
/obj/structure/door_assembly/door_assembly_science/glass
/obj/structure/door_assembly/door_assembly_sec
/obj/structure/door_assembly/door_assembly_sec/glass
/obj/structure/door_assembly/door_assembly_shuttle
/obj/structure/door_assembly/door_assembly_silver
/obj/structure/door_assembly/door_assembly_uranium
/obj/structure/door_assembly/door_assembly_vault
/obj/structure/door_assembly/door_assembly_viro
/obj/structure/door_assembly/door_assembly_viro/glass
/obj/structure/door_assembly/door_assembly_wood
/obj/structure/dresser
/obj/structure/dresser/attack_hand(mob/user as mob)
/obj/structure/easel
/obj/structure/easel/Move()
/obj/structure/easel/attackby(var/obj/item/I, var/mob/user, params)
/obj/structure/extinguisher_cabinet
/obj/structure/extinguisher_cabinet/attack_hand(mob/user)
/obj/structure/extinguisher_cabinet/attack_paw(mob/user)
/obj/structure/extinguisher_cabinet/attack_tk(mob/user)
/obj/structure/extinguisher_cabinet/attackby(obj/item/O, mob/user, params)
/obj/structure/extinguisher_cabinet/ex_act(severity, target)
/obj/structure/extinguisher_cabinet/update_icon()
/obj/structure/falsewall
/obj/structure/falsewall/ChangeToWall(delete = 1)
/obj/structure/falsewall/Destroy()
/obj/structure/falsewall/New()
/obj/structure/falsewall/attack_hand(mob/user)
/obj/structure/falsewall/attackby(obj/item/weapon/W, mob/user, params)
/obj/structure/falsewall/clown
/obj/structure/falsewall/diamond
/obj/structure/falsewall/dismantle(mob/user)
/obj/structure/falsewall/do_the_flick()
/obj/structure/falsewall/gold
/obj/structure/falsewall/plasma
/obj/structure/falsewall/plasma/attackby(obj/item/weapon/W, mob/user, params)
/obj/structure/falsewall/plasma/burnbabyburn(user)
/obj/structure/falsewall/plasma/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/falsewall/reinforced
/obj/structure/falsewall/reinforced/ChangeToWall(delete = 1)
/obj/structure/falsewall/reinforced/do_the_flick()
/obj/structure/falsewall/reinforced/update_icon(relativewall = 1)
/obj/structure/falsewall/relativewall()
/obj/structure/falsewall/sandstone
/obj/structure/falsewall/silver
/obj/structure/falsewall/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/obj/structure/falsewall/update_icon(relativewall = 1)
/obj/structure/falsewall/uranium
/obj/structure/falsewall/uranium/attack_hand(mob/user)
/obj/structure/falsewall/uranium/attackby(obj/item/weapon/W, mob/user, params)
/obj/structure/falsewall/uranium/radiate()
/obj/structure/falsewall/wood
/obj/structure/filingcabinet
/obj/structure/filingcabinet/Topic(href, href_list)
/obj/structure/filingcabinet/attack_hand(mob/user)
/obj/structure/filingcabinet/attack_self_tk(mob/user)
/obj/structure/filingcabinet/attack_tk(mob/user)
/obj/structure/filingcabinet/attackby(obj/item/P, mob/user, params)
/obj/structure/filingcabinet/chestdrawer
/obj/structure/filingcabinet/chestdrawer/wheeled
/obj/structure/filingcabinet/ex_act(severity, target)
/obj/structure/filingcabinet/filingcabinet
/obj/structure/filingcabinet/initialize()
/obj/structure/filingcabinet/medical
/obj/structure/filingcabinet/medical/attack_hand()
/obj/structure/filingcabinet/medical/attack_tk()
/obj/structure/filingcabinet/medical/populate()
/obj/structure/filingcabinet/security
/obj/structure/filingcabinet/security/attack_hand()
/obj/structure/filingcabinet/security/attack_tk()
/obj/structure/filingcabinet/security/populate()
/obj/structure/fireaxecabinet
/obj/structure/fireaxecabinet/New()
/obj/structure/fireaxecabinet/attack_ai(mob/user as mob)
/obj/structure/fireaxecabinet/attack_hand(mob/user as mob)
/obj/structure/fireaxecabinet/attack_paw(mob/user as mob)
/obj/structure/fireaxecabinet/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/structure/fireaxecabinet/blob_act()
/obj/structure/fireaxecabinet/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/fireaxecabinet/ex_act(severity, target)
/obj/structure/fireaxecabinet/toggle_lock(mob/user)
/obj/structure/fireaxecabinet/update_icon()
/obj/structure/fireaxecabinet/verb/toggle_open()
/obj/structure/flora/ausbushes
/obj/structure/flora/ausbushes/New()
/obj/structure/flora/ausbushes/brflowers
/obj/structure/flora/ausbushes/brflowers/New()
/obj/structure/flora/ausbushes/fernybush
/obj/structure/flora/ausbushes/fernybush/New()
/obj/structure/flora/ausbushes/fullgrass
/obj/structure/flora/ausbushes/fullgrass/New()
/obj/structure/flora/ausbushes/genericbush
/obj/structure/flora/ausbushes/genericbush/New()
/obj/structure/flora/ausbushes/grassybush
/obj/structure/flora/ausbushes/grassybush/New()
/obj/structure/flora/ausbushes/lavendergrass
/obj/structure/flora/ausbushes/lavendergrass/New()
/obj/structure/flora/ausbushes/leafybush
/obj/structure/flora/ausbushes/leafybush/New()
/obj/structure/flora/ausbushes/palebush
/obj/structure/flora/ausbushes/palebush/New()
/obj/structure/flora/ausbushes/pointybush
/obj/structure/flora/ausbushes/pointybush/New()
/obj/structure/flora/ausbushes/ppflowers
/obj/structure/flora/ausbushes/ppflowers/New()
/obj/structure/flora/ausbushes/reedbush
/obj/structure/flora/ausbushes/reedbush/New()
/obj/structure/flora/ausbushes/sparsegrass
/obj/structure/flora/ausbushes/sparsegrass/New()
/obj/structure/flora/ausbushes/stalkybush
/obj/structure/flora/ausbushes/stalkybush/New()
/obj/structure/flora/ausbushes/sunnybush
/obj/structure/flora/ausbushes/sunnybush/New()
/obj/structure/flora/ausbushes/ywflowers
/obj/structure/flora/ausbushes/ywflowers/New()
/obj/structure/flora/bush
/obj/structure/flora/bush/New()
/obj/structure/flora/grass
/obj/structure/flora/grass/both
/obj/structure/flora/grass/both/New()
/obj/structure/flora/grass/brown
/obj/structure/flora/grass/brown/New()
/obj/structure/flora/grass/green
/obj/structure/flora/grass/green/New()
/obj/structure/flora/kirbyplants
/obj/structure/flora/kirbyplants/dead
/obj/structure/flora/rock
/obj/structure/flora/rock/New()
/obj/structure/flora/rock/pile
/obj/structure/flora/rock/pile/New()
/obj/structure/flora/tree
/obj/structure/flora/tree/dead
/obj/structure/flora/tree/dead/New()
/obj/structure/flora/tree/festivus
/obj/structure/flora/tree/pine
/obj/structure/flora/tree/pine/New()
/obj/structure/flora/tree/pine/xmas
/obj/structure/flora/tree/pine/xmas/New()
/obj/structure/foamedmetal
/obj/structure/foamedmetal/CanAtmosPass()
/obj/structure/foamedmetal/CanPass(atom/movable/mover, turf/target, height=1.5)
/obj/structure/foamedmetal/Destroy()
/obj/structure/foamedmetal/Move()
/obj/structure/foamedmetal/New()
/obj/structure/foamedmetal/attack_alien(var/mob/living/carbon/alien/humanoid/user)
/obj/structure/foamedmetal/attack_animal(var/mob/living/simple_animal/user)
/obj/structure/foamedmetal/attack_hand(var/mob/user)
/obj/structure/foamedmetal/attack_hulk(mob/living/carbon/human/user)
/obj/structure/foamedmetal/attack_paw(var/mob/user)
/obj/structure/foamedmetal/attack_slime(var/mob/living/simple_animal/slime/user)
/obj/structure/foamedmetal/attackby(var/obj/item/I, var/mob/user, params)
/obj/structure/foamedmetal/blob_act()
/obj/structure/foamedmetal/bullet_act()
/obj/structure/foamedmetal/ex_act(severity, target)
/obj/structure/foamedmetal/updateicon()
/obj/structure/girder
/obj/structure/girder/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/girder/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/structure/girder/blob_act()
/obj/structure/girder/displaced
/obj/structure/girder/ex_act(severity, target)
/obj/structure/girder/reinforced
/obj/structure/girder/reinforced/ex_act(severity, target)
/obj/structure/grille
/obj/structure/grille/Break()
/obj/structure/grille/Bumped(atom/user)
/obj/structure/grille/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/grille/Deconstruct()
/obj/structure/grille/New()
/obj/structure/grille/attack_alien(mob/living/user as mob)
/obj/structure/grille/attack_animal(var/mob/living/simple_animal/M as mob)
/obj/structure/grille/attack_hand(mob/living/user as mob)
/obj/structure/grille/attack_hulk(mob/living/carbon/human/user)
/obj/structure/grille/attack_paw(mob/user as mob)
/obj/structure/grille/attack_slime(mob/living/simple_animal/slime/user as mob)
/obj/structure/grille/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/grille/blob_act()
/obj/structure/grille/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/grille/ex_act(severity, target)
/obj/structure/grille/healthcheck()
/obj/structure/grille/hitby(AM as mob|obj)
/obj/structure/grille/mech_melee_attack(obj/mecha/M)
/obj/structure/grille/shock(mob/user as mob, prb)
/obj/structure/grille/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/obj/structure/grille/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/guncase
/obj/structure/guncase/New()
/obj/structure/guncase/ShowWindow(mob/user)
/obj/structure/guncase/Topic(href, href_list)
/obj/structure/guncase/attack_hand(mob/user)
/obj/structure/guncase/attackby(obj/item/I, mob/user, params)
/obj/structure/guncase/ecase
/obj/structure/guncase/initialize()
/obj/structure/guncase/shotgun
/obj/structure/guncase/update_icon()
/obj/structure/hivebot_beacon
/obj/structure/hivebot_beacon/New()
/obj/structure/hivebot_beacon/warpbots()
/obj/structure/holohoop
/obj/structure/holohoop/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/holohoop/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/holowindow
/obj/structure/janitorialcart
/obj/structure/janitorialcart/New()
/obj/structure/janitorialcart/Topic(href, href_list)
/obj/structure/janitorialcart/attack_hand(mob/user)
/obj/structure/janitorialcart/attackby(obj/item/I, mob/user, params)
/obj/structure/janitorialcart/put_in_cart(obj/item/I, mob/user)
/obj/structure/janitorialcart/update_icon()
/obj/structure/janitorialcart/wet_mop(obj/item/weapon/mop, mob/user)
/obj/structure/kitchenspike
/obj/structure/kitchenspike/attack_hand(mob/user as mob)
/obj/structure/kitchenspike/attack_paw(mob/user as mob)
/obj/structure/kitchenspike/attackby(obj/item/weapon/grab/G as obj, mob/user as mob, params)
/obj/structure/ladder
/obj/structure/ladder/New()
/obj/structure/ladder/attack_hand(mob/user as mob)
/obj/structure/ladder/attack_paw(mob/user as mob)
/obj/structure/ladder/attackby(obj/item/weapon/W, mob/user as mob, params)
/obj/structure/ladder/update_icon()
/obj/structure/lamarr
/obj/structure/lamarr/Break()
/obj/structure/lamarr/attack_hand(mob/user as mob)
/obj/structure/lamarr/attack_paw(mob/user as mob)
/obj/structure/lamarr/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/lamarr/blob_act()
/obj/structure/lamarr/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/lamarr/ex_act(severity, target)
/obj/structure/lamarr/healthcheck()
/obj/structure/lamarr/update_icon()
/obj/structure/largecrate
/obj/structure/largecrate/New()
/obj/structure/largecrate/attack_hand(mob/user as mob)
/obj/structure/largecrate/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/largecrate/mule
/obj/structure/largecrate/update_icon()
/obj/structure/lattice
/obj/structure/lattice/Deconstruct()
/obj/structure/lattice/Destroy()
/obj/structure/lattice/New()
/obj/structure/lattice/attackby(obj/item/C as obj, mob/user as mob, params)
/obj/structure/lattice/blob_act()
/obj/structure/lattice/catwalk
/obj/structure/lattice/catwalk/Deconstruct()
/obj/structure/lattice/catwalk/Move()
/obj/structure/lattice/catwalk/attackby(obj/item/C as obj, mob/user as mob, params)
/obj/structure/lattice/catwalk/updateOverlays()
/obj/structure/lattice/ex_act(severity, target)
/obj/structure/lattice/singularity_pull(S, current_size)
/obj/structure/lattice/updateOverlays()
/obj/structure/mech_melee_attack(obj/mecha/M)
/obj/structure/mecha_wreckage
/obj/structure/mecha_wreckage/attackby(obj/item/I, mob/user, params)
/obj/structure/mecha_wreckage/durand
/obj/structure/mecha_wreckage/durand/New()
/obj/structure/mecha_wreckage/gygax
/obj/structure/mecha_wreckage/gygax/New()
/obj/structure/mecha_wreckage/gygax/dark
/obj/structure/mecha_wreckage/honker
/obj/structure/mecha_wreckage/honker/New()
/obj/structure/mecha_wreckage/marauder
/obj/structure/mecha_wreckage/mauler
/obj/structure/mecha_wreckage/odysseus
/obj/structure/mecha_wreckage/odysseus/New()
/obj/structure/mecha_wreckage/phazon
/obj/structure/mecha_wreckage/reticence
/obj/structure/mecha_wreckage/ripley
/obj/structure/mecha_wreckage/ripley/New()
/obj/structure/mecha_wreckage/ripley/deathripley
/obj/structure/mecha_wreckage/ripley/firefighter
/obj/structure/mecha_wreckage/ripley/firefighter/New()
/obj/structure/mecha_wreckage/seraph
/obj/structure/mineral_door
/obj/structure/mineral_door/Bumped(atom/user)
/obj/structure/mineral_door/CanAtmosPass()
/obj/structure/mineral_door/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/mineral_door/CheckHardness()
/obj/structure/mineral_door/Close()
/obj/structure/mineral_door/Destroy()
/obj/structure/mineral_door/Dismantle(devastated = 0)
/obj/structure/mineral_door/Move()
/obj/structure/mineral_door/New(location)
/obj/structure/mineral_door/Open()
/obj/structure/mineral_door/SwitchState()
/obj/structure/mineral_door/TryToSwitchState(atom/user)
/obj/structure/mineral_door/attack_ai(mob/user)
/obj/structure/mineral_door/attack_hand(mob/user)
/obj/structure/mineral_door/attack_paw(mob/user)
/obj/structure/mineral_door/attackby(obj/item/weapon/W, mob/user, params)
/obj/structure/mineral_door/bullet_act(obj/item/projectile/Proj)
/obj/structure/mineral_door/ex_act(severity = 1)
/obj/structure/mineral_door/gold
/obj/structure/mineral_door/iron
/obj/structure/mineral_door/sandstone
/obj/structure/mineral_door/silver
/obj/structure/mineral_door/transparent
/obj/structure/mineral_door/transparent/Close()
/obj/structure/mineral_door/transparent/diamond
/obj/structure/mineral_door/transparent/plasma
/obj/structure/mineral_door/transparent/plasma/TemperatureAct(temperature)
/obj/structure/mineral_door/transparent/plasma/attackby(obj/item/weapon/W, mob/user, params)
/obj/structure/mineral_door/transparent/plasma/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/mineral_door/update_icon()
/obj/structure/mineral_door/uranium
/obj/structure/mineral_door/wood
/obj/structure/mineral_door/wood/Dismantle(devastated = 0)
/obj/structure/mirror
/obj/structure/mirror/attack_alien(mob/living/user as mob)
/obj/structure/mirror/attack_animal(mob/living/user as mob)
/obj/structure/mirror/attack_hand(mob/user as mob)
/obj/structure/mirror/attack_slime(mob/living/user as mob)
/obj/structure/mirror/attackby(obj/item/I as obj, mob/living/user as mob, params)
/obj/structure/mirror/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/mirror/magic
/obj/structure/mirror/magic/New()
/obj/structure/mirror/magic/attack_hand(mob/user as mob)
/obj/structure/mirror/magic/badmin/New()
/obj/structure/mirror/shatter()
/obj/structure/mopbucket
/obj/structure/mopbucket/New()
/obj/structure/mopbucket/attackby(obj/item/I, mob/user, params)
/obj/structure/noticeboard
/obj/structure/noticeboard/Topic(href, href_list)
/obj/structure/noticeboard/attack_hand(user as mob)
/obj/structure/noticeboard/attackby(var/obj/item/weapon/O as obj, var/mob/user as mob, params)
/obj/structure/noticeboard/initialize()
/obj/structure/optable
/obj/structure/optable/New()
/obj/structure/optable/abductor
/obj/structure/optable/attackby(obj/item/weapon/W, mob/user, params)
/obj/structure/optable/check_patient()
/obj/structure/ore_box
/obj/structure/ore_box/Topic(href, href_list)
/obj/structure/ore_box/attack_hand(mob/user as mob)
/obj/structure/ore_box/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/ore_box/ex_act(severity, target)
/obj/structure/particle_accelerator
/obj/structure/particle_accelerator/Destroy()
/obj/structure/particle_accelerator/Move()
/obj/structure/particle_accelerator/attackby(obj/item/W, mob/user, params)
/obj/structure/particle_accelerator/blob_act()
/obj/structure/particle_accelerator/connect_master(var/obj/O)
/obj/structure/particle_accelerator/end_cap
/obj/structure/particle_accelerator/examine(mob/user)
/obj/structure/particle_accelerator/fuel_chamber
/obj/structure/particle_accelerator/fuel_chamber/update_icon()
/obj/structure/particle_accelerator/particle_emitter
/obj/structure/particle_accelerator/particle_emitter/center
/obj/structure/particle_accelerator/particle_emitter/emit_particle(var/strength = 0)
/obj/structure/particle_accelerator/particle_emitter/left
/obj/structure/particle_accelerator/particle_emitter/right
/obj/structure/particle_accelerator/particle_emitter/set_delay(var/delay)
/obj/structure/particle_accelerator/particle_emitter/update_icon()
/obj/structure/particle_accelerator/power_box
/obj/structure/particle_accelerator/power_box/update_icon()
/obj/structure/particle_accelerator/process_tool_hit(var/obj/O, var/mob/user)
/obj/structure/particle_accelerator/report_master()
/obj/structure/particle_accelerator/report_ready(var/obj/O)
/obj/structure/particle_accelerator/update_icon()
/obj/structure/particle_accelerator/update_state()
/obj/structure/particle_accelerator/verb/rotate()
/obj/structure/particle_accelerator/verb/rotateccw()
/obj/structure/piano
/obj/structure/piano/Destroy()
/obj/structure/piano/New()
/obj/structure/piano/attack_hand(mob/user as mob)
/obj/structure/piano/attack_paw(mob/user as mob)
/obj/structure/piano/attackby(obj/item/O as obj, mob/user as mob, params)
/obj/structure/piano/initialize()
/obj/structure/piano/interact(mob/user as mob)
/obj/structure/plasticflaps
/obj/structure/plasticflaps/CanPass(atom/movable/A, turf/T)
/obj/structure/plasticflaps/ex_act(severity)
/obj/structure/plasticflaps/mining
/obj/structure/plasticflaps/mining/Destroy()
/obj/structure/plasticflaps/mining/New()
/obj/structure/rack
/obj/structure/rack/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/rack/MouseDrop_T(obj/O as obj, mob/user as mob)
/obj/structure/rack/attack_alien(mob/living/user)
/obj/structure/rack/attack_animal(mob/living/simple_animal/user)
/obj/structure/rack/attack_hand(mob/living/user)
/obj/structure/rack/attack_hulk(mob/living/carbon/human/user)
/obj/structure/rack/attack_paw(mob/living/user)
/obj/structure/rack/attack_tk()
/obj/structure/rack/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/rack/blob_act()
/obj/structure/rack/ex_act(severity, target)
/obj/structure/rack/healthcheck()
/obj/structure/rack/rack_destroy()
/obj/structure/reagent_dispensers
/obj/structure/reagent_dispensers/New()
/obj/structure/reagent_dispensers/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/reagent_dispensers/beerkeg
/obj/structure/reagent_dispensers/beerkeg/New()
/obj/structure/reagent_dispensers/beerkeg/blob_act()
/obj/structure/reagent_dispensers/blob_act()
/obj/structure/reagent_dispensers/ex_act(severity, target)
/obj/structure/reagent_dispensers/fueltank
/obj/structure/reagent_dispensers/fueltank/New()
/obj/structure/reagent_dispensers/fueltank/blob_act()
/obj/structure/reagent_dispensers/fueltank/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/reagent_dispensers/fueltank/ex_act()
/obj/structure/reagent_dispensers/fueltank/fire_act()
/obj/structure/reagent_dispensers/peppertank
/obj/structure/reagent_dispensers/peppertank/New()
/obj/structure/reagent_dispensers/verb/set_APTFT()
/obj/structure/reagent_dispensers/virusfood
/obj/structure/reagent_dispensers/virusfood/New()
/obj/structure/reagent_dispensers/water_cooler
/obj/structure/reagent_dispensers/water_cooler/New()
/obj/structure/reagent_dispensers/water_cooler/attack_hand(var/mob/living/carbon/human/user)
/obj/structure/reagent_dispensers/water_cooler/attackby(var/obj/item/I, var/mob/user, params)
/obj/structure/reagent_dispensers/watertank
/obj/structure/reagent_dispensers/watertank/New()
/obj/structure/reagent_dispensers/watertank/blob_act()
/obj/structure/reagent_dispensers/watertank/ex_act(severity, target)
/obj/structure/safe
/obj/structure/safe/New()
/obj/structure/safe/Topic(href, href_list)
/obj/structure/safe/attack_hand(mob/user as mob)
/obj/structure/safe/attackby(obj/item/I as obj, mob/user as mob, params)
/obj/structure/safe/blob_act()
/obj/structure/safe/check_unlocked(mob/user as mob, canhear)
/obj/structure/safe/decrement(num)
/obj/structure/safe/ex_act(severity, target)
/obj/structure/safe/floor
/obj/structure/safe/floor/hide(var/intact)
/obj/structure/safe/floor/initialize()
/obj/structure/safe/increment(num)
/obj/structure/safe/initialize()
/obj/structure/safe/update_icon()
/obj/structure/shadow_vortex
/obj/structure/shadow_vortex/Crossed(var/td)
/obj/structure/shadow_vortex/New()
/obj/structure/showcase
/obj/structure/showcase/fakeid
/obj/structure/showcase/fakeid/New()
/obj/structure/showcase/fakesec
/obj/structure/showcase/fakesec/New()
/obj/structure/shuttle
/obj/structure/shuttle/engine
/obj/structure/shuttle/engine/heater
/obj/structure/shuttle/engine/platform
/obj/structure/shuttle/engine/propulsion
/obj/structure/shuttle/engine/propulsion/burst
/obj/structure/shuttle/engine/propulsion/burst/left
/obj/structure/shuttle/engine/propulsion/burst/right
/obj/structure/shuttle/engine/router
/obj/structure/sign
/obj/structure/sign/atmosplaque
/obj/structure/sign/barsign
/obj/structure/sign/barsign/New()
/obj/structure/sign/barsign/attack_ai(mob/user as mob)
/obj/structure/sign/barsign/attack_hand(mob/user as mob)
/obj/structure/sign/barsign/attackby(var/obj/item/I, var/mob/user)
/obj/structure/sign/barsign/emag_act(mob/user)
/obj/structure/sign/barsign/emp_act(severity)
/obj/structure/sign/barsign/pick_sign()
/obj/structure/sign/barsign/set_sign(var/datum/barsign/sign)
/obj/structure/sign/biohazard
/obj/structure/sign/blob_act()
/obj/structure/sign/bluecross
/obj/structure/sign/bluecross_2
/obj/structure/sign/botany
/obj/structure/sign/chemistry
/obj/structure/sign/deathsposal
/obj/structure/sign/directions/engineering
/obj/structure/sign/directions/evac
/obj/structure/sign/directions/medical
/obj/structure/sign/directions/science
/obj/structure/sign/directions/security
/obj/structure/sign/electricshock
/obj/structure/sign/ex_act(severity, target)
/obj/structure/sign/examroom
/obj/structure/sign/fire
/obj/structure/sign/goldenplaque
/obj/structure/sign/kiddieplaque
/obj/structure/sign/maltesefalcon
/obj/structure/sign/maltesefalcon/left
/obj/structure/sign/maltesefalcon/right
/obj/structure/sign/map
/obj/structure/sign/map/left
/obj/structure/sign/map/right
/obj/structure/sign/nosmoking_1
/obj/structure/sign/nosmoking_2
/obj/structure/sign/pods
/obj/structure/sign/poster
/obj/structure/sign/poster/New(serial,subtype)
/obj/structure/sign/poster/attack_hand(mob/user)
/obj/structure/sign/poster/attackby(obj/item/I, mob/user, params)
/obj/structure/sign/poster/roll_and_drop(turf/location)
/obj/structure/sign/science
/obj/structure/sign/securearea
/obj/structure/sign/vacuum
/obj/structure/sign/xeno_warning_mining
/obj/structure/signpost
/obj/structure/signpost/attack_hand(mob/user as mob)
/obj/structure/signpost/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/sink
/obj/structure/sink/attack_hand(mob/user)
/obj/structure/sink/attackby(obj/item/O, mob/user, params)
/obj/structure/sink/kitchen
/obj/structure/sink/puddle
/obj/structure/sink/puddle/attack_hand(mob/M as mob)
/obj/structure/sink/puddle/attackby(obj/item/O as obj, mob/user as mob, params)
/obj/structure/spirit_board
/obj/structure/spirit_board/attack_ghost(mob/dead/observer/user as mob)
/obj/structure/spirit_board/attack_hand(mob/user as mob)
/obj/structure/spirit_board/examine()
/obj/structure/spirit_board/spirit_board_checks(var/mob/M)
/obj/structure/spirit_board/spirit_board_pick_letter(var/mob/M)
/obj/structure/statue
/obj/structure/statue/CanAtmosPass()
/obj/structure/statue/CheckHardness()
/obj/structure/statue/Destroy()
/obj/structure/statue/Dismantle(devastated = 0)
/obj/structure/statue/attack_hand(mob/living/user as mob)
/obj/structure/statue/attackby(obj/item/weapon/W, mob/living/user as mob, params)
/obj/structure/statue/bananium
/obj/structure/statue/bananium/Bumped(atom/user)
/obj/structure/statue/bananium/attack_hand(mob/user)
/obj/structure/statue/bananium/attack_paw(mob/user)
/obj/structure/statue/bananium/attackby(obj/item/weapon/W, mob/user, params)
/obj/structure/statue/bananium/clown
/obj/structure/statue/bananium/honk()
/obj/structure/statue/bullet_act(obj/item/projectile/Proj)
/obj/structure/statue/diamond
/obj/structure/statue/diamond/ai1
/obj/structure/statue/diamond/ai2
/obj/structure/statue/diamond/captain
/obj/structure/statue/ex_act(severity = 1)
/obj/structure/statue/gold
/obj/structure/statue/gold/ce
/obj/structure/statue/gold/cmo
/obj/structure/statue/gold/hop
/obj/structure/statue/gold/hos
/obj/structure/statue/gold/rd
/obj/structure/statue/plasma
/obj/structure/statue/plasma/PlasmaBurn()
/obj/structure/statue/plasma/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/statue/plasma/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/statue/plasma/ignite(exposed_temperature)
/obj/structure/statue/plasma/scientist
/obj/structure/statue/plasma/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/statue/sandstone
/obj/structure/statue/sandstone/assistant
/obj/structure/statue/silver
/obj/structure/statue/silver/janitor
/obj/structure/statue/silver/md
/obj/structure/statue/silver/medborg
/obj/structure/statue/silver/sec
/obj/structure/statue/silver/secborg
/obj/structure/statue/uranium
/obj/structure/statue/uranium/Bumped(atom/user)
/obj/structure/statue/uranium/attack_hand(mob/user)
/obj/structure/statue/uranium/attack_paw(mob/user)
/obj/structure/statue/uranium/attackby(obj/item/weapon/W, mob/user, params)
/obj/structure/statue/uranium/eng
/obj/structure/statue/uranium/nuke
/obj/structure/statue/uranium/radiate()
/obj/structure/stool
/obj/structure/stool/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/stool/bed
/obj/structure/stool/bed/CanPass(atom/movable/mover, turf/target, height=1.5)
/obj/structure/stool/bed/Move(atom/newloc, direct)
/obj/structure/stool/bed/Process_Spacemove(var/movement_dir = 0)
/obj/structure/stool/bed/abductor
/obj/structure/stool/bed/alien
/obj/structure/stool/bed/attack_animal(var/mob/living/simple_animal/M)
/obj/structure/stool/bed/attack_paw(mob/user as mob)
/obj/structure/stool/bed/chair
/obj/structure/stool/bed/chair/Move(atom/newloc, direct)
/obj/structure/stool/bed/chair/New()
/obj/structure/stool/bed/chair/attack_tk(mob/user as mob)
/obj/structure/stool/bed/chair/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/stool/bed/chair/comfy
/obj/structure/stool/bed/chair/comfy/New()
/obj/structure/stool/bed/chair/comfy/beige
/obj/structure/stool/bed/chair/comfy/black
/obj/structure/stool/bed/chair/comfy/brown
/obj/structure/stool/bed/chair/comfy/lime
/obj/structure/stool/bed/chair/comfy/post_buckle_mob(mob/living/M)
/obj/structure/stool/bed/chair/comfy/teal
/obj/structure/stool/bed/chair/e_chair
/obj/structure/stool/bed/chair/e_chair/New()
/obj/structure/stool/bed/chair/e_chair/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/stool/bed/chair/e_chair/rotate()
/obj/structure/stool/bed/chair/e_chair/shock()
/obj/structure/stool/bed/chair/handle_layer()
/obj/structure/stool/bed/chair/handle_rotation(direction)
/obj/structure/stool/bed/chair/janicart
/obj/structure/stool/bed/chair/janicart/Move(a, b, flag)
/obj/structure/stool/bed/chair/janicart/New()
/obj/structure/stool/bed/chair/janicart/attack_hand(mob/user)
/obj/structure/stool/bed/chair/janicart/attackby(obj/item/I, mob/user, params)
/obj/structure/stool/bed/chair/janicart/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/stool/bed/chair/janicart/examine(mob/user)
/obj/structure/stool/bed/chair/janicart/handle_rotation()
/obj/structure/stool/bed/chair/janicart/relaymove(mob/user, direction)
/obj/structure/stool/bed/chair/janicart/secway
/obj/structure/stool/bed/chair/janicart/secway/update_mob()
/obj/structure/stool/bed/chair/janicart/unbuckle_mob()
/obj/structure/stool/bed/chair/janicart/update_icon()
/obj/structure/stool/bed/chair/janicart/update_mob()
/obj/structure/stool/bed/chair/janicart/user_buckle_mob(mob/living/M, mob/user)
/obj/structure/stool/bed/chair/office
/obj/structure/stool/bed/chair/office/dark
/obj/structure/stool/bed/chair/office/light
/obj/structure/stool/bed/chair/spin()
/obj/structure/stool/bed/chair/verb/rotate()
/obj/structure/stool/bed/chair/wood/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/stool/bed/chair/wood/normal
/obj/structure/stool/bed/chair/wood/wings
/obj/structure/stool/bed/nest
/obj/structure/stool/bed/nest/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/stool/bed/nest/healthcheck()
/obj/structure/stool/bed/nest/post_buckle_mob(mob/living/M)
/obj/structure/stool/bed/nest/user_buckle_mob(mob/M as mob, mob/user as mob)
/obj/structure/stool/bed/nest/user_unbuckle_mob(mob/user as mob)
/obj/structure/stool/bed/roller
/obj/structure/stool/bed/roller/MouseDrop(over_object, src_location, over_location)
/obj/structure/stool/bed/roller/post_buckle_mob(mob/living/M)
/obj/structure/stool/blob_act()
/obj/structure/stool/ex_act(severity, target)
/obj/structure/table
/obj/structure/table/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/table/Destroy()
/obj/structure/table/MouseDrop(atom/over)
/obj/structure/table/MouseDrop_T(atom/movable/O, mob/user)
/obj/structure/table/New()
/obj/structure/table/Topic(href, href_list)
/obj/structure/table/abductor
/obj/structure/table/attack_alien(mob/living/user)
/obj/structure/table/attack_animal(mob/living/simple_animal/user)
/obj/structure/table/attack_hand(mob/living/user)
/obj/structure/table/attack_hulk(mob/living/carbon/human/user)
/obj/structure/table/attack_paw(mob/user)
/obj/structure/table/attack_tk()
/obj/structure/table/attackby(obj/item/I, mob/user, params)
/obj/structure/table/blob_act()
/obj/structure/table/check_contents(datum/table_recipe/R)
/obj/structure/table/check_table()
/obj/structure/table/check_table_space()
/obj/structure/table/check_tools(mob/user, datum/table_recipe/R)
/obj/structure/table/climb_table(mob/user)
/obj/structure/table/construct_item(mob/user, datum/table_recipe/R)
/obj/structure/table/del_reqs(datum/table_recipe/R, atom/movable/resultobject)
/obj/structure/table/ex_act(severity, target)
/obj/structure/table/glass
/obj/structure/table/glass/climb_table(mob/user)
/obj/structure/table/glass/tablepush(obj/item/I, mob/user)
/obj/structure/table/holotable
/obj/structure/table/holotable/attack_alien(mob/user as mob)
/obj/structure/table/holotable/attack_animal(mob/living/simple_animal/user as mob)
/obj/structure/table/holotable/attack_hand(mob/user as mob)
/obj/structure/table/holotable/attack_paw(mob/user as mob)
/obj/structure/table/holotable/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/table/interact(mob/user)
/obj/structure/table/partial_check_contents(datum/table_recipe/R)
/obj/structure/table/reinforced
/obj/structure/table/reinforced/attack_hulk(mob/living/carbon/human/user)
/obj/structure/table/reinforced/attack_paw(mob/user)
/obj/structure/table/reinforced/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/obj/structure/table/table_destroy(var/destroy_type, var/mob/user)
/obj/structure/table/tablepush(obj/item/I, mob/user)
/obj/structure/table/update_icon()
/obj/structure/table/wood
/obj/structure/table/wood/poker
/obj/structure/table_frame
/obj/structure/table_frame/attackby(var/obj/item/I, mob/user, params)
/obj/structure/table_frame/wood
/obj/structure/table_frame/wood/attackby(var/obj/item/I, mob/user, params)
/obj/structure/target_stake
/obj/structure/target_stake/Destroy()
/obj/structure/target_stake/Move()
/obj/structure/target_stake/attack_hand(mob/user)
/obj/structure/target_stake/attackby(obj/item/target/T, mob/user)
/obj/structure/target_stake/bullet_act(obj/item/projectile/P)
/obj/structure/target_stake/nullPinnedTarget()
/obj/structure/target_stake/removeTarget(mob/user)
/obj/structure/toilet
/obj/structure/toilet/New()
/obj/structure/toilet/attack_hand(mob/living/user)
/obj/structure/toilet/attackby(obj/item/I, mob/living/user, params)
/obj/structure/toilet/update_icon()
/obj/structure/transit_tube
/obj/structure/transit_tube/CanPass(atom/movable/mover, turf/target)
/obj/structure/transit_tube/New(loc)
/obj/structure/transit_tube/attackby(obj/item/W, mob/user, params)
/obj/structure/transit_tube/create_automatic_decorative_corner(location, direction)
/obj/structure/transit_tube/destroy_diagonals()
/obj/structure/transit_tube/directions()
/obj/structure/transit_tube/enter_delay(pod, to_dir)
/obj/structure/transit_tube/ex_act(severity, target)
/obj/structure/transit_tube/exit_delay(pod, to_dir)
/obj/structure/transit_tube/generate_automatic_corners(directions)
/obj/structure/transit_tube/get_exit(in_dir)
/obj/structure/transit_tube/has_entrance(from_dir)
/obj/structure/transit_tube/has_exit(in_dir)
/obj/structure/transit_tube/init_dirs()
/obj/structure/transit_tube/init_dirs_automatic()
/obj/structure/transit_tube/parse_dirs(text)
/obj/structure/transit_tube/pod_stopped(pod, from_dir)
/obj/structure/transit_tube/select_automatic_dirs(connected)
/obj/structure/transit_tube/select_automatic_icon_state(directions)
/obj/structure/transit_tube/should_stop_pod(pod, from_dir)
/obj/structure/transit_tube/station
/obj/structure/transit_tube/station/Bumped(mob/AM as mob|obj)
/obj/structure/transit_tube/station/Destroy()
/obj/structure/transit_tube/station/MouseDrop_T(obj/structure/c_transit_tube_pod/R as obj, mob/user as mob)
/obj/structure/transit_tube/station/New()
/obj/structure/transit_tube/station/attack_hand(mob/user as mob)
/obj/structure/transit_tube/station/attackby(obj/item/W, mob/user, params)
/obj/structure/transit_tube/station/close_animation()
/obj/structure/transit_tube/station/init_dirs()
/obj/structure/transit_tube/station/launch_pod()
/obj/structure/transit_tube/station/open_animation()
/obj/structure/transit_tube/station/pod_stopped(obj/structure/transit_tube_pod/pod, from_dir)
/obj/structure/transit_tube/station/process()
/obj/structure/transit_tube/station/reverse
/obj/structure/transit_tube/station/should_stop_pod(pod, from_dir)
/obj/structure/transit_tube_pod
/obj/structure/transit_tube_pod/Destroy()
/obj/structure/transit_tube_pod/New(loc)
/obj/structure/transit_tube_pod/Process_Spacemove()
/obj/structure/transit_tube_pod/assume_air(datum/gas_mixture/giver)
/obj/structure/transit_tube_pod/attackby(var/obj/item/I, var/mob/user, params)
/obj/structure/transit_tube_pod/container_resist()
/obj/structure/transit_tube_pod/empty()
/obj/structure/transit_tube_pod/follow_tube(var/reverse_launch)
/obj/structure/transit_tube_pod/mix_air()
/obj/structure/transit_tube_pod/relaymove(mob/mob, direction)
/obj/structure/transit_tube_pod/remove_air(amount)
/obj/structure/transit_tube_pod/return_air()
/obj/structure/tray
/obj/structure/tray/Destroy()
/obj/structure/tray/MouseDrop_T(atom/movable/O as mob|obj, mob/user as mob)
/obj/structure/tray/attack_hand(mob/user as mob)
/obj/structure/tray/attack_paw(mob/user as mob)
/obj/structure/tray/c_tray
/obj/structure/tray/m_tray
/obj/structure/urinal
/obj/structure/urinal/attackby(obj/item/I, mob/user, params)
/obj/structure/windoor_assembly
/obj/structure/windoor_assembly/CanAtmosPass(var/turf/T)
/obj/structure/windoor_assembly/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/windoor_assembly/CheckExit(atom/movable/mover as mob|obj, turf/target as turf)
/obj/structure/windoor_assembly/Destroy()
/obj/structure/windoor_assembly/Move()
/obj/structure/windoor_assembly/New(dir=1)
/obj/structure/windoor_assembly/attackby(obj/item/W as obj, mob/user as mob, params)
/obj/structure/windoor_assembly/update_icon()
/obj/structure/windoor_assembly/verb/flip()
/obj/structure/windoor_assembly/verb/revrotate()
/obj/structure/window
/obj/structure/window/CanAtmosPass(turf/T)
/obj/structure/window/CanPass(atom/movable/mover, turf/target, height=0)
/obj/structure/window/CheckExit(atom/movable/O as mob|obj, target as turf)
/obj/structure/window/Destroy()
/obj/structure/window/Move()
/obj/structure/window/New(Loc,re=0)
/obj/structure/window/attack_alien(mob/living/user as mob)
/obj/structure/window/attack_animal(mob/living/user as mob)
/obj/structure/window/attack_generic(mob/user as mob, damage = 0)
/obj/structure/window/attack_hand(mob/user as mob)
/obj/structure/window/attack_hulk(mob/living/carbon/human/user)
/obj/structure/window/attack_paw(mob/user as mob)
/obj/structure/window/attack_slime(mob/living/simple_animal/slime/user as mob)
/obj/structure/window/attack_tk(mob/user as mob)
/obj/structure/window/attackby(obj/item/I, mob/living/user, params)
/obj/structure/window/blob_act()
/obj/structure/window/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/window/can_be_reached(mob/user)
/obj/structure/window/ex_act(severity, target)
/obj/structure/window/fulltile
/obj/structure/window/hit(var/damage, var/sound_effect = 1)
/obj/structure/window/hitby(AM as mob|obj)
/obj/structure/window/mech_melee_attack(obj/mecha/M)
/obj/structure/window/reinforced
/obj/structure/window/reinforced/fulltile
/obj/structure/window/reinforced/tinted
/obj/structure/window/reinforced/tinted/frosted
/obj/structure/window/reinforced/tinted/fulltile
/obj/structure/window/shuttle
/obj/structure/window/singularity_pull(S, current_size)
/obj/structure/window/spawnfragments()
/obj/structure/window/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/obj/structure/window/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/window/update_icon()
/obj/structure/window/update_nearby_icons()
/obj/structure/window/verb/revrotate()
/obj/structure/window/verb/rotate()
/obj/unbuckle_mob()
/obj/updateDialog()
/obj/updateUsrDialog()
/obj/update_icon()
/obj/user_buckle_mob(mob/living/M, mob/user)
/obj/user_unbuckle_mob(mob/user)
/onclose(mob/user, windowid, var/atom/ref=null)
/oview_or_orange(distance = world.view , center = usr , type)
/parse_zone(zone)
/parsepencode(t, mob/user=null, signfont="Times)
/pick_n_take(list/L)
/pickweight(list/L)
/play_vox_word(var/word, var/z_level, var/mob/only_listener)
/playsound(var/atom/source, soundin, vol as num, vary, extrarange as num, falloff, surround = 1)
/pop(list/L)
/possess(obj/O as obj in world)
/power_failure()
/power_list(var/turf/T, var/source, var/d, var/unmarked=0, var/cable_only = 0)
/power_restore()
/power_restore_quick()
/previous_list_item(var/item, var/list/L)
/print_command_report(var/text = "", var/title = "Central Command Update")
/priority_announce(var/text, var/title = "", var/sound = 'sound/AI/attention.ogg', var/type)
/proc/TransformUsingVariable(var/input, var/inputmaximum, var/scaling_modifier = 0)
/proc/auto_toggle_ooc(var/on)
/proc/can_embed(obj/item/W)
/proc/change_command_name(var/name)
/proc/church_name()
/proc/cmp_name_dsc(atom/a, atom/b)
/proc/gang_name(var/gang)
/proc/get(atom/loc, type)
/proc/new_station_name()
/proc/random_skin_tone()
/proc/remove_radio_all(var/obj/item/radio)
/proc/reverse_text(var/text = "")
/proc/syndicate_name()
/process_teleport_locs()
/projectile_trajectory(var/src_x, var/src_y, var/rotation, var/angle, var/power)
/propagate_network(var/obj/O, var/datum/powernet/PN)
/qdel(var/datum/A)
/ran_zone(zone, probability = 80)
/rand_hex_color()
/randmut(mob/living/carbon/M, list/candidates, difficulty = 2)
/randmutb(mob/living/carbon/M)
/randmutg(mob/living/carbon/M)
/randmuti(mob/living/carbon/M)
/randomColor(var/mode = 0)
/random_blood_type()
/random_color()
/random_eye_color()
/random_facial_hair_style(gender)
/random_features()
/random_hair_style(gender)
/random_name(gender, attempts_to_find_unique_name=10)
/random_short_color()
/random_skin_tone()
/random_socks(gender)
/random_step(atom/movable/AM, steps, chance)
/random_string(length, list/characters)
/random_undershirt(gender)
/random_underwear(gender)
/randomize_human(mob/living/carbon/human/H)
/randomize_radiation_accuracy(position_we_were_supposed_to_hit, radduration, number_of_blocks)
/ready_dna(mob/living/carbon/character, blood_type)
/recursive_hear_check(var/atom/O)
/recursive_mob_check(var/atom/O,var/client_check=1,var/sight_check=1,var/include_radio=1)
/regEx_compare(str, exp)
/regEx_find(str, exp)
/regEx_findall(str, exp)
/regEx_replace(str, exp, fmt)
/regEx_replaceall(str, exp, fmt)
/regex_compare(str, exp)
/regex_find(str, exp)
/regex_findall(str, exp)
/regex_replace(str, exp, fmt)
/regex_replaceall(str, exp, fmt)
/reject_bad_name(var/t_in, var/allow_numbers=0, var/max_length=26)
/reject_bad_text(var/text, var/max_length=512)
/release(obj/O as obj in world)
/religion_name()
/remove_radio(var/obj/item/radio, freq)
/remove_radio_all(var/obj/item/radio)
/repeat_string(times, string="")
/replacetext(str, exp, fmt)
/replacetext(text, find, replacement)
/replacetextEx(str, exp, fmt)
/replacetextEx(text, find, replacement)
/return_file_text(filename)
/reverseRange(list/L, start=1, end=0)
/reverse_text(var/text = "")
/revoke_maint_all_access()
/rgb2hsl(red, green, blue)
/rightandwrong(var/summon_type, var/mob/user, var/survivor_probability)
/rights2text(rights, seperator="", list/adds, list/subs)
/robogibs(atom/location, var/list/viruses)
/runerandom()
/runtimeError
/runtimeError/DivisionByZero
/runtimeError/DuplicateVariableDeclaration
/runtimeError/DuplicateVariableDeclaration/New(variable)
/runtimeError/IterationLimitReached
/runtimeError/MaxCPU
/runtimeError/RecursionLimitReached
/runtimeError/ToString()
/runtimeError/TypeMismatch
/runtimeError/TypeMismatch/New(op, a, b)
/runtimeError/UndefinedFunction
/runtimeError/UndefinedFunction/New(function)
/runtimeError/UndefinedVariable
/runtimeError/UndefinedVariable/New(variable)
/runtimeError/UnexpectedReturn
/runtimeError/UnknownInstruction
/runtimeError/var
/runtimeError/var/message
/runtimeError/var/name
/runtimeError/var/stack/stack
/safepick(list/L)
/sanitize(var/t,var/list/repl_chars = null)
/sanitizeSQL(var/t as text)
/sanitize_frequency(var/f)
/sanitize_gender(gender,neuter=0,plural=0, default="male")
/sanitize_hexcolor(color, desired_format=3, include_crunch=0, default)
/sanitize_inlist(value, list/List, default)
/sanitize_integer(number, min=0, max=1, default=0)
/sanitize_ooccolor(color)
/sanitize_simple(var/t,var/list/repl_chars = list("\n"="#","\t"="#"))
/sanitize_text(text, default="")
/scope
/scope/New(node/BlockDefinition/B, scope/parent)
/scope/var
/scope/var/list
/scope/var/list/functions
/scope/var/list/variables
/scope/var/node/BlockDefinition/block
/scramble(input,rs,rd)
/scramble_dna(mob/living/carbon/M, ui=FALSE, se=FALSE, probability)
/scriptError
/scriptError/BadNumber
/scriptError/BadReturn
/scriptError/BadReturn/New(token/t)
/scriptError/BadToken
/scriptError/BadToken/New(token/t)
/scriptError/DuplicateFunction
/scriptError/DuplicateFunction/New(name, token/t)
/scriptError/EndOfFile
/scriptError/ExpectedToken
/scriptError/ExpectedToken/New(id, token/T)
/scriptError/InvalidID
/scriptError/New(msg=null)
/scriptError/ParameterFunction
/scriptError/ParameterFunction/New(token/t)
/scriptError/ReservedWord
/scriptError/UnterminatedComment
/scriptError/var
/scriptError/var/message
/seclevel2num(var/seclevel)
/secondaryexplosion(turf/epicenter, range)
/see_own_notes()
/seedify(var/obj/item/O as obj, var/t_max, var/obj/machinery/seed_extractor/extractor)
/seen_by_camera(var/mob/M)
/select_active_ai(var/mob/user)
/select_active_ai_with_fewest_borgs()
/select_active_free_borg(var/mob/user)
/select_recipe(var/list/datum/recipe/avaiable_recipes, var/obj/obj as obj, var/exact = 1 as num)
/send2irc(msg,msg2)
/send2irc_adminless_only(source, msg, requiredflags = 4)
/send_byjax(receiver, control_id, target_element, new_content=null, callback=null, list/callback_args=null)
/set_security_level(var/level)
/setblock(istring, blocknumber, replacement, blocksize=3)
/setup_database_connection()
/setup_map_transitions()
/shake_camera(mob/M, duration, strength=1)
/shuffle(var/list/L)
/sign(x)
/slur(n)
/sortInsert(list/L, cmp=/proc/cmp_numeric_asc, associative, fromIndex=1, toIndex=0)
/sortKey(list/L, order=1)
/sortList(var/list/L, cmp=/proc/cmp_text_asc)
/sortMerge(list/L, cmp=/proc/cmp_numeric_asc, associative, fromIndex=1, toIndex)
/sortNames(var/list/L, order=1)
/sortRecord(list/L, field = "name", order = 1)
/sortTim(list/L, cmp=/proc/cmp_numeric_asc, associative, fromIndex=1, toIndex=0)
/sorted_insert(list/L, thing, comparator)
/sortmobs()
/sound
/sound/New(file,repeat,wait,channel,volume=100)
/sound/RscFile()
/sound/proc/RscFile()
/sound/var
/sound/var/channel
/sound/var/echo
/sound/var/file
/sound/var/repeat
/sound/var/wait
/spaceDebrisFinishLoc(startSide, Z)
/spaceDebrisStartLoc(startSide, Z)
/spawn_meteor(var/list/meteortypes)
/spawn_meteors(var/number = 10, var/list/meteortypes)
/spawn_room(var/atom/start_loc, var/x_size, var/y_size, var/list/walltypes, var/floor, var/name)
/sql_commit_feedback()
/sql_poll_admins()
/sql_poll_players()
/sql_report_cyborg_death(var/mob/living/silicon/robot/H)
/sql_report_death(var/mob/living/carbon/human/H)
/sql_report_round_end()
/sql_report_round_start()
/stack
/stack/Clear()
/stack/Copy()
/stack/Pop()
/stack/Push(value)
/stack/Top()
/stars(n, pr)
/station_name()
/stringmerge(var/text,var/compare,replace = "*")
/stringpercent(var/text,character = "*")
/strings(filename as text, key as text)
/strip_html(var/t,var/limit=1024)
/strip_html_simple(var/t,var/limit=1024)
/stripped_input(var/mob/user, var/message = "", var/title = "", var/default = "", var/max_length=1024)
/stripped_multiline_input(var/mob/user, var/message = "", var/title = "", var/default = "", var/max_length=1024)
/stutter(n)
/summonevents()
/swapRange(list/L, fromIndex, toIndex, len=1)
/swapmap
/swapmap/AllTurfs(z)
/swapmap/AllocateSwapMap()
/swapmap/BuildFilledRectangle(turf/T1,turf/T2,item)
/swapmap/BuildInTurfs(list/turfs,item)
/swapmap/BuildRectangle(turf/T1,turf/T2,item)
/swapmap/ConsiderRegion(X1,Y1,X2,Y2,Z1,Z2)
/swapmap/Contains(turf/T)
/swapmap/CutXYZ()
/swapmap/Del()
/swapmap/HiCorner(z=z2)
/swapmap/InUse()
/swapmap/LoCorner(z=z1)
/swapmap/New(_id,x,y,z)
/swapmap/Read(savefile/S,_id,turf/locorner)
/swapmap/Save()
/swapmap/SetID(newid)
/swapmap/Unload()
/swapmap/Write(savefile/S)
/syndicate_name()
/telecomms_check(var/mob/mob)
/testing(msg)
/text("<A href='?src=\ref[src];power=1'>[on ? "On" : "Off"]</A>"))
/text2dir(direction)
/text2dir_extended(direction)
/text2list(text, delimiter="\n")
/text2listEx(text, delimiter="\n")
/tg_list2text(list/list, glue=",")
/time_stamp(var/format = "hh:mm:ss")
/tkMaxRangeCheck(mob/user, atom/target, atom/focus)
/toggle_ooc()
/togglebuildmode(mob/M as mob in player_list)
/token
/token/New(v, l=0, c=0)
/token/accessor
/token/accessor/New(object, member, l=0, c=0)
/token/end
/token/keyword
/token/number
/token/number/New()
/token/string
/token/symbol
/token/word
/trange(var/Dist=0,var/turf/Center=null)
/trim(text)
/trim_left(text)
/trim_right(text)
/try_move_adjacent(atom/movable/AM)
/turf
/turf/Adjacent(var/atom/neighbor, var/atom/target = null)
/turf/Bless()
/turf/CalculateAdjacentTurfs()
/turf/CanAtmosPass(var/turf/T)
/turf/CanPass(atom/movable/mover, turf/target, height=1.5)
/turf/ChangeTurf(var/path)
/turf/ClickCross(var/target_dir, var/border_only, var/target_atom = null)
/turf/CtrlClick(var/mob/user)
/turf/Del()
/turf/Destroy()
/turf/Distance(var/turf/T)
/turf/Distance_cardinal(turf/T)
/turf/Enter(atom/movable/mover as mob|obj, atom/forget as mob|obj|turf|area)
/turf/Entered(atom/movable/M)
/turf/LinkBlocked(atom, turf/T)
/turf/LinkBlockedWithAccess(turf/T, obj/item/weapon/card/id/ID)
/turf/New()
/turf/RemoveLattice()
/turf/ReplaceWithCatwalk()
/turf/ReplaceWithLattice()
/turf/UpdateAffectingLights()
/turf/air_update_turf(var/command = 0)
/turf/assume_air(datum/gas_mixture/giver)
/turf/attack_hand(mob/user as mob)
/turf/attackby(obj/item/C, mob/user, params)
/turf/can_have_cabling()
/turf/can_lay_cable()
/turf/consider_pressure_difference(var/turf/simulated/T, var/difference)
/turf/copyTurf(turf/T)
/turf/fullUpdateMineralOverlays()
/turf/get_cable_node()
/turf/get_light_range(radius)
/turf/handle_fall(mob/faller, forced)
/turf/handle_slip(mob/slipper, s_amount, w_amount, obj/O, lube)
/turf/high_pressure_movements()
/turf/hotspot_expose(exposed_temperature, exposed_volume, soh = 0)
/turf/indestructible
/turf/indestructible/abductor
/turf/indestructible/fakedoor
/turf/indestructible/fakeglass
/turf/indestructible/riveted
/turf/indestructible/splashscreen
/turf/init_lighting()
/turf/is_plasteel_floor()
/turf/levelupdate()
/turf/lumen(datum/light_source/L)
/turf/phase_damage_creatures(damage,mob/U = null)
/turf/proc/high_pressure_movements()
/turf/reachableAdjacentTurfs(atom, ID)
/turf/redraw_lighting(var/instantly = 0)
/turf/remove_air(amount as num)
/turf/return_air()
/turf/return_siding_icon_state()
/turf/simulated
/turf/simulated/Assimilate_Air()
/turf/simulated/Del()
/turf/simulated/Entered(atom/A, atom/OL)
/turf/simulated/MakeSlippery(var/wet_setting = 1)
/turf/simulated/New()
/turf/simulated/add_blood(mob/living/carbon/human/M)
/turf/simulated/archive()
/turf/simulated/assume_air(datum/gas_mixture/giver)
/turf/simulated/atmos_spawn_air(var/flag, var/amount)
/turf/simulated/burn_tile()
/turf/simulated/consider_superconductivity(starting)
/turf/simulated/copy_air(datum/gas_mixture/copy)
/turf/simulated/copy_air_with_tile(turf/simulated/T)
/turf/simulated/floor
/turf/simulated/floor/ChangeTurf(turf/simulated/floor/T)
/turf/simulated/floor/Entered(atom/A, atom/OL)
/turf/simulated/floor/MakeDirty()
/turf/simulated/floor/New()
/turf/simulated/floor/attack_paw(mob/user as mob)
/turf/simulated/floor/attackby(obj/item/C as obj, mob/user as mob, params)
/turf/simulated/floor/blob_act()
/turf/simulated/floor/bluegrid
/turf/simulated/floor/break_tile()
/turf/simulated/floor/break_tile_to_plating()
/turf/simulated/floor/burn_tile()
/turf/simulated/floor/can_have_cabling()
/turf/simulated/floor/engine
/turf/simulated/floor/engine/attack_hand(var/mob/user as mob)
/turf/simulated/floor/engine/attack_paw(var/mob/user as mob)
/turf/simulated/floor/engine/attackby(obj/item/weapon/C as obj, mob/user as mob, params)
/turf/simulated/floor/engine/blob_act()
/turf/simulated/floor/engine/break_tile()
/turf/simulated/floor/engine/burn_tile()
/turf/simulated/floor/engine/cult
/turf/simulated/floor/engine/cult/narsie_act()
/turf/simulated/floor/engine/ex_act(severity, target)
/turf/simulated/floor/engine/ex_act(severity,target)
/turf/simulated/floor/engine/make_plating(var/force = 0)
/turf/simulated/floor/engine/n20/New()
/turf/simulated/floor/engine/singularity_pull(S, current_size)
/turf/simulated/floor/engine/vacuum
/turf/simulated/floor/ex_act(severity, target)
/turf/simulated/floor/fancy
/turf/simulated/floor/fancy/ChangeTurf(turf/T as turf)
/turf/simulated/floor/fancy/carpet
/turf/simulated/floor/fancy/carpet/New()
/turf/simulated/floor/fancy/carpet/update_icon()
/turf/simulated/floor/fancy/fancy_update(turf/simulated/floor/fancy/fancy_type, later = 0)
/turf/simulated/floor/fancy/grass
/turf/simulated/floor/fancy/grass/New()
/turf/simulated/floor/fancy/grass/attackby(obj/item/C as obj, mob/user as mob, params)
/turf/simulated/floor/fancy/grass/holo
/turf/simulated/floor/fancy/grass/holo/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/turf/simulated/floor/fancy/grass/return_siding_icon_state()
/turf/simulated/floor/gets_drilled()
/turf/simulated/floor/goonplaque
/turf/simulated/floor/greengrid
/turf/simulated/floor/holofloor
/turf/simulated/floor/holofloor/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/turf/simulated/floor/light
/turf/simulated/floor/light/ChangeTurf(turf/T as turf)
/turf/simulated/floor/light/New()
/turf/simulated/floor/light/attack_ai(mob/user)
/turf/simulated/floor/light/attack_hand(mob/user as mob)
/turf/simulated/floor/light/attackby(obj/item/C as obj, mob/user as mob, params)
/turf/simulated/floor/light/update_icon()
/turf/simulated/floor/make_plating()
/turf/simulated/floor/mech_bay_recharge_floor
/turf/simulated/floor/mech_bay_recharge_floor/airless
/turf/simulated/floor/mech_bay_recharge_floor/break_tile()
/turf/simulated/floor/mineral
/turf/simulated/floor/mineral/New()
/turf/simulated/floor/mineral/bananium
/turf/simulated/floor/mineral/bananium/Entered(var/mob/AM)
/turf/simulated/floor/mineral/bananium/airless
/turf/simulated/floor/mineral/bananium/attack_hand(mob/user)
/turf/simulated/floor/mineral/bananium/attack_paw(mob/user)
/turf/simulated/floor/mineral/bananium/attackby(obj/item/weapon/W, mob/user, params)
/turf/simulated/floor/mineral/bananium/honk()
/turf/simulated/floor/mineral/bananium/squeek()
/turf/simulated/floor/mineral/diamond
/turf/simulated/floor/mineral/gold
/turf/simulated/floor/mineral/plasma
/turf/simulated/floor/mineral/plasma/PlasmaBurn()
/turf/simulated/floor/mineral/plasma/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/turf/simulated/floor/mineral/plasma/ignite(exposed_temperature)
/turf/simulated/floor/mineral/plasma/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/turf/simulated/floor/mineral/silver
/turf/simulated/floor/mineral/update_icon()
/turf/simulated/floor/mineral/uranium
/turf/simulated/floor/mineral/uranium/Entered(var/mob/AM)
/turf/simulated/floor/mineral/uranium/attack_hand(mob/user)
/turf/simulated/floor/mineral/uranium/attack_paw(mob/user)
/turf/simulated/floor/mineral/uranium/attackby(obj/item/weapon/W, mob/user, params)
/turf/simulated/floor/mineral/uranium/radiate()
/turf/simulated/floor/narsie_act()
/turf/simulated/floor/noslip
/turf/simulated/floor/noslip/MakeSlippery()
/turf/simulated/floor/plasteel
/turf/simulated/floor/plasteel/airless
/turf/simulated/floor/plasteel/bar
/turf/simulated/floor/plasteel/black
/turf/simulated/floor/plasteel/brown
/turf/simulated/floor/plasteel/brown/corner
/turf/simulated/floor/plasteel/cafeteria
/turf/simulated/floor/plasteel/cult
/turf/simulated/floor/plasteel/cult/narsie_act()
/turf/simulated/floor/plasteel/darkgreen
/turf/simulated/floor/plasteel/darkgreen/corner
/turf/simulated/floor/plasteel/darkgreen/side
/turf/simulated/floor/plasteel/darkred
/turf/simulated/floor/plasteel/darkred/corner
/turf/simulated/floor/plasteel/darkred/side
/turf/simulated/floor/plasteel/darkwarning
/turf/simulated/floor/plasteel/darkwarning/corner
/turf/simulated/floor/plasteel/delivery
/turf/simulated/floor/plasteel/freezer
/turf/simulated/floor/plasteel/green
/turf/simulated/floor/plasteel/green/corner
/turf/simulated/floor/plasteel/green/side
/turf/simulated/floor/plasteel/grimy
/turf/simulated/floor/plasteel/loadingarea
/turf/simulated/floor/plasteel/neutral
/turf/simulated/floor/plasteel/neutral/corner
/turf/simulated/floor/plasteel/neutral/side
/turf/simulated/floor/plasteel/podhatch
/turf/simulated/floor/plasteel/podhatch/corner
/turf/simulated/floor/plasteel/red
/turf/simulated/floor/plasteel/red/corner
/turf/simulated/floor/plasteel/red/side
/turf/simulated/floor/plasteel/redblue
/turf/simulated/floor/plasteel/redblue/side
/turf/simulated/floor/plasteel/redyellow
/turf/simulated/floor/plasteel/redyellow/side
/turf/simulated/floor/plasteel/shuttle
/turf/simulated/floor/plasteel/shuttle/red
/turf/simulated/floor/plasteel/update_icon()
/turf/simulated/floor/plasteel/warning
/turf/simulated/floor/plasteel/warning/corner
/turf/simulated/floor/plasteel/yellowsiding
/turf/simulated/floor/plasteel/yellowsiding/corner
/turf/simulated/floor/plating
/turf/simulated/floor/plating/New()
/turf/simulated/floor/plating/abductor
/turf/simulated/floor/plating/abductor/New()
/turf/simulated/floor/plating/airless
/turf/simulated/floor/plating/asteroid
/turf/simulated/floor/plating/asteroid/New()
/turf/simulated/floor/plating/asteroid/airless
/turf/simulated/floor/plating/asteroid/airless/cave
/turf/simulated/floor/plating/asteroid/airless/cave/New(loc, var/length, var/go_backwards = 1, var/exclude_dir = -1)
/turf/simulated/floor/plating/asteroid/airless/cave/SpawnFloor(var/turf/T)
/turf/simulated/floor/plating/asteroid/airless/cave/SpawnMonster(var/turf/T)
/turf/simulated/floor/plating/asteroid/airless/cave/make_tunnel(var/dir)
/turf/simulated/floor/plating/asteroid/airless/gibtonite_remains
/turf/simulated/floor/plating/asteroid/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/turf/simulated/floor/plating/asteroid/burn_tile()
/turf/simulated/floor/plating/asteroid/ex_act(severity, target)
/turf/simulated/floor/plating/asteroid/gets_dug()
/turf/simulated/floor/plating/attackby(obj/item/C as obj, mob/user as mob, params)
/turf/simulated/floor/plating/beach
/turf/simulated/floor/plating/beach/coastline
/turf/simulated/floor/plating/beach/ex_act(severity, target)
/turf/simulated/floor/plating/beach/sand
/turf/simulated/floor/plating/beach/water
/turf/simulated/floor/plating/ironsand/New()
/turf/simulated/floor/plating/lava
/turf/simulated/floor/plating/snow
/turf/simulated/floor/plating/snow/ex_act(severity, target)
/turf/simulated/floor/plating/snow/gravsnow
/turf/simulated/floor/plating/snow/gravsnow/corner
/turf/simulated/floor/plating/snow/gravsnow/surround
/turf/simulated/floor/plating/update_icon()
/turf/simulated/floor/singularity_pull(S, current_size)
/turf/simulated/floor/update_icon()
/turf/simulated/floor/vault
/turf/simulated/floor/vines
/turf/simulated/floor/vines/ChangeTurf(turf/simulated/floor/T)
/turf/simulated/floor/vines/attackby()
/turf/simulated/floor/vines/break_tile()
/turf/simulated/floor/vines/break_tile_to_plating()
/turf/simulated/floor/vines/burn_tile()
/turf/simulated/floor/vines/ex_act(severity, target)
/turf/simulated/floor/vines/make_plating()
/turf/simulated/floor/vines/narsie_act()
/turf/simulated/floor/vines/singularity_pull(S, current_size)
/turf/simulated/floor/wood
/turf/simulated/floor/wood/attackby(obj/item/C as obj, mob/user as mob, params)
/turf/simulated/hotspot_expose(exposed_temperature, exposed_volume, soh)
/turf/simulated/last_share_check()
/turf/simulated/mimic_temperature_solid(turf/model, conduction_coefficient)
/turf/simulated/mineral
/turf/simulated/mineral/Bumped(AM as mob|obj)
/turf/simulated/mineral/HideRock()
/turf/simulated/mineral/New()
/turf/simulated/mineral/Spread(var/turf/T)
/turf/simulated/mineral/attack_animal(mob/living/simple_animal/user as mob)
/turf/simulated/mineral/attackby(var/obj/item/weapon/pickaxe/P as obj, mob/user as mob, params)
/turf/simulated/mineral/bscrystal
/turf/simulated/mineral/clown
/turf/simulated/mineral/diamond
/turf/simulated/mineral/ex_act(severity, target)
/turf/simulated/mineral/gets_drilled()
/turf/simulated/mineral/gibtonite
/turf/simulated/mineral/gibtonite/New()
/turf/simulated/mineral/gibtonite/attackby(obj/item/I, mob/user, params)
/turf/simulated/mineral/gibtonite/countdown(notify_admins = 0)
/turf/simulated/mineral/gibtonite/defuse()
/turf/simulated/mineral/gibtonite/explosive_reaction(var/mob/user = null, triggered_by_explosion = 0)
/turf/simulated/mineral/gibtonite/gets_drilled(var/mob/user, triggered_by_explosion = 0)
/turf/simulated/mineral/gold
/turf/simulated/mineral/iron
/turf/simulated/mineral/plasma
/turf/simulated/mineral/random
/turf/simulated/mineral/random/New()
/turf/simulated/mineral/random/high_chance
/turf/simulated/mineral/random/high_chance/New()
/turf/simulated/mineral/random/labormineral
/turf/simulated/mineral/random/labormineral/New()
/turf/simulated/mineral/random/low_chance
/turf/simulated/mineral/random/low_chance/New()
/turf/simulated/mineral/silver
/turf/simulated/mineral/updateMineralOverlays()
/turf/simulated/mineral/uranium
/turf/simulated/process_cell()
/turf/simulated/radiate_to_spess()
/turf/simulated/remove_air(amount as num)
/turf/simulated/return_air()
/turf/simulated/share_air(var/turf/simulated/T)
/turf/simulated/share_temperature_mutual_solid(turf/simulated/sharer, conduction_coefficient)
/turf/simulated/super_conduct()
/turf/simulated/update_visuals(datum/gas_mixture/model)
/turf/simulated/wall
/turf/simulated/wall/Destroy()
/turf/simulated/wall/New()
/turf/simulated/wall/attack_animal(var/mob/living/simple_animal/M)
/turf/simulated/wall/attack_hand(mob/user as mob)
/turf/simulated/wall/attack_hulk(mob/user)
/turf/simulated/wall/attack_paw(mob/living/user as mob)
/turf/simulated/wall/attack_tk()
/turf/simulated/wall/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/turf/simulated/wall/blob_act()
/turf/simulated/wall/break_wall()
/turf/simulated/wall/checkForMultipleDoors()
/turf/simulated/wall/cult
/turf/simulated/wall/cult/break_wall()
/turf/simulated/wall/cult/devastate_wall()
/turf/simulated/wall/cult/narsie_act()
/turf/simulated/wall/devastate_wall()
/turf/simulated/wall/dismantle_wall(devastated=0, explode=0)
/turf/simulated/wall/ex_act(severity, target)
/turf/simulated/wall/isSmoothableNeighbor(var/atom/A)
/turf/simulated/wall/mech_melee_attack(obj/mecha/M)
/turf/simulated/wall/mineral
/turf/simulated/wall/mineral/New()
/turf/simulated/wall/mineral/clown
/turf/simulated/wall/mineral/diamond
/turf/simulated/wall/mineral/diamond/thermitemelt(mob/user as mob)
/turf/simulated/wall/mineral/gold
/turf/simulated/wall/mineral/plasma
/turf/simulated/wall/mineral/plasma/PlasmaBurn(temperature)
/turf/simulated/wall/mineral/plasma/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/turf/simulated/wall/mineral/plasma/bullet_act(var/obj/item/projectile/Proj)
/turf/simulated/wall/mineral/plasma/ignite(exposed_temperature)
/turf/simulated/wall/mineral/plasma/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/turf/simulated/wall/mineral/sandstone
/turf/simulated/wall/mineral/silver
/turf/simulated/wall/mineral/uranium
/turf/simulated/wall/mineral/uranium/Bumped(AM as mob|obj)
/turf/simulated/wall/mineral/uranium/attack_hand(mob/user as mob)
/turf/simulated/wall/mineral/uranium/attackby(obj/item/weapon/W as obj, mob/user as mob, params)
/turf/simulated/wall/mineral/uranium/radiate()
/turf/simulated/wall/mineral/wood
/turf/simulated/wall/narsie_act()
/turf/simulated/wall/place_poster(obj/item/weapon/contraband/poster/P, mob/user)
/turf/simulated/wall/r_wall
/turf/simulated/wall/r_wall/attack_animal(var/mob/living/simple_animal/M)
/turf/simulated/wall/r_wall/break_wall()
/turf/simulated/wall/r_wall/devastate_wall()
/turf/simulated/wall/r_wall/rust
/turf/simulated/wall/r_wall/singularity_pull(S, current_size)
/turf/simulated/wall/r_wall/try_decon(obj/item/weapon/W as obj, mob/user as mob, turf/T as turf)
/turf/simulated/wall/r_wall/try_destroy(obj/item/weapon/W as obj, mob/user as mob, turf/T as turf)
/turf/simulated/wall/relativewall()
/turf/simulated/wall/rust
/turf/simulated/wall/shuttle
/turf/simulated/wall/shuttle/interior/copyTurf(turf/T)
/turf/simulated/wall/shuttle/relativewall()
/turf/simulated/wall/singularity_pull(S, current_size)
/turf/simulated/wall/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/turf/simulated/wall/thermitemelt(mob/user as mob)
/turf/simulated/wall/try_decon(obj/item/weapon/W as obj, mob/user as mob, turf/T as turf)
/turf/simulated/wall/try_destroy(obj/item/weapon/W as obj, mob/user as mob, turf/T as turf)
/turf/simulated/wall/try_wallmount(obj/item/weapon/W as obj, mob/user as mob, turf/T as turf)
/turf/simulated/wall/vault
/turf/simulated/wall/vault/relativewall()
/turf/singularity_act()
/turf/space
/turf/space/Assign_Destination()
/turf/space/Destroy()
/turf/space/Entered(atom/movable/A)
/turf/space/New()
/turf/space/Sandbox_Spacemove(atom/movable/A)
/turf/space/attack_paw(mob/user as mob)
/turf/space/attackby(obj/item/C, mob/user, params)
/turf/space/can_have_cabling()
/turf/space/handle_slip()
/turf/space/init_lighting()
/turf/space/levelupdate()
/turf/space/singularity_act()
/turf/space/transit
/turf/space/transit/Entered(atom/movable/AM, atom/OldLoc)
/turf/space/transit/New()
/turf/space/transit/attackby()
/turf/space/transit/horizontal
/turf/space/transit/update_icon()
/turf/space/update_lumcount(amount)
/turf/space/update_starlight()
/turf/storage_contents_dump_act(obj/item/weapon/storage/src_object, mob/user)
/turf/updateMineralOverlays()
/turf/update_lumcount(amount)
/turf/visibilityChanged()
/ui_style2icon(ui_style)
/uniqueList(var/list/L)
/uniquemergelist(var/list/first, var/list/second, var/skiprep=0)
/unix2date(timestamp, seperator = "-")
/updateallghostimages()
/updateappearance(mob/living/carbon/C)
/var
/var/const
/view_or_range(distance = world.view , center = usr , type)
/vol_by_throwforce_and_or_w_class(var/obj/item/I)
/wabbajack(mob/living/M)
/warning(msg)
/world
/world/IsBanned(key,address,computer_id)
/world/New()
/world/Reboot(var/reason, var/feedback_c, var/feedback_r, var/time)
/world/Topic(T, addr, master, key)
/world/load_configuration()
/world/load_mode()
/world/load_motd()
/world/proc/update_status()
/world/save_mode(var/the_mode)
/world/update_status()
/worldtime2text()
/xgibs(atom/location, var/list/viruses)
for(var/atom/movable/hearer in receive)
for(var/mob/M in player_list)
for(var/mob/R in receive)
if(!message)
if(compression > 0)
if(data == 1)
if(data == 1)/for(var/obj/item/device/radio/R in all_radios["[SYND_FREQ]"])
if(data == 1)/for(var/obj/item/device/radio/R in all_radios["[freq]"])
if(length(receive))
spawn(50)
